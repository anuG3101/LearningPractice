{"version":3,"file":"static/js/9987.25e5edb3.chunk.js","mappings":"4KAAA,MCgCaA,EAAY,MALzBC,WAAAA,CAAAC,I,6FAiBU,KAAKC,MAAG,WAGR,KAAIC,MAAG,CA+BhB,CAfCC,SAAAA,CAAUF,GACRG,EAAOC,KAAMJ,E,CAGfK,iBAAAA,GACEC,EAAWF,K,CAGbG,gBAAAA,IACEC,EAAAA,EAAAA,GAAYJ,KAAKK,G,CAGnBC,MAAAA,GACE,OAAOC,EAAAA,EAAAA,GAACC,EAAQ,CAAAC,IAAA,2CAACC,QAASV,M,2FChE9B,SAASW,EACPD,GAEA,OAAOE,MAAMC,KACXH,EAAQL,GAAGS,iBACTJ,aAAmBjB,EACf,wBACA,sBAGV,CAEgB,SAAAM,EAAOW,EAAmCd,GACxD,MAAM,iBAAEmB,GAAqBL,EAAQM,UAAUC,KAAKrB,GAEhDmB,IAIJL,EAAQQ,eAAiBtB,EACzBc,EAAQS,MAAMC,SAASC,IACrBA,EAAEC,MAAMC,QAAU,OACdF,EAAEzB,QAAUc,EAAQQ,iBACtBG,EAAEC,MAAMC,QAAU,YAGxB,CAEM,SAAUrB,EAAWQ,GAGzB,GAFAA,EAAQS,MAAQR,EAASD,GAErBA,EAAQS,MAAMK,OAAQ,CACxB,MAAMC,EAAgBf,EAAQQ,gBAAkBR,EAAQS,MAAM,GAAGvB,MAC7D6B,GACF1B,EAAOW,EAASe,E,CAIpBf,EAAQS,MAAMC,SAASM,IACrBA,EAAKC,iBAAiB,eAAgBC,IACpClB,EAAQS,MAAQR,EAASD,GAErBkB,EAAEC,OAAOC,WAAapB,EAAQQ,iBAChCR,EAAQQ,eAAiBU,EAAEC,OAAOE,eAI1C,C,QF3DwB,ujIGmBxB,MAkBavB,EAA+CwB,IAAgB,IAAf,QAAEtB,GAASsB,EACtE,MAAMC,EAAgBvB,EAAQS,MAAMe,WACjCR,GAASA,EAAK9B,QAAUc,EAAQQ,iBAEnC,OACEX,EAAAA,EAAAA,GAAC4B,EAAAA,EAAI,CACHC,KACE1B,aAAmBjB,EAAe,mBAAqB,gBAEzD4C,MAAO,CACLxC,KAAMa,EAAQb,QAGhBU,EAAAA,EAAAA,GAAA,OACE8B,MACE3B,aAAmBjB,EAAe,kBAAoB,iBAGxDc,EAAAA,EAAAA,GAAA,MAAI8B,MAAM,WAAW3B,EAAQd,QAC7BW,EAAAA,EAAAA,GACE,kBAAA+B,OAAK,EACLC,KAAK,KACLC,KAAMC,EAAAA,EACNC,QAAUd,GACRlB,EAAQiC,MAAM1B,KAAK,CACjB2B,KACElC,aAAmBjB,EACf,mBACA,gBACNoD,YAAajB,QAKrBrB,EAAAA,EAAAA,GAAA,WAASuC,UAA6B,IAAnBb,EAAuBA,EAAgB,GApD3CvB,IACZA,EAAQS,MAAM4B,KAAIC,IAAc,IAAb,MAAEpD,GAAOoD,EACjC,OACEzC,EAAAA,EAAAA,GACE,eAAAuC,SAAUlD,IAAUc,EAAQQ,eAC5B+B,WAAarB,GAAMA,EAAEsB,iBACrBR,QAASA,KACH9C,GACFG,EAAOW,EAASd,KAInBA,MAyCAuD,CAAYzC,KAEfH,EAAAA,EAAAA,GAAa,c,6EC1EnB,MCgCa6C,EAAS,MALtB1D,WAAAA,CAAAC,I,6FAiBU,KAAKC,MAAG,4BAGR,KAAIC,MAAG,CA+BhB,CAfCC,SAAAA,CAAUF,IACRG,EAAAA,EAAAA,GAAOC,KAAMJ,E,CAGfK,iBAAAA,IACEC,EAAAA,EAAAA,GAAWF,K,CAGbG,gBAAAA,IACEC,EAAAA,EAAAA,GAAYJ,KAAKK,G,CAGnBC,MAAAA,GACE,OAAOC,EAAAA,EAAAA,GAACC,EAAAA,EAAQ,CAAAC,IAAA,2CAACC,QAASV,M,mGD5ET,ozG","sources":["../node_modules/@siemens/ix/dist/esm/src/components/menu-settings/menu-settings.scss?tag=ix-menu-settings&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/menu-settings/menu-settings.tsx","../node_modules/@siemens/ix/dist/esm/src/components/utils/menu-tabs/menu-tabs-utils.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/menu-tabs/menu-tabs-fc.tsx","../node_modules/@siemens/ix/dist/esm/src/components/menu-about/menu-about.scss?tag=ix-menu-about&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/menu-about/menu-about.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'legacy/fonts';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  display: block;\n  background-color: var(--theme-nav-overlay--background);\n  padding: $medium-space $default-space $default-space $x-large-space;\n  flex-grow: 1;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n\n  .settings-header {\n    display: flex;\n    justify-content: space-between;\n    flex-direction: row;\n    align-items: center;\n    height: $x-large-space;\n    margin-bottom: $small-space;\n\n    h2 {\n      color: var(--theme-nav-overlay-header--color);\n      margin-bottom: 1rem;\n    }\n  }\n\n  ix-tabs {\n    margin-bottom: 1.5rem;\n  }\n\n  .settings-tabs {\n    margin-bottom: $large-space;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { MenuTabs } from '../utils/menu-tabs/menu-tabs-fc';\nimport {\n  CustomCloseEvent,\n  initialize,\n  setTab,\n} from '../utils/menu-tabs/menu-tabs-utils';\n\n@Component({\n  tag: 'ix-menu-settings',\n  styleUrl: 'menu-settings.scss',\n  shadow: true,\n})\nexport class MenuSettings {\n  @Element() el!: HTMLIxMenuSettingsElement;\n\n  /**\n   * Active tab\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable\n  @Prop({ mutable: true }) activeTabLabel?: string;\n\n  /**\n   * Label of first tab\n   */\n  @Prop() label = 'Settings';\n\n  /** @internal */\n  @Prop() show = false;\n\n  /**\n   * Active tab changed\n   * @since 3.0.0\n   */\n  @Event() tabChange!: EventEmitter<string>;\n\n  /**\n   * Popover closed\n   */\n  @Event() close!: EventEmitter<CustomCloseEvent>;\n\n  @State() items!: HTMLIxMenuSettingsItemElement[];\n\n  @Watch('activeTabLabel')\n  updateTab(label: string) {\n    setTab(this, label);\n  }\n\n  componentWillLoad() {\n    initialize(this);\n  }\n\n  componentDidLoad() {\n    forceUpdate(this.el);\n  }\n\n  render() {\n    return <MenuTabs context={this} />;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { MenuAbout } from '../../menu-about/menu-about';\nimport { MenuSettings } from '../../menu-settings/menu-settings';\n\nfunction getItems(\n  context: MenuSettings | MenuAbout\n): HTMLIxMenuSettingsItemElement[] | HTMLIxMenuAboutItemElement[] {\n  return Array.from(\n    context.el.querySelectorAll(\n      context instanceof MenuSettings\n        ? 'ix-menu-settings-item'\n        : 'ix-menu-about-item'\n    )\n  );\n}\n\nexport function setTab(context: MenuSettings | MenuAbout, label: string) {\n  const { defaultPrevented } = context.tabChange.emit(label);\n\n  if (defaultPrevented) {\n    return;\n  }\n\n  context.activeTabLabel = label;\n  context.items.forEach((i) => {\n    i.style.display = 'none';\n    if (i.label === context.activeTabLabel) {\n      i.style.display = 'block';\n    }\n  });\n}\n\nexport function initialize(context: MenuSettings | MenuAbout) {\n  context.items = getItems(context);\n\n  if (context.items.length) {\n    const selectedLabel = context.activeTabLabel || context.items[0].label;\n    if (selectedLabel) {\n      setTab(context, selectedLabel);\n    }\n  }\n\n  context.items.forEach((item) => {\n    item.addEventListener('labelChange', (e: CustomEvent) => {\n      context.items = getItems(context);\n\n      if (e.detail.oldLabel === context.activeTabLabel) {\n        context.activeTabLabel = e.detail.newLabel;\n      }\n    });\n  });\n}\n\nexport interface CustomLabelChangeEvent {\n  name: string;\n  oldLabel: string;\n  newLabel: string;\n}\n\nexport interface CustomCloseEvent {\n  nativeEvent: MouseEvent;\n  name: string;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { FunctionalComponent, h, Host } from '@stencil/core';\nimport { setTab } from './menu-tabs-utils';\nimport { MenuAbout } from '../../menu-about/menu-about';\nimport { MenuSettings } from '../../menu-settings/menu-settings';\nimport { iconClose } from '@siemens/ix-icons/icons';\n\ninterface MenuTabsProps {\n  context: MenuSettings | MenuAbout;\n}\n\nconst getTabItems = (context: MenuSettings | MenuAbout) => {\n  return context.items.map(({ label }) => {\n    return (\n      <ix-tab-item\n        selected={label === context.activeTabLabel}\n        onTabClick={(e) => e.preventDefault()}\n        onClick={() => {\n          if (label) {\n            setTab(context, label);\n          }\n        }}\n      >\n        {label}\n      </ix-tab-item>\n    );\n  });\n};\n\nexport const MenuTabs: FunctionalComponent<MenuTabsProps> = ({ context }) => {\n  const selectedIndex = context.items.findIndex(\n    (item) => item.label === context.activeTabLabel\n  );\n  return (\n    <Host\n      slot={\n        context instanceof MenuSettings ? 'ix-menu-settings' : 'ix-menu-about'\n      }\n      class={{\n        show: context.show,\n      }}\n    >\n      <div\n        class={\n          context instanceof MenuSettings ? 'settings-header' : 'about-header'\n        }\n      >\n        <h2 class=\"text-h2\">{context.label}</h2>\n        <ix-icon-button\n          ghost\n          size=\"24\"\n          icon={iconClose}\n          onClick={(e) =>\n            context.close.emit({\n              name:\n                context instanceof MenuSettings\n                  ? 'ix-menu-settings'\n                  : 'ix-menu-about',\n              nativeEvent: e,\n            })\n          }\n        ></ix-icon-button>\n      </div>\n      <ix-tabs selected={selectedIndex !== -1 ? selectedIndex : 0}>\n        {getTabItems(context)}\n      </ix-tabs>\n      <slot></slot>\n    </Host>\n  );\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'legacy/fonts';\n\n:host {\n  display: block;\n  background-color: var(--theme-nav-overlay--background);\n  padding: $medium-space $default-space $default-space $x-large-space;\n  flex-grow: 1;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n\n  .about-header {\n    display: flex;\n    justify-content: space-between;\n    flex-direction: row;\n    align-items: center;\n    height: $x-large-space;\n    margin-bottom: $small-space;\n\n    h2 {\n      color: var(--theme-nav-overlay-header--color);\n      margin-bottom: 1rem;\n    }\n  }\n\n  ix-tabs {\n    margin-bottom: 1.5rem;\n  }\n\n  ix-menu-about-item {\n    display: none;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { MenuTabs } from '../utils/menu-tabs/menu-tabs-fc';\nimport {\n  CustomCloseEvent,\n  initialize,\n  setTab,\n} from '../utils/menu-tabs/menu-tabs-utils';\n\n@Component({\n  tag: 'ix-menu-about',\n  styleUrl: 'menu-about.scss',\n  shadow: true,\n})\nexport class MenuAbout {\n  @Element() el!: HTMLIxMenuAboutElement;\n\n  /**\n   * Active tab\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable\n  @Prop({ mutable: true }) activeTabLabel?: string;\n\n  /**\n   * Content of the header\n   */\n  @Prop() label = 'About & legal information';\n\n  /** @internal */\n  @Prop() show = false;\n\n  /**\n   * Active tab changed\n   * @since 3.0.0\n   */\n  @Event() tabChange!: EventEmitter<string>;\n\n  /**\n   * About and Legal closed\n   */\n  @Event() close!: EventEmitter<CustomCloseEvent>;\n\n  @State() items!: HTMLIxMenuAboutItemElement[];\n\n  @Watch('activeTabLabel')\n  updateTab(label: string) {\n    setTab(this, label);\n  }\n\n  componentWillLoad() {\n    initialize(this);\n  }\n\n  componentDidLoad() {\n    forceUpdate(this.el);\n  }\n\n  render() {\n    return <MenuTabs context={this} />;\n  }\n}\n"],"names":["MenuSettings","constructor","hostRef","label","show","updateTab","setTab","this","componentWillLoad","initialize","componentDidLoad","forceUpdate","el","render","h","MenuTabs","key","context","getItems","Array","from","querySelectorAll","defaultPrevented","tabChange","emit","activeTabLabel","items","forEach","i","style","display","length","selectedLabel","item","addEventListener","e","detail","oldLabel","newLabel","_ref2","selectedIndex","findIndex","Host","slot","class","ghost","size","icon","iconClose","onClick","close","name","nativeEvent","selected","map","_ref","onTabClick","preventDefault","getTabItems","MenuAbout"],"sourceRoot":""}