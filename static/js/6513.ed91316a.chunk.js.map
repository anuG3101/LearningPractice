{"version":3,"file":"static/js/6513.ed91316a.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/condition-checks.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/a11y.ts","../node_modules/@siemens/ix/dist/esm/src/components/upload/upload.tsx","../node_modules/@siemens/ix/dist/esm/src/components/upload/upload.scss?tag=ix-upload&encapsulation=shadow"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport const isHttpUrl = (link: string) => {\n  if (!link) {\n    return false;\n  }\n\n  let url: URL;\n\n  try {\n    url = new URL(link);\n  } catch (e) {\n    return false;\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:';\n};\n\nexport const isSvgDataUrl = (url: string) => {\n  if (!url) {\n    return false;\n  }\n\n  if (typeof url !== 'string') {\n    return false;\n  }\n\n  return url.startsWith('data:image/svg+xml');\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { isHttpUrl, isSvgDataUrl } from './condition-checks';\n\nexport const a11yBoolean = (value: boolean | undefined) =>\n  value ? 'true' : 'false';\n\nconst kebabCaseToUpperCaseSentence = (kebabCase: string) => {\n  const withoutFilledSuffix = kebabCase.replace('-filled', '');\n  const words = withoutFilledSuffix.split('-');\n  const sentence = words\n    .map((word) => {\n      const trimWord = word.trim();\n      const digitLessWord = trimWord.replace(/\\d+/g, '');\n\n      if (digitLessWord.length === 0) {\n        return trimWord;\n      }\n\n      return digitLessWord;\n    })\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n\n  return sentence;\n};\n\nexport const getFallbackLabelFromIconName = (iconName?: string) => {\n  if (!iconName) {\n    return 'Unknown';\n  }\n\n  if (isHttpUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  if (isSvgDataUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  const label = kebabCaseToUpperCaseSentence(iconName);\n\n  if (label.length === 0) {\n    return 'Unknown';\n  }\n\n  return label;\n};\n\nexport const a11yHostAttributes = (\n  hostElement: HTMLElement,\n  ignoreAttributes: A11yAttributeName[] = []\n): Record<A11yAttributeName, string> => {\n  const attributeObject: Record<string, string> = {};\n  a11yAttributes.forEach((attr) => {\n    if (hostElement.hasAttribute(attr)) {\n      const value = hostElement.getAttribute(attr);\n      if (value !== null && !ignoreAttributes.includes(attr)) {\n        attributeObject[attr] = hostElement.getAttribute(attr) ?? '';\n        hostElement.removeAttribute(attr);\n      }\n    }\n  });\n\n  return attributeObject;\n};\n\nexport type A11yAttributeName =\n  | 'role'\n  | 'aria-activedescendant'\n  | 'aria-atomic'\n  | 'aria-autocomplete'\n  | 'aria-braillelabel'\n  | 'aria-brailleroledescription'\n  | 'aria-busy'\n  | 'aria-checked'\n  | 'aria-colcount'\n  | 'aria-colindex'\n  | 'aria-colindextext'\n  | 'aria-colspan'\n  | 'aria-controls'\n  | 'aria-current'\n  | 'aria-describedby'\n  | 'aria-description'\n  | 'aria-details'\n  | 'aria-disabled'\n  | 'aria-errormessage'\n  | 'aria-expanded'\n  | 'aria-flowto'\n  | 'aria-haspopup'\n  | 'aria-hidden'\n  | 'aria-invalid'\n  | 'aria-keyshortcuts'\n  | 'aria-label'\n  | 'aria-labelledby'\n  | 'aria-level'\n  | 'aria-live'\n  | 'aria-multiline'\n  | 'aria-multiselectable'\n  | 'aria-orientation'\n  | 'aria-owns'\n  | 'aria-placeholder'\n  | 'aria-posinset'\n  | 'aria-pressed'\n  | 'aria-readonly'\n  | 'aria-relevant'\n  | 'aria-required'\n  | 'aria-roledescription'\n  | 'aria-rowcount'\n  | 'aria-rowindex'\n  | 'aria-rowindextext'\n  | 'aria-rowspan'\n  | 'aria-selected'\n  | 'aria-setsize'\n  | 'aria-sort'\n  | 'aria-valuemax'\n  | 'aria-valuemin'\n  | 'aria-valuenow'\n  | 'aria-valuetext';\n\nconst a11yAttributes: A11yAttributeName[] = [\n  'role',\n  'aria-activedescendant',\n  'aria-atomic',\n  'aria-autocomplete',\n  'aria-braillelabel',\n  'aria-brailleroledescription',\n  'aria-busy',\n  'aria-checked',\n  'aria-colcount',\n  'aria-colindex',\n  'aria-colindextext',\n  'aria-colspan',\n  'aria-controls',\n  'aria-current',\n  'aria-describedby',\n  'aria-description',\n  'aria-details',\n  'aria-disabled',\n  'aria-errormessage',\n  'aria-expanded',\n  'aria-flowto',\n  'aria-haspopup',\n  'aria-hidden',\n  'aria-invalid',\n  'aria-keyshortcuts',\n  'aria-label',\n  'aria-labelledby',\n  'aria-level',\n  'aria-live',\n  'aria-multiline',\n  'aria-multiselectable',\n  'aria-orientation',\n  'aria-owns',\n  'aria-placeholder',\n  'aria-posinset',\n  'aria-pressed',\n  'aria-readonly',\n  'aria-relevant',\n  'aria-required',\n  'aria-roledescription',\n  'aria-rowcount',\n  'aria-rowindex',\n  'aria-rowindextext',\n  'aria-rowspan',\n  'aria-selected',\n  'aria-setsize',\n  'aria-sort',\n  'aria-valuemax',\n  'aria-valuemin',\n  'aria-valuenow',\n  'aria-valuetext',\n];\n\ntype PartialRecord<K extends A11yAttributeName, T> = {\n  [P in K]?: T;\n};\nexport type A11yAttributes = PartialRecord<A11yAttributeName, string>;\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core';\nimport { UploadFileState } from './upload-file-state';\nimport { iconError, iconSuccess } from '@siemens/ix-icons/icons';\nimport { A11yAttributes, a11yHostAttributes } from '../utils/a11y';\n\n@Component({\n  tag: 'ix-upload',\n  styleUrl: 'upload.scss',\n  shadow: true,\n})\nexport class Upload {\n  /**\n   * The accept attribute specifies the types of files that the server accepts (that can be submitted through a file upload).\n   * [accept]{@link \"https://www.w3schools.com/tags/att_input_accept.asp\"}\n   */\n  @Prop() accept?: string;\n\n  /**\n   * If multiple is true the user can drop or select multiple files\n   */\n  @Prop() multiple = false;\n\n  /**\n   * Whether the text should wrap to more than one line\n   */\n  @Prop() multiline = false;\n\n  /**\n   * Disable all input events\n   */\n  @Prop() disabled = false;\n\n  /**\n   * After a file is uploaded you can set the upload component to a defined state\n   */\n  @Prop() state: UploadFileState = UploadFileState.SELECT_FILE;\n\n  /**\n   * Will be used by state = UploadFileState.SELECT_FILE\n   */\n  @Prop() selectFileText = '+ Drag files here or…';\n\n  /**\n   * Will be used by state = UploadFileState.LOADING\n   */\n  @Prop() loadingText = 'Checking files…';\n\n  /**\n   * Will be used by state = UploadFileState.UPLOAD_FAILED\n   */\n  @Prop() uploadFailedText = 'Upload failed. Please try again.';\n\n  /**\n   * Will be used by state = UploadFileState.UPLOAD_SUCCESSED\n   */\n  @Prop() uploadSuccessText = 'Upload successful';\n\n  /**\n   * Label for upload file button\n   */\n  @Prop() i18nUploadFile = 'Upload file…';\n\n  /**\n   * Text for disabled state\n   */\n  @Prop() i18nUploadDisabled = 'File upload currently not possible.';\n\n  /**\n   * You get an array of Files after drop-action or browse action is finished\n   */\n  @Event() filesChanged!: EventEmitter<Array<File>>;\n\n  @Element() hostElement!: HTMLIxUploadElement;\n\n  get inputElement(): HTMLInputElement {\n    return this.hostElement.shadowRoot!.querySelector('#upload-browser')!;\n  }\n\n  @State() isFileOver = false;\n\n  private filesToUpload?: Array<File>;\n\n  private a11y: A11yAttributes = {};\n\n  constructor() {}\n\n  componentWillLoad() {\n    this.a11y = a11yHostAttributes(this.hostElement);\n  }\n\n  private fileDropped(evt: DragEvent) {\n    evt.preventDefault();\n\n    if (this.disabled) {\n      return;\n    }\n\n    if (!evt.dataTransfer) {\n      return;\n    }\n\n    const file: File | FileList = evt.dataTransfer.files;\n    this.isFileOver = false;\n\n    this.filesToUpload = this.convertToFileArray(file);\n    this.filesChanged.emit(this.filesToUpload);\n  }\n\n  private fileOver(event: DragEvent) {\n    if (!event.dataTransfer) {\n      return;\n    }\n\n    if (this.state !== UploadFileState.LOADING) {\n      event.preventDefault();\n      event.dataTransfer.dropEffect = 'move';\n    }\n\n    if (!this.multiple && event.dataTransfer.items.length > 1) {\n      event.preventDefault();\n      event.stopPropagation();\n      event.dataTransfer.effectAllowed = 'none';\n      event.dataTransfer.dropEffect = 'none';\n    } else {\n      this.isFileOver = true;\n    }\n  }\n\n  private fileLeave() {\n    this.isFileOver = false;\n  }\n\n  private fileChangeEvent(event: Event) {\n    if (this.disabled) {\n      return;\n    }\n\n    if (!event.target) {\n      return;\n    }\n\n    this.filesToUpload = this.convertToFileArray(\n      (event.target as HTMLInputElement).files\n    );\n\n    this.filesChanged.emit(this.filesToUpload);\n\n    // Workaround for bug in native input element, that prevents the user from uploading\n    // a file with the same name as the most recent one, but with changed content.\n    this.inputElement.type = '';\n    this.inputElement.type = 'file';\n  }\n\n  private convertToFileArray(filesFromEvent: FileList | File | null): File[] {\n    let files = [];\n\n    if (!filesFromEvent) {\n      return [];\n    }\n\n    if (filesFromEvent instanceof FileList) {\n      files = Array.from(filesFromEvent);\n    } else {\n      files = [filesFromEvent];\n    }\n    return files;\n  }\n\n  private renderUploadState() {\n    if (this.disabled) {\n      return (\n        <span class=\"state\">\n          <span class=\"upload-text\">{this.i18nUploadDisabled}</span>\n        </span>\n      );\n    }\n\n    switch (this.state) {\n      case UploadFileState.SELECT_FILE:\n        return (\n          <span class=\"state\">\n            <span class=\"upload-text\">{this.selectFileText}</span>\n          </span>\n        );\n      case UploadFileState.LOADING:\n        return (\n          <span class=\"state\">\n            <ix-spinner variant=\"primary\"></ix-spinner>\n            <span class=\"upload-text\">{this.loadingText}</span>\n          </span>\n        );\n      case UploadFileState.UPLOAD_FAILED:\n        return (\n          <span class=\"state\">\n            <ix-icon name={iconError} class=\"icon-error\"></ix-icon>\n            <span class=\"upload-text\">{this.uploadFailedText}</span>\n          </span>\n        );\n      case UploadFileState.UPLOAD_SUCCESSED:\n        return (\n          <span class=\"state\">\n            <ix-icon name={iconSuccess} class=\"icon-success\"></ix-icon>\n            <span class=\"upload-text\">{this.uploadSuccessText}</span>\n          </span>\n        );\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Set files\n   * @param obj\n   */\n  @Method()\n  async setFilesToUpload(obj: any) {\n    this.filesToUpload = obj;\n  }\n\n  render() {\n    const disabled = this.disabled || this.state === UploadFileState.LOADING;\n    const { 'aria-label': ariaLabel = 'Upload files', ...a11y } = this.a11y;\n    return (\n      <Host {...a11y} aria-disabled={disabled}>\n        <div\n          class={{\n            'file-upload-area': true,\n            'file-over':\n              this.state !== UploadFileState.LOADING && this.isFileOver,\n            checking: this.state === UploadFileState.LOADING,\n            disabled: this.disabled,\n            multiline: this.multiline,\n          }}\n          onDrop={(e) => {\n            if (this.state !== UploadFileState.LOADING) {\n              this.fileDropped(e);\n            }\n          }}\n          onDragOver={(e) => this.fileOver(e)}\n          onDragLeave={() => this.fileLeave()}\n          draggable={!this.disabled}\n        >\n          {this.renderUploadState()}\n          <div>\n            <input\n              aria-label={ariaLabel}\n              aria-disabled={disabled}\n              multiple={this.multiple}\n              type=\"file\"\n              class=\"upload-browser\"\n              id=\"upload-browser\"\n              tabindex=\"-1\"\n              onChange={(e) => {\n                this.fileChangeEvent(e);\n              }}\n              accept={this.accept}\n              disabled={disabled}\n            />\n            <ix-button\n              aria-disabled={disabled}\n              outline\n              onClick={() => this.inputElement.click()}\n              disabled={disabled}\n            >\n              {this.i18nUploadFile}\n            </ix-button>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/shadow-dom/component';\n@import 'mixins/text-truncation';\n\n:host {\n  @include ix-component;\n  display: block;\n  min-height: 4rem;\n  height: 4rem;\n\n  .file-upload-area {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    overflow: hidden;\n\n    height: 100%;\n    width: 100%;\n\n    padding: $default-space;\n\n    border: 1px dashed var(--theme-upload--border-color);\n    border-radius: var(--theme-upload--border-radius);\n    color: var(--theme-upload-text--color);\n\n    &.multiline {\n      max-height: unset;\n      height: auto;\n\n      .glyph {\n        align-self: flex-start;\n        margin-block-start: 3px;\n      }\n\n      > div {\n        align-self: flex-start;\n      }\n    }\n\n    &:not(.multiline) {\n      .state,\n      .upload-text {\n        @include ellipsis;\n      }\n    }\n\n    &:not(.disabled).file-over {\n      border-color: var(--theme-upload--border-color--dragover);\n      border-style: solid;\n    }\n\n    &.checking {\n      color: var(--theme-upload-text--color--checking);\n      border-style: solid;\n    }\n\n    &.disabled {\n      border-style: solid;\n      color: var(--theme-upload-text--color--disabled);\n    }\n\n    ix-button {\n      margin-inline-start: $default-space;\n    }\n\n    .upload-browser {\n      border: 0;\n      clip: rect(0 0 0 0);\n      height: 1px;\n      margin: -1px;\n      overflow: hidden;\n      padding: 0;\n      position: absolute;\n      width: 1px;\n    }\n\n    .loader {\n      margin: 2.187rem auto;\n      font-size: 0.937rem;\n      width: $default-space;\n      height: $default-space;\n      border-radius: 50%;\n      position: relative;\n      text-indent: -9999em;\n      animation: optimise-loading 1.1s infinite ease;\n      transform: translateZ(0);\n    }\n\n    .upload-filename {\n      margin-bottom: $default-space;\n    }\n\n    .state {\n      display: flex;\n      align-items: center;\n\n      > ix-spinner {\n        margin-inline-end: $small-space;\n      }\n\n      > ix-icon {\n        margin-inline-end: $small-space;\n\n        &.icon-error {\n          color: var(--theme-color-alarm);\n        }\n\n        &.icon-success {\n          color: var(--theme-color-success);\n        }\n      }\n    }\n  }\n}\n\n:host(.disabled) {\n  pointer-events: none;\n}\n"],"names":["a11yBoolean","value","getFallbackLabelFromIconName","iconName","link","url","URL","e","protocol","isHttpUrl","startsWith","label","replace","split","map","word","trimWord","trim","digitLessWord","length","charAt","toUpperCase","slice","join","a11yHostAttributes","hostElement","ignoreAttributes","arguments","undefined","attributeObject","a11yAttributes","forEach","attr","hasAttribute","getAttribute","includes","_a","removeAttribute","Upload","inputElement","this","shadowRoot","querySelector","constructor","hostRef","multiple","multiline","disabled","state","UploadFileState","SELECT_FILE","selectFileText","loadingText","uploadFailedText","uploadSuccessText","i18nUploadFile","i18nUploadDisabled","isFileOver","a11y","componentWillLoad","fileDropped","evt","preventDefault","dataTransfer","file","files","filesToUpload","convertToFileArray","filesChanged","emit","fileOver","event","LOADING","dropEffect","items","stopPropagation","effectAllowed","fileLeave","fileChangeEvent","target","type","filesFromEvent","FileList","Array","from","renderUploadState","h","class","variant","UPLOAD_FAILED","name","iconError","UPLOAD_SUCCESSED","iconSuccess","setFilesToUpload","obj","render","ariaLabel","__rest","Host","Object","assign","key","checking","onDrop","onDragOver","onDragLeave","draggable","id","tabindex","onChange","accept","outline","onClick","click"],"sourceRoot":""}