{"version":3,"file":"static/js/7125.150030a0.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/drawer/drawer.scss?tag=ix-drawer&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/drawer/drawer.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'mixins/shadow-dom/component';\n@import 'mixins/shadows';\n@import 'common-variables';\n\n:host {\n  @include ix-component;\n\n  top: 0;\n  right: 0;\n  @include box-shadow(3);\n\n  display: block;\n  position: absolute;\n  justify-content: flex-start;\n  align-items: center;\n  opacity: 0;\n\n  max-height: 100vh;\n  min-height: $large-space;\n  background-color: var(--theme-color-1);\n  border-radius: $default-border-radius;\n\n  .drawer-container {\n    z-index: 100;\n  }\n\n  .header {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-end;\n    padding: 0.5rem;\n    width: 100%;\n    order: 1;\n\n    .header-content {\n      flex-grow: 1;\n      margin-right: $default-space;\n    }\n  }\n\n  .content {\n    position: relative;\n    flex: 1;\n    order: 2;\n    height: 100%;\n    width: 100%;\n    overflow-y: auto;\n  }\n}\n\n:host(.display-none) {\n  display: none;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { iconClose } from '@siemens/ix-icons/icons';\nimport {\n  Component,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\nimport anime from 'animejs';\n\n@Component({\n  tag: 'ix-drawer',\n  styleUrl: 'drawer.scss',\n  shadow: true,\n})\nexport class Drawer {\n  /**\n   * Show or hide the drawer\n   */\n  @Prop({ mutable: true }) show = false;\n\n  /**\n   * Fired in case of an outside click during drawer showed state\n   */\n  @Prop() closeOnClickOutside = true;\n\n  /**\n   * Render the drawer with maximum height\n   */\n  @Prop() fullHeight = false;\n\n  /**\n   * Min width interpreted as REM\n   */\n  @Prop() minWidth = 16;\n\n  /**\n   * Max width interpreted as REM\n   */\n  @Prop() maxWidth = 28;\n\n  /**\n   * Width interpreted as REM if not set to 'auto'\n   */\n  @Prop() width: number | 'auto' = this.minWidth;\n\n  /**\n   * Fire event after drawer is open\n   */\n  @Event() open!: EventEmitter;\n\n  /**\n   * Fire event after drawer is close\n   */\n  @Event() drawerClose!: EventEmitter;\n\n  toggle = false;\n\n  private static duration = 300;\n  private callback = this.clickedOutside.bind(this);\n  private divElement?: HTMLElement;\n\n  @State() showContent = true;\n\n  @Watch('show')\n  onShowChanged(newValue: boolean, oldValue?: boolean) {\n    if (newValue === oldValue) {\n      return;\n    }\n\n    this.toggleDrawer(newValue);\n  }\n\n  /**\n   * Toggle or define show state of drawer\n   * @param show Overwrite toggle state with boolean\n   */\n  @Method()\n  async toggleDrawer(show?: boolean): Promise<void> {\n    show = show ?? !this.show;\n\n    if (show) {\n      const { defaultPrevented } = this.open.emit();\n\n      if (defaultPrevented) {\n        return;\n      }\n\n      this.show = true;\n      if (!this.toggle && this.divElement) {\n        this.slideInRight(this.divElement);\n        setTimeout(() => {\n          window.addEventListener('mousedown', this.callback);\n        }, Drawer.duration);\n      }\n    } else {\n      const { defaultPrevented } = this.drawerClose.emit();\n\n      if (defaultPrevented) {\n        return;\n      }\n\n      this.show = false;\n\n      if (this.toggle && this.divElement) {\n        this.slideOutRight(this.divElement);\n      }\n\n      window.removeEventListener('mousedown', this.callback);\n    }\n\n    this.toggle = this.show;\n\n    return Promise.resolve();\n  }\n\n  private onCloseClicked() {\n    this.toggleDrawer(false);\n  }\n\n  private clickedOutside(evt: any) {\n    if (!this.closeOnClickOutside) {\n      return;\n    }\n\n    const target = evt.target;\n    const closestElement = target.closest('#div-container');\n    const btn = target.closest('#drawer-btn');\n\n    if (\n      evt.target.type !== 'button' &&\n      closestElement !== this.divElement &&\n      target !== btn\n    ) {\n      this.show = false;\n    }\n  }\n\n  private getConstrainedWidth(width: number) {\n    return Math.min(Math.max(width, this.minWidth), this.maxWidth);\n  }\n\n  private slideOutRight(el: HTMLElement) {\n    const initialWidth = `${this.getConstrainedWidth(\n      this.width === 'auto' ? this.minWidth : this.width\n    )}rem`;\n\n    anime({\n      targets: el,\n      duration: Drawer.duration,\n      width: [initialWidth, 0],\n      opacity: [1, 0],\n      easing: 'easeInSine',\n      complete: () => {\n        el.classList.add('display-none');\n      },\n    });\n  }\n\n  private slideInRight(el: HTMLElement) {\n    const targetWidth = `${this.getConstrainedWidth(\n      this.width === 'auto' ? this.minWidth : this.width\n    )}rem`;\n\n    anime({\n      targets: el,\n      duration: Drawer.duration,\n      width: [0, targetWidth],\n      opacity: [0, 1],\n      easing: 'easeOutSine',\n      begin: () => {\n        el.classList.remove('display-none');\n      },\n      complete: () => {\n        this.showContent = true;\n      },\n    });\n  }\n\n  componentDidLoad() {\n    this.toggleDrawer(this.show);\n  }\n\n  render() {\n    return (\n      <Host\n        class={{\n          'drawer-container': true,\n          'display-none': true,\n        }}\n        style={{\n          width: '0',\n          'max-width': `${this.maxWidth}rem`,\n          height: this.fullHeight ? '100%' : 'auto',\n          overflow: 'hidden',\n        }}\n        ref={(el) => (this.divElement = el as HTMLElement)}\n        data-testid=\"container\"\n        id=\"div-container\"\n      >\n        <div\n          style={{\n            width:\n              this.width === 'auto'\n                ? 'auto'\n                : `${this.getConstrainedWidth(this.width)}rem`,\n          }}\n        >\n          <div class=\"header\">\n            <div class=\"header-content\">\n              <slot name=\"header\"></slot>\n            </div>\n            <ix-icon-button\n              class=\"close-button\"\n              style={{\n                display: this.showContent ? 'block' : 'none',\n              }}\n              icon={iconClose}\n              size=\"24\"\n              ghost\n              onClick={() => this.onCloseClicked()}\n              data-testid=\"close-button\"\n            ></ix-icon-button>\n          </div>\n          <div\n            class=\"content\"\n            style={{\n              display: this.showContent ? 'block' : 'none',\n            }}\n          >\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"names":["Drawer","constructor","hostRef","show","closeOnClickOutside","fullHeight","minWidth","maxWidth","width","this","toggle","callback","clickedOutside","bind","showContent","onShowChanged","newValue","oldValue","toggleDrawer","defaultPrevented","open","emit","divElement","slideInRight","setTimeout","window","addEventListener","duration","drawerClose","slideOutRight","removeEventListener","Promise","resolve","onCloseClicked","evt","target","closestElement","closest","btn","type","getConstrainedWidth","Math","min","max","el","initialWidth","concat","anime","targets","opacity","easing","complete","classList","add","targetWidth","begin","remove","componentDidLoad","render","h","Host","key","class","style","height","overflow","ref","id","name","display","icon","iconClose","size","ghost","onClick"],"sourceRoot":""}