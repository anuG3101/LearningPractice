{"version":3,"file":"static/js/8536.b3309c5b.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/shadow-dom.ts","../node_modules/@siemens/ix/dist/esm/src/components/button/base-button.tsx","../node_modules/@siemens/ix/dist/esm/src/components/utils/make-ref.ts","../node_modules/@siemens/ix/dist/esm/src/components/avatar/avatar.tsx","../node_modules/@siemens/ix/dist/esm/src/components/avatar/avatar.scss?tag=ix-avatar&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/menu-avatar-item/menu-avatar-item.scss?tag=ix-menu-avatar-item&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/menu-avatar-item/menu-avatar-item.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function closestElement(selector: string, el: any): null | Element {\n  if (!el) {\n    return null;\n  }\n  return (\n    el.closest(selector) ||\n    closestElement(selector, (el.getRootNode() as any).host)\n  );\n}\n\nexport function getSlottedElements<R = any>(slot: any): R[] {\n  return slot.assignedElements({ flatten: true });\n}\n\nexport function hasSlottedElements(slot: any) {\n  if (!slot) {\n    return false;\n  }\n  return slot.assignedElements({ flatten: true }).length !== 0;\n}\n\nexport function containsElement(target: Element, element: Element) {\n  const hasShadowDom = target.shadowRoot;\n\n  if (hasShadowDom) {\n    target.contains(element) || target.shadowRoot.contains(element);\n  }\n\n  return target.contains(element);\n}\n\nexport function closestPassShadow(node: Node, selector: string) {\n  if (!node) {\n    return null;\n  }\n\n  if (node instanceof ShadowRoot) {\n    return closestPassShadow(node.host, selector);\n  }\n\n  if (node instanceof HTMLElement) {\n    if (node.matches(selector)) {\n      return node;\n    } else {\n      return closestPassShadow(node.parentNode!, selector);\n    }\n  }\n\n  return closestPassShadow(node.parentNode!, selector);\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { FunctionalComponent, h } from '@stencil/core';\nimport { A11yAttributes } from '../utils/a11y';\nimport { ButtonVariant } from './button';\n\nexport type ButtonAlignment = 'center' | 'start';\n\nconst isDanger = (variant: string) => {\n  return variant.toUpperCase() === 'Danger'.toUpperCase();\n};\n\nconst isPrimary = (variant: string) => {\n  return variant.toUpperCase() === 'Primary'.toUpperCase();\n};\n\nconst isSecondary = (variant: string) => {\n  return variant.toUpperCase() === 'Secondary'.toUpperCase();\n};\n\nexport const getButtonClasses = (\n  variant: ButtonVariant,\n  outline: boolean,\n  ghost: boolean,\n  iconOnly = false,\n  iconOval = false,\n  selected: boolean,\n  disabled: boolean\n) => {\n  return {\n    btn: true,\n    'btn-danger': isDanger(variant) && !outline && !ghost,\n    'btn-outline-danger': isDanger(variant) && outline && !ghost,\n    'btn-invisible-danger': isDanger(variant) && !outline && ghost,\n    'btn-primary': isPrimary(variant) && !outline && !ghost,\n    'btn-outline-primary': isPrimary(variant) && outline && !ghost,\n    'btn-invisible-primary': isPrimary(variant) && !outline && ghost,\n    'btn-secondary': isSecondary(variant) && !outline && !ghost,\n    'btn-outline-secondary': isSecondary(variant) && outline && !ghost,\n    'btn-invisible-secondary': isSecondary(variant) && !outline && ghost,\n    'btn-icon': iconOnly,\n    'btn-oval': iconOval,\n    selected: selected,\n    disabled: disabled,\n  };\n};\n\nexport type BaseButtonProps = {\n  type: string;\n  variant: ButtonVariant;\n  outline: boolean;\n  ghost: boolean;\n  iconOnly: boolean;\n  iconOval: boolean;\n  selected: boolean;\n  disabled: boolean;\n  loading: boolean;\n  icon?: string;\n  onClick?: Function;\n  ariaAttributes?: A11yAttributes;\n  extraClasses?: { [key: string]: boolean };\n  iconSize?: string;\n  iconColor?: string;\n  alignment?: ButtonAlignment;\n  tabIndex?: number;\n  afterContent?: any;\n};\n\nconst getSpinnerSize = (btnProps: BaseButtonProps) => {\n  if (!btnProps.icon) {\n    return 'small';\n  }\n\n  switch (btnProps.iconSize) {\n    case '12':\n      return 'xx-small';\n    case '16':\n      return 'x-small';\n    default:\n      return 'small';\n  }\n};\n\nexport const BaseButton: FunctionalComponent<BaseButtonProps> = (\n  props: BaseButtonProps,\n  children\n) => {\n  const extraClasses = props.extraClasses ?? {};\n\n  const ariaAttributes = props.ariaAttributes ?? {};\n  if (!ariaAttributes['aria-disabled'] && props.disabled) {\n    ariaAttributes['aria-disabled'] = 'true';\n  }\n\n  return (\n    <button\n      {...ariaAttributes}\n      onClick={(e: Event) => (props.onClick ? props.onClick(e) : undefined)}\n      tabindex={props.disabled ? -1 : (props.tabIndex ?? 0)}\n      type={props.type}\n      class={{\n        ...getButtonClasses(\n          props.variant,\n          props.outline,\n          props.ghost,\n          props.iconOnly,\n          props.iconOval,\n          props.selected,\n          props.disabled || props.loading\n        ),\n        ...extraClasses,\n      }}\n    >\n      {props.loading ? (\n        <ix-spinner size={getSpinnerSize(props)} hideTrack></ix-spinner>\n      ) : null}\n      {props.icon && !props.loading ? (\n        <ix-icon\n          class=\"icon\"\n          name={props.icon}\n          size={props.iconSize as any}\n          color={props.iconColor}\n        ></ix-icon>\n      ) : null}\n      <div\n        class={{\n          content: true,\n          [`content-${props.alignment}`]: !!props.alignment,\n        }}\n      >\n        {children}\n      </div>\n      {props.afterContent ? props.afterContent : null}\n    </button>\n  );\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport type MakeRef<T> = {\n  (ref: T | undefined | null): void;\n  current: T | null;\n  waitForCurrent(): Promise<T>;\n};\n\ntype Resolve<T> = (value: T) => void;\n\nexport function makeRef<T>(\n  currentChangedCallback?: (element: T) => void\n): MakeRef<T> {\n  let resolve: Resolve<T> | undefined = undefined;\n  let currentPromise = new Promise<T>((res) => (resolve = res));\n  let current: T | undefined = undefined;\n\n  const setRefFunction = (ref: T | undefined) => {\n    if (ref === undefined) {\n      return;\n    }\n    current = (setRefFunction as MakeRef<T>).current = ref;\n    currentChangedCallback?.(ref);\n    resolve?.(ref);\n  };\n\n  setRefFunction.current = current as T | null;\n\n  setRefFunction.waitForCurrent = async () => {\n    await currentPromise;\n    return current;\n  };\n\n  return setRefFunction as MakeRef<T>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Fragment,\n  h,\n  Host,\n  Prop,\n  readTask,\n  State,\n} from '@stencil/core';\nimport { BaseButton } from '../button/base-button';\nimport { closestElement, hasSlottedElements } from '../utils/shadow-dom';\n\nfunction DefaultAvatar(props: { initials?: string }) {\n  const { initials } = props;\n\n  if (initials) {\n    return <div class={'avatar-initials'}>{initials}</div>;\n  }\n\n  return (\n    <svg\n      class={'avatar-image'}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"32\"\n      height=\"32\"\n      viewBox=\"0 0 32 32\"\n    >\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path\n          id=\"avatar-path-background\"\n          d=\"M16 0C7.163 0 0 7.163 0 16s7.163 16 16 16 16-7.163\n          16-16c0-4.243-1.686-8.313-4.686-11.314C24.314 1.686 20.244 0 16 0z\"\n        />\n        <path\n          id=\"avatar-path-person\"\n          d=\"M17.897 17.91c3.8-.018 7.358 1.875 9.485 5.046-2.417 3.999-6.734 6.434-11.382\n        6.42-4.648.014-8.965-2.421-11.382-6.42 2.127-3.171 5.685-5.064\n        9.485-5.045h3.794zM15.821 2.129c3.682 0 6.667 2.984 6.667 6.666 0 3.682-2.985\n        6.667-6.667 6.667s-6.667-2.985-6.667-6.667 2.985-6.666 6.667-6.666z\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nfunction AvatarImage(props: { image?: string; initials?: string }) {\n  return (\n    <div class=\"avatar\">\n      {props.image ? (\n        <img src={props.image} class=\"avatar-image\"></img>\n      ) : (\n        <DefaultAvatar initials={props.initials} />\n      )}\n    </div>\n  );\n}\n\nfunction UserInfo(props: {\n  image?: string;\n  initials?: string;\n  userName: string;\n  extra?: string;\n}) {\n  return (\n    <Fragment>\n      <div class=\"user-info\" onClick={(event) => event.preventDefault()}>\n        <AvatarImage image={props.image} initials={props.initials} />\n        <div class=\"user\">\n          <div class=\"username\">{props.userName}</div>\n          {props.extra && (\n            <ix-typography class=\"extra\" text-color={'soft'}>\n              {props.extra}\n            </ix-typography>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\n@Component({\n  tag: 'ix-avatar',\n  styleUrl: 'avatar.scss',\n  shadow: true,\n})\nexport class Avatar {\n  @Element() hostElement!: HTMLIxAvatarElement;\n\n  /**\n   * Display an avatar image\n   *\n   */\n  @Prop() image?: string;\n\n  /**\n   * Display the initials of the user. Will be overwritten by image\n   *\n   */\n  @Prop() initials?: string;\n\n  /**\n   * If set an info card displaying the username will be placed inside the dropdown.\n   * Note: Only working if avatar is part of the ix-application-header\n   */\n  @Prop() username?: string;\n\n  /**\n   * Optional description text that will be displayed underneath the username.\n   * Note: Only working if avatar is part of the ix-application-header\n   */\n  @Prop() extra?: string;\n\n  @State() isClosestApplicationHeader = false;\n  @State() hasSlottedElements = false;\n\n  private slotElement?: HTMLSlotElement;\n  private dropdownElement?: HTMLIxDropdownElement;\n\n  componentWillLoad() {\n    const closest = closestElement('ix-application-header', this.hostElement);\n    this.isClosestApplicationHeader = closest !== null;\n  }\n\n  private async slottedChanged() {\n    this.hasSlottedElements = hasSlottedElements(this.slotElement);\n  }\n\n  private resolveAvatarTrigger() {\n    return new Promise<HTMLElement>((resolve, reject) => {\n      readTask(() => {\n        const button = this.hostElement.shadowRoot!.querySelector('button');\n        if (button) {\n          resolve(button);\n        } else {\n          reject(new Error('ix-avatar - trigger element not found'));\n        }\n      });\n    });\n  }\n\n  private onDropdownClick(event: MouseEvent) {\n    if (event.target === this.dropdownElement) {\n      event.preventDefault();\n    }\n  }\n\n  render() {\n    if (this.isClosestApplicationHeader) {\n      return (\n        <Host slot=\"ix-application-header-avatar\" class={'avatar-button'}>\n          <BaseButton\n            disabled={false}\n            ghost={true}\n            iconOval={false}\n            icon={undefined}\n            iconOnly={false}\n            loading={false}\n            outline={false}\n            selected={false}\n            type=\"button\"\n            variant=\"primary\"\n          >\n            <AvatarImage image={this.image} initials={this.initials} />\n          </BaseButton>\n          <ix-dropdown\n            ref={(ref) => (this.dropdownElement = ref as HTMLIxDropdownElement)}\n            trigger={this.resolveAvatarTrigger()}\n            class=\"avatar-dropdown\"\n            onClick={(e) => this.onDropdownClick(e)}\n          >\n            {this.username && (\n              <Fragment>\n                <UserInfo\n                  extra={this.extra}\n                  image={this.image}\n                  initials={this.initials}\n                  userName={this.username}\n                />\n                {this.hasSlottedElements && (\n                  <ix-divider onClick={(e) => e.preventDefault()}></ix-divider>\n                )}\n              </Fragment>\n            )}\n            <slot\n              onSlotchange={() => this.slottedChanged()}\n              ref={(ref) => (this.slotElement = ref as HTMLSlotElement)}\n            ></slot>\n          </ix-dropdown>\n        </Host>\n      );\n    }\n\n    return (\n      <Host>\n        <AvatarImage image={this.image} initials={this.initials} />\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/text-truncation';\n@import 'mixins/hover';\n@import './../button/button-mixin';\n@import 'mixins/scrollbar';\n\n:host {\n  @include scrollbar();\n  display: flex;\n  position: relative;\n  width: fit-content;\n\n  .avatar {\n    display: flex;\n    align-items: center;\n\n    > .avatar-image {\n      height: 2rem;\n      width: 2rem;\n      min-height: 2rem;\n      min-width: 2rem;\n      border-radius: 100px;\n    }\n\n    > .avatar-initials {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 2rem;\n      width: 2rem;\n      min-height: 2rem;\n      min-width: 2rem;\n      border-radius: 100px;\n      background-color: var(--theme-avatar--background);\n      color: var(--theme-avatar--color);\n    }\n\n    #avatar-path-background {\n      fill: var(--theme-avatar--background);\n    }\n\n    #avatar-path-person {\n      fill:var(--theme-avatar--color);\n    }\n  }\n}\n\n:host {\n  .user-info {\n    display: flex;\n    flex-direction: row;\n    position: relative;\n    height: 2.5rem;\n    padding: 1rem;\n    width: 12.75rem;\n    min-width: 12.75rem;\n    max-width: 12.75rem;\n\n    gap: 1rem;\n\n    .avatar {\n      width: 2rem;\n      pointer-events: none;\n    }\n\n    .user {\n      display: flex;\n      position: relative;\n      flex-direction: column;\n      justify-content: center;\n      max-width: 10rem;\n      width: 100%;\n      overflow: hidden;\n    }\n\n    .username {\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .extra {\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n}\n\n:host(.avatar-button) {\n  button {\n    @include btn-base;\n    padding: 0px;\n\n    border-radius: 100px !important;\n  }\n\n  @include btn-base-variant('invisible-primary', false);\n\n  .avatar {\n    transform: scale(0.8);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n  display: block;\n  color: var(--theme-color-std-text);\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n} from '@stencil/core';\nimport { DropdownItemWrapper } from '../dropdown/dropdown-controller';\nimport { makeRef } from '../utils/make-ref';\n\n@Component({\n  tag: 'ix-menu-avatar-item',\n  styleUrl: 'menu-avatar-item.scss',\n  shadow: true,\n})\nexport class MenuAvatarItem implements DropdownItemWrapper {\n  @Element() hostElement!: HTMLIxMenuAvatarItemElement;\n\n  /**\n   * Avatar dropdown icon\n   */\n  @Prop() icon?: string;\n\n  /**\n   * Avatar dropdown label\n   */\n  @Prop() label?: string;\n\n  /**\n   * Avatar dropdown item clicked\n   */\n  @Event() itemClick!: EventEmitter<MouseEvent>;\n\n  private dropdownItemRef = makeRef<HTMLIxDropdownItemElement>();\n\n  /** @internal */\n  @Method()\n  async getDropdownItemElement() {\n    return this.dropdownItemRef.waitForCurrent();\n  }\n\n  render() {\n    return (\n      <ix-dropdown-item\n        ref={this.dropdownItemRef}\n        icon={this.icon}\n        label={this.label}\n        onClick={(e) => this.itemClick.emit(e)}\n      ></ix-dropdown-item>\n    );\n  }\n}\n"],"names":["closestElement","selector","el","closest","getRootNode","host","getSlottedElements","slot","assignedElements","flatten","hasSlottedElements","length","closestPassShadow","node","ShadowRoot","HTMLElement","matches","parentNode","isDanger","variant","toUpperCase","isPrimary","isSecondary","getButtonClasses","outline","ghost","iconOnly","arguments","undefined","iconOval","selected","disabled","btn","getSpinnerSize","btnProps","icon","iconSize","BaseButton","props","children","extraClasses","_a","ariaAttributes","_b","h","Object","assign","onClick","e","tabindex","_c","tabIndex","type","class","loading","size","hideTrack","name","color","iconColor","content","concat","alignment","afterContent","makeRef","currentChangedCallback","resolve","current","currentPromise","Promise","res","setRefFunction","ref","waitForCurrent","async","DefaultAvatar","initials","xmlns","width","height","viewBox","fill","id","d","AvatarImage","image","src","UserInfo","Fragment","event","preventDefault","userName","extra","Avatar","constructor","hostRef","isClosestApplicationHeader","componentWillLoad","this","hostElement","slottedChanged","slotElement","resolveAvatarTrigger","reject","readTask","button","shadowRoot","querySelector","Error","onDropdownClick","target","dropdownElement","render","Host","trigger","username","onSlotchange","MenuAvatarItem","dropdownItemRef","getDropdownItemElement","key","label","itemClick","emit"],"sourceRoot":""}