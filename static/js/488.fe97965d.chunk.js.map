{"version":3,"file":"static/js/488.fe97965d.chunk.js","mappings":"yLAAA,MC8BaA,EAAU,MALvBC,WAAAA,CAAAC,I,yHAMmB,KAAAC,iBAAoC,CACnDC,QAAS,YACTC,SAAS,EACTC,OAAO,EACPC,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,KAAM,GACNC,SAAS,EACTC,UAAU,EACVC,KAAM,UAGS,KAAaC,cAAG,EAOzB,KAAQC,UAAG,EAMX,KAASC,UAAG,GAKZ,KAAaC,eAAG,EAKhB,KAAKC,MAAW,EAKC,KAAYC,aAAG,EAKhC,KAAQC,SAAG,OAKX,KAAMC,OAAG,KAMT,KAASC,UAAG,OAsMrB,CA1LSC,UAAAA,CAAWC,GACjB,MAAMC,EAAWC,KAAKP,aAElBK,EAAQ,EACVE,KAAKP,aAAe,EACXK,EAAQE,KAAKR,MAAQ,EAC9BQ,KAAKP,aAAeO,KAAKR,MAAQ,EAEjCQ,KAAKP,aAAeK,EAGtB,MAAM,iBAAEG,GAAqBD,KAAKE,aAAaC,KAAKH,KAAKP,cAErDQ,IACFD,KAAKP,aAAeM,E,CAIhBK,QAAAA,GACFJ,KAAKP,eAAiBO,KAAKR,MAAQ,GAIvCQ,KAAKH,WAAWG,KAAKP,aAAe,E,CAG9BY,QAAAA,GACoB,IAAtBL,KAAKP,cAITO,KAAKH,WAAWG,KAAKP,aAAe,E,CAG9Ba,aAAAA,CAAcR,GACpB,MAAMS,EACDC,OAAAC,OAAAD,OAAAC,OAAA,GAAAT,KAAKvB,kBACR,CAAAiC,QAASA,IAAMV,KAAKH,WAAWC,GAC/BZ,SAAUc,KAAKP,eAAiBK,EAChCa,eAAgB,CACd,gBAAgBC,EAAAA,EAAAA,GAAYZ,KAAKP,eAAiBK,MAItD,OAAOe,EAAAA,EAAAA,GAACC,EAAAA,EAAeN,OAAAC,OAAA,GAAAF,GAAkBT,EAAQ,E,CAG3CiB,iBAAAA,GACN,MAAMC,EAAsBC,KAAKC,MAAMlB,KAAKZ,cAAgB,GACtD+B,EAAcnB,KAAKR,MAAQQ,KAAKZ,cAChCgC,EACJD,GAAenB,KAAKP,aAAeuB,EAC/BK,EACJF,GAAenB,KAAKP,aAAeO,KAAKR,MAAQwB,EAAsB,EAClEM,EAAc,GAEpB,IAAIC,EAAQ,EACRC,EAAMP,KAAKQ,IAAIzB,KAAKR,MAAOQ,KAAKZ,eAChCsC,EAAYT,KAAKC,OAAOlB,KAAKZ,cAAgB,GAAK,GAEtD,GAAIgC,EAAkB,CACpB,MAAMb,EAAeC,OAAAC,OAAAD,OAAAC,OAAA,GAChBT,KAAKvB,kBACR,CAAAiC,QAASA,KACHW,EACFrB,KAAKH,WAAWG,KAAKP,aAAewB,KAAKU,IAAI,EAAG,EAAID,EAAY,IAEhE1B,KAAKH,WAAWG,KAAKR,MAAQQ,KAAKZ,kBAIxCkC,EAAYM,KAAK5B,KAAKM,cAAc,IACpCgB,EAAYM,MAAKf,EAAAA,EAAAA,GAACC,EAAAA,EAAeN,OAAAC,OAAA,GAAAF,GAAiC,QAE9Dc,EACFE,EAAQvB,KAAKR,MAAQQ,KAAKZ,cAAgB,GAE1CmC,EAAQvB,KAAKR,MAAQQ,KAAKZ,cAAgB,EAC1CoC,EAAMxB,KAAKR,M,CAIX6B,IACED,GACFG,EAAQvB,KAAKP,aAAeiC,EAC5BF,EAAMxB,KAAKP,aAAeiC,EAAY,GAEtCF,EAAMxB,KAAKZ,cAAgB,GAI/B,IAAK,IAAIyC,EAAIN,EAAOM,EAAIL,EAAKK,IAC3BP,EAAYM,KAAK5B,KAAKM,cAAcuB,IAGtC,GAAIR,EAAgB,CAClB,MAAMd,EAAeC,OAAAC,OAAAD,OAAAC,OAAA,GAChBT,KAAKvB,kBACR,CAAAiC,QAASA,KACHU,EACFpB,KAAKH,WAAWG,KAAKP,aAAewB,KAAKU,IAAI,EAAG,EAAID,EAAY,IAEhE1B,KAAKH,WAAWG,KAAKZ,cAAgB,MAI3CkC,EAAYM,MAAKf,EAAAA,EAAAA,GAACC,EAAAA,EAAeN,OAAAC,OAAA,GAAAF,GAAiC,QAClEe,EAAYM,KAAK5B,KAAKM,cAAcN,KAAKR,MAAQ,G,CAGnD,OAAOqB,EAAAA,EAAAA,GAAA,QAAMiB,MAAM,gBAAgBR,E,CAGrCS,MAAAA,GACE,OACElB,EAAAA,EAAAA,GAACmB,EAAAA,EAAI,CAAAC,IAAA,6CACHpB,EAAAA,EAAAA,GAAA,kBAAAoB,IAAA,2CACElD,UAAWiB,KAAKR,OAA+B,IAAtBQ,KAAKP,aAC9Bb,OACA,EAAAI,KAAMkD,EAAAA,EACNxB,QAASA,IAAMV,KAAKK,aAGrBL,KAAKX,UACJwB,EAAAA,EAAAA,GAAA,OAAKiB,MAAM,wBACTjB,EAAAA,EAAAA,GAAA,iBAAesB,OAAO,QAAQnC,KAAKN,WACnCmB,EAAAA,EAAAA,GAAA,SACEiB,MAAM,iCACN3C,KAAK,SACLsC,IAAI,IACJE,IAAK3B,KAAKR,MACV4C,MAAOpC,KAAKP,aAAe,EAC3B4C,SAAWC,IACT,MAAMC,EAAcD,EAAME,OAC1B,GAAID,EAAa,CACf,MAAMzC,EAAQ2C,OAAOC,SAASH,EAAYH,OAC1CpC,KAAKH,WAAWC,EAAQ,E,MAI9Be,EAAAA,EAAAA,GAAM,QAAAiB,MAAM,gBACVjB,EAAAA,EAAAA,GAAe,iBAAAsB,OAAO,QACnBnC,KAAKL,OAAM,IAAGK,KAAKR,UAK1BqB,EAAAA,EAAAA,GAAM,QAAAiB,MAAM,oBAAoB9B,KAAKe,oBAAmB,MAG1DF,EAAAA,EAAAA,GAAA,kBAAAoB,IAAA,2CACElD,UAAWiB,KAAKR,OAASQ,KAAKP,eAAiBO,KAAKR,MAAQ,EAC5DZ,OACA,EAAAI,KAAM2D,EAAAA,EACNjC,QAASA,IAAMV,KAAKI,aAGrBJ,KAAKX,UAAYW,KAAKT,eACrBsB,EAAAA,EAAAA,GAAM,QAAAiB,MAAM,eACVjB,EAAAA,EAAAA,GAAA,iBAAesB,OAAO,QAAQnC,KAAKJ,YACnCiB,EAAAA,EAAAA,GACE,aAAA+B,gBAAc,EACdC,gBAAgB,GAChBC,qBAAqB,GACrBV,MAAK,GAAAW,OAAK/C,KAAKV,WACf0D,cAAgBC,IACd,MAAMzD,EAAQiD,OAAOC,SACnBQ,MAAMC,QAAQF,EAAEG,QAAUH,EAAEG,OAAO,GAAKH,EAAEG,QAG5CpD,KAAKqD,iBAAiBlD,KAAKX,MAG7BqB,EAAAA,EAAAA,GAAA,kBAAgByC,MAAM,KAAKlB,MAAM,QACjCvB,EAAAA,EAAAA,GAAA,kBAAgByC,MAAM,KAAKlB,MAAM,QACjCvB,EAAAA,EAAAA,GAAA,kBAAgByC,MAAM,KAAKlB,MAAM,QACjCvB,EAAAA,EAAAA,GAAA,kBAAgByC,MAAM,KAAKlB,MAAM,QACjCvB,EAAAA,EAAAA,GAAA,kBAAgByC,MAAM,MAAMlB,MAAM,UAItC,G,iDDzRY,8r7B,wDEctB,MAAMmB,EAAY7E,GACTA,EAAQ8E,gBAAkB,SAASA,cAGtCC,EAAa/E,GACVA,EAAQ8E,gBAAkB,UAAUA,cAGvCE,EAAehF,GACZA,EAAQ8E,gBAAkB,YAAYA,cAGlCG,EAAmB,SAC9BjF,EACAC,EACAC,GAKE,IAJFC,EAAQ+E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACR9E,EAAQ8E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACR1E,EAAiB0E,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjB/E,EAAiB6E,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEjB,MAAO,CACLC,KAAK,EACL,aAAcR,EAAS7E,KAAaC,IAAYC,EAChD,qBAAsB2E,EAAS7E,IAAYC,IAAYC,EACvD,uBAAwB2E,EAAS7E,KAAaC,GAAWC,EACzD,cAAe6E,EAAU/E,KAAaC,IAAYC,EAClD,sBAAuB6E,EAAU/E,IAAYC,IAAYC,EACzD,wBAAyB6E,EAAU/E,KAAaC,GAAWC,EAC3D,gBAAiB8E,EAAYhF,KAAaC,IAAYC,EACtD,wBAAyB8E,EAAYhF,IAAYC,IAAYC,EAC7D,0BAA2B8E,EAAYhF,KAAaC,GAAWC,EAC/D,WAAYC,EACZ,WAAYC,EACZI,SAAUA,EACVH,SAAUA,EAEd,EAuBMiF,EAAkBC,IACtB,IAAKA,EAASjF,KACZ,MAAO,QAGT,OAAQiF,EAASC,UACf,IAAK,KACH,MAAO,WACT,IAAK,KACH,MAAO,UACT,QACE,MAAO,UAIApD,EAAmDA,CAC9DqD,EACAC,K,UAEA,MAAMC,EAAiC,QAAlBC,EAAAH,EAAME,oBAAY,IAAAC,EAAAA,EAAI,CAAC,EAEtC3D,EAAqC,QAApB4D,EAAAJ,EAAMxD,sBAAc,IAAA4D,EAAAA,EAAI,CAAC,EAKhD,OAJK5D,EAAe,kBAAoBwD,EAAMpF,WAC5C4B,EAAe,iBAAmB,SAIlCE,EAAAA,EAAAA,GAAA,SAAAL,OAAAC,OAAA,GACME,EAAc,CAClBD,QAAUuC,GAAckB,EAAMzD,QAAUyD,EAAMzD,QAAQuC,QAAKa,EAC3DU,SAAUL,EAAMpF,UAAY,EAAuB,QAAlB0F,EAAAN,EAAMO,gBAAY,IAAAD,EAAAA,EAAA,EACnDtF,KAAMgF,EAAMhF,KACZ2C,MAAKtB,OAAAC,OAAAD,OAAAC,OAAA,GACAkD,EACDQ,EAAMzF,QACNyF,EAAMxF,QACNwF,EAAMvF,MACNuF,EAAMtF,SACNsF,EAAMrF,SACNqF,EAAMjF,SACNiF,EAAMpF,UAAYoF,EAAMlF,UAEvBoF,KAGJF,EAAMlF,SACL4B,EAAAA,EAAAA,GAAA,cAAY8D,KAAMX,EAAeG,GAAQS,WAAS,IAChD,KACHT,EAAMnF,OAASmF,EAAMlF,SACpB4B,EAAAA,EAAAA,GACE,WAAAiB,MAAM,OACN+C,KAAMV,EAAMnF,KACZ2F,KAAMR,EAAMD,SACZY,MAAOX,EAAMY,YAEb,MACJlE,EAAAA,EAAAA,GAAA,OACEiB,MAAO,CACLkD,SAAS,EACT,CAAC,WAADjC,OAAYoB,EAAMc,cAAgBd,EAAMc,YAGzCb,GAEFD,EAAMe,aAAef,EAAMe,aAAe,M,kDClI1C,MCGMtE,EAAewB,GAC1BA,EAAQ,OAAS,QAsBN+C,EAAgCC,IAC3C,IAAKA,EACH,MAAO,UAGT,GD/BwBC,KACxB,IAAKA,EACH,OAAO,EAGT,IAAIC,EAEJ,IACEA,EAAM,IAAIC,IAAIF,E,CACd,MAAOpC,GACP,OAAO,C,CAGT,MAAwB,UAAjBqC,EAAIE,UAAyC,WAAjBF,EAAIE,UCkBnCC,CAAUL,GACZ,MAAO,UAGT,IDnB2BE,ECmBVF,IDdE,kBAARE,GAIJA,EAAII,WAAW,sBCWpB,MAAO,UDpBkBJ,MCuB3B,MAAMhC,EAAqC8B,EAhCLO,QAAQ,UAAW,IACvBC,MAAM,KAErCC,KAAKC,IACJ,MAAMC,EAAWD,EAAKE,OAChBC,EAAgBF,EAASJ,QAAQ,OAAQ,IAE/C,OAA6B,IAAzBM,EAAcpC,OACTkC,EAGFE,KAERJ,KAAKC,GAASA,EAAKI,OAAO,GAAG1C,cAAgBsC,EAAKK,MAAM,KACxDC,KAAK,KAoBR,OAAqB,IAAjB9C,EAAMO,OACD,UAGFP,GAGI+C,EAAqB,SAChCC,GAEqC,IADrCC,EAAA3C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAwC,GAExC,MAAM4C,EAA0C,CAAC,EAWjD,OAVAC,EAAeC,SAASC,I,MACtB,GAAIL,EAAYM,aAAaD,GAAO,CAEpB,OADAL,EAAYO,aAAaF,IAChBJ,EAAiBO,SAASH,KAC/CH,EAAgBG,GAAsC,QAA9BrC,EAAAgC,EAAYO,aAAaF,UAAK,IAAArC,EAAAA,EAAI,GAC1DgC,EAAYS,gBAAgBJ,G,KAK3BH,CACT,EAuDMC,EAAsC,CAC1C,OACA,wBACA,cACA,oBACA,oBACA,8BACA,YACA,eACA,gBACA,gBACA,oBACA,eACA,gBACA,eACA,mBACA,mBACA,eACA,gBACA,oBACA,gBACA,cACA,gBACA,cACA,eACA,oBACA,aACA,kBACA,aACA,YACA,iBACA,uBACA,mBACA,YACA,mBACA,gBACA,eACA,gBACA,gBACA,gBACA,uBACA,gBACA,gBACA,oBACA,eACA,gBACA,eACA,YACA,gBACA,gBACA,gBACA,iB","sources":["../node_modules/@siemens/ix/dist/esm/src/components/pagination/pagination.scss?tag=ix-pagination&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/pagination/pagination.tsx","../node_modules/@siemens/ix/dist/esm/src/components/button/base-button.tsx","../node_modules/@siemens/ix/dist/esm/src/components/utils/condition-checks.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/a11y.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2022 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'legacy/components/forms';\n@import '../icon-button/icon-button';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  &,\n  .advanced-pagination,\n  .item-count {\n    display: inline-flex;\n    align-items: center;\n  }\n\n  .basic-pagination {\n    padding: 0 0.125rem;\n  }\n\n  .advanced-pagination {\n    padding: 0 $medium-space;\n  }\n\n  .page-selection {\n    width: 4.125rem;\n    text-align: center;\n    margin: 0 $small-space;\n    -moz-appearance: textfield;\n    -webkit-appearance: textfield;\n  }\n\n  .page-buttons {\n    white-space: nowrap;\n  }\n\n  .total-count {\n    white-space: nowrap;\n  }\n\n  .item-count {\n    flex-grow: 1;\n    justify-content: flex-end;\n    margin-inline-start: $large-space;\n\n    ix-select {\n      width: 4.5rem;\n      margin-inline-start: $large-space;\n    }\n  }\n\n  button {\n    width: auto;\n    min-width: 2rem;\n    height: 2rem;\n    padding: 0 0.5rem;\n  }\n\n  button + button {\n    margin-inline-start: 0.125rem;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n} from '@stencil/core';\nimport { BaseButton, BaseButtonProps } from '../button/base-button';\nimport { a11yBoolean } from '../utils/a11y';\nimport {\n  iconChevronLeftSmall,\n  iconChevronRightSmall,\n} from '@siemens/ix-icons/icons';\n\n@Component({\n  tag: 'ix-pagination',\n  styleUrl: 'pagination.scss',\n  shadow: true,\n})\nexport class Pagination {\n  private readonly baseButtonConfig: BaseButtonProps = {\n    variant: 'secondary',\n    outline: false,\n    ghost: true,\n    iconOnly: true,\n    iconOval: false,\n    disabled: false,\n    icon: '',\n    loading: false,\n    selected: false,\n    type: 'button',\n  };\n\n  private readonly maxCountPages = 7;\n\n  @Element() hostElement!: HTMLIxPaginationElement;\n\n  /**\n   * Advanced mode\n   */\n  @Prop() advanced = false;\n\n  /**\n   * Number of items shown at once.\n   * Can only be changed in advaced mode.\n   */\n  @Prop() itemCount = 15;\n\n  /**\n   * Show item count in advanced mode\n   */\n  @Prop() showItemCount = true;\n\n  /**\n   * Total number of pages\n   */\n  @Prop() count: number = 0;\n\n  /**\n   * Zero based index of currently selected page\n   */\n  @Prop({ mutable: true }) selectedPage = 0;\n\n  /**\n   * i18n\n   */\n  @Prop() i18nPage = 'Page';\n\n  /**\n   * i18n\n   */\n  @Prop() i18nOf = 'of';\n\n  /**\n  /**\n   * i18n\n   */\n  @Prop() i18nItems = 'Items';\n\n  /**\n   * Page selection event\n   */\n  @Event() pageSelected!: EventEmitter<number>;\n\n  /**\n   * Item count change event\n   */\n  @Event() itemCountChanged!: EventEmitter<number>;\n\n  private selectPage(index: number) {\n    const oldIndex = this.selectedPage;\n\n    if (index < 0) {\n      this.selectedPage = 0;\n    } else if (index > this.count - 1) {\n      this.selectedPage = this.count - 1;\n    } else {\n      this.selectedPage = index;\n    }\n\n    const { defaultPrevented } = this.pageSelected.emit(this.selectedPage);\n\n    if (defaultPrevented) {\n      this.selectedPage = oldIndex;\n    }\n  }\n\n  private increase() {\n    if (this.selectedPage === this.count - 1) {\n      return;\n    }\n\n    this.selectPage(this.selectedPage + 1);\n  }\n\n  private decrease() {\n    if (this.selectedPage === 0) {\n      return;\n    }\n\n    this.selectPage(this.selectedPage - 1);\n  }\n\n  private getPageButton(index: number) {\n    const baseButtonProps: BaseButtonProps = {\n      ...this.baseButtonConfig,\n      onClick: () => this.selectPage(index),\n      selected: this.selectedPage === index,\n      ariaAttributes: {\n        'aria-pressed': a11yBoolean(this.selectedPage === index),\n      },\n    };\n\n    return <BaseButton {...baseButtonProps}>{index + 1}</BaseButton>;\n  }\n\n  private renderPageButtons() {\n    const pagesBeforeOverflow = Math.floor(this.maxCountPages / 2);\n    const hasOverflow = this.count > this.maxCountPages;\n    const hasOverflowStart =\n      hasOverflow && this.selectedPage > pagesBeforeOverflow;\n    const hasOverflowEnd =\n      hasOverflow && this.selectedPage < this.count - pagesBeforeOverflow - 1;\n    const pageButtons = [];\n\n    let start = 0;\n    let end = Math.min(this.count, this.maxCountPages);\n    let pageCount = Math.floor((this.maxCountPages - 4) / 2);\n\n    if (hasOverflowStart) {\n      const baseButtonProps = {\n        ...this.baseButtonConfig,\n        onClick: () => {\n          if (hasOverflowEnd) {\n            this.selectPage(this.selectedPage - Math.max(0, 2 * pageCount + 1));\n          } else {\n            this.selectPage(this.count - this.maxCountPages);\n          }\n        },\n      };\n      pageButtons.push(this.getPageButton(0));\n      pageButtons.push(<BaseButton {...baseButtonProps}>...</BaseButton>);\n\n      if (hasOverflowEnd) {\n        start = this.count - this.maxCountPages + 2;\n      } else {\n        start = this.count - this.maxCountPages + 2;\n        end = this.count;\n      }\n    }\n\n    if (hasOverflowEnd) {\n      if (hasOverflowStart) {\n        start = this.selectedPage - pageCount;\n        end = this.selectedPage + pageCount + 1;\n      } else {\n        end = this.maxCountPages - 2;\n      }\n    }\n\n    for (let i = start; i < end; i++) {\n      pageButtons.push(this.getPageButton(i));\n    }\n\n    if (hasOverflowEnd) {\n      const baseButtonProps = {\n        ...this.baseButtonConfig,\n        onClick: () => {\n          if (hasOverflowStart) {\n            this.selectPage(this.selectedPage + Math.max(0, 2 * pageCount + 1));\n          } else {\n            this.selectPage(this.maxCountPages - 1);\n          }\n        },\n      };\n      pageButtons.push(<BaseButton {...baseButtonProps}>...</BaseButton>);\n      pageButtons.push(this.getPageButton(this.count - 1));\n    }\n\n    return <span class=\"page-buttons\">{pageButtons}</span>;\n  }\n\n  render() {\n    return (\n      <Host>\n        <ix-icon-button\n          disabled={!this.count || this.selectedPage === 0}\n          ghost\n          icon={iconChevronLeftSmall}\n          onClick={() => this.decrease()}\n        ></ix-icon-button>\n\n        {this.advanced ? (\n          <div class=\"advanced-pagination\">\n            <ix-typography format=\"body\">{this.i18nPage}</ix-typography>\n            <input\n              class=\"ix-form-control page-selection\"\n              type=\"number\"\n              min=\"1\"\n              max={this.count}\n              value={this.selectedPage + 1}\n              onChange={(event: Event) => {\n                const eventTarget = event.target as HTMLInputElement;\n                if (eventTarget) {\n                  const index = Number.parseInt(eventTarget.value);\n                  this.selectPage(index - 1);\n                }\n              }}\n            />\n            <span class=\"total-count\">\n              <ix-typography format=\"body\">\n                {this.i18nOf} {this.count}\n              </ix-typography>\n            </span>\n          </div>\n        ) : (\n          <span class=\"basic-pagination\">{this.renderPageButtons()} </span>\n        )}\n\n        <ix-icon-button\n          disabled={!this.count || this.selectedPage === this.count - 1}\n          ghost\n          icon={iconChevronRightSmall}\n          onClick={() => this.increase()}\n        ></ix-icon-button>\n\n        {this.advanced && this.showItemCount ? (\n          <span class=\"item-count\">\n            <ix-typography format=\"body\">{this.i18nItems}</ix-typography>\n            <ix-select\n              hideListHeader\n              i18nPlaceholder=\"\"\n              i18nSelectListHeader=\"\"\n              value={`${this.itemCount}`}\n              onValueChange={(e) => {\n                const count = Number.parseInt(\n                  Array.isArray(e.detail) ? e.detail[0] : e.detail\n                );\n\n                this.itemCountChanged.emit(count);\n              }}\n            >\n              <ix-select-item label=\"10\" value=\"10\"></ix-select-item>\n              <ix-select-item label=\"15\" value=\"15\"></ix-select-item>\n              <ix-select-item label=\"20\" value=\"20\"></ix-select-item>\n              <ix-select-item label=\"40\" value=\"40\"></ix-select-item>\n              <ix-select-item label=\"100\" value=\"100\"></ix-select-item>\n            </ix-select>\n          </span>\n        ) : (\n          ''\n        )}\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { FunctionalComponent, h } from '@stencil/core';\nimport { A11yAttributes } from '../utils/a11y';\nimport { ButtonVariant } from './button';\n\nexport type ButtonAlignment = 'center' | 'start';\n\nconst isDanger = (variant: string) => {\n  return variant.toUpperCase() === 'Danger'.toUpperCase();\n};\n\nconst isPrimary = (variant: string) => {\n  return variant.toUpperCase() === 'Primary'.toUpperCase();\n};\n\nconst isSecondary = (variant: string) => {\n  return variant.toUpperCase() === 'Secondary'.toUpperCase();\n};\n\nexport const getButtonClasses = (\n  variant: ButtonVariant,\n  outline: boolean,\n  ghost: boolean,\n  iconOnly = false,\n  iconOval = false,\n  selected: boolean,\n  disabled: boolean\n) => {\n  return {\n    btn: true,\n    'btn-danger': isDanger(variant) && !outline && !ghost,\n    'btn-outline-danger': isDanger(variant) && outline && !ghost,\n    'btn-invisible-danger': isDanger(variant) && !outline && ghost,\n    'btn-primary': isPrimary(variant) && !outline && !ghost,\n    'btn-outline-primary': isPrimary(variant) && outline && !ghost,\n    'btn-invisible-primary': isPrimary(variant) && !outline && ghost,\n    'btn-secondary': isSecondary(variant) && !outline && !ghost,\n    'btn-outline-secondary': isSecondary(variant) && outline && !ghost,\n    'btn-invisible-secondary': isSecondary(variant) && !outline && ghost,\n    'btn-icon': iconOnly,\n    'btn-oval': iconOval,\n    selected: selected,\n    disabled: disabled,\n  };\n};\n\nexport type BaseButtonProps = {\n  type: string;\n  variant: ButtonVariant;\n  outline: boolean;\n  ghost: boolean;\n  iconOnly: boolean;\n  iconOval: boolean;\n  selected: boolean;\n  disabled: boolean;\n  loading: boolean;\n  icon?: string;\n  onClick?: Function;\n  ariaAttributes?: A11yAttributes;\n  extraClasses?: { [key: string]: boolean };\n  iconSize?: string;\n  iconColor?: string;\n  alignment?: ButtonAlignment;\n  tabIndex?: number;\n  afterContent?: any;\n};\n\nconst getSpinnerSize = (btnProps: BaseButtonProps) => {\n  if (!btnProps.icon) {\n    return 'small';\n  }\n\n  switch (btnProps.iconSize) {\n    case '12':\n      return 'xx-small';\n    case '16':\n      return 'x-small';\n    default:\n      return 'small';\n  }\n};\n\nexport const BaseButton: FunctionalComponent<BaseButtonProps> = (\n  props: BaseButtonProps,\n  children\n) => {\n  const extraClasses = props.extraClasses ?? {};\n\n  const ariaAttributes = props.ariaAttributes ?? {};\n  if (!ariaAttributes['aria-disabled'] && props.disabled) {\n    ariaAttributes['aria-disabled'] = 'true';\n  }\n\n  return (\n    <button\n      {...ariaAttributes}\n      onClick={(e: Event) => (props.onClick ? props.onClick(e) : undefined)}\n      tabindex={props.disabled ? -1 : (props.tabIndex ?? 0)}\n      type={props.type}\n      class={{\n        ...getButtonClasses(\n          props.variant,\n          props.outline,\n          props.ghost,\n          props.iconOnly,\n          props.iconOval,\n          props.selected,\n          props.disabled || props.loading\n        ),\n        ...extraClasses,\n      }}\n    >\n      {props.loading ? (\n        <ix-spinner size={getSpinnerSize(props)} hideTrack></ix-spinner>\n      ) : null}\n      {props.icon && !props.loading ? (\n        <ix-icon\n          class=\"icon\"\n          name={props.icon}\n          size={props.iconSize as any}\n          color={props.iconColor}\n        ></ix-icon>\n      ) : null}\n      <div\n        class={{\n          content: true,\n          [`content-${props.alignment}`]: !!props.alignment,\n        }}\n      >\n        {children}\n      </div>\n      {props.afterContent ? props.afterContent : null}\n    </button>\n  );\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport const isHttpUrl = (link: string) => {\n  if (!link) {\n    return false;\n  }\n\n  let url: URL;\n\n  try {\n    url = new URL(link);\n  } catch (e) {\n    return false;\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:';\n};\n\nexport const isSvgDataUrl = (url: string) => {\n  if (!url) {\n    return false;\n  }\n\n  if (typeof url !== 'string') {\n    return false;\n  }\n\n  return url.startsWith('data:image/svg+xml');\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { isHttpUrl, isSvgDataUrl } from './condition-checks';\n\nexport const a11yBoolean = (value: boolean | undefined) =>\n  value ? 'true' : 'false';\n\nconst kebabCaseToUpperCaseSentence = (kebabCase: string) => {\n  const withoutFilledSuffix = kebabCase.replace('-filled', '');\n  const words = withoutFilledSuffix.split('-');\n  const sentence = words\n    .map((word) => {\n      const trimWord = word.trim();\n      const digitLessWord = trimWord.replace(/\\d+/g, '');\n\n      if (digitLessWord.length === 0) {\n        return trimWord;\n      }\n\n      return digitLessWord;\n    })\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n\n  return sentence;\n};\n\nexport const getFallbackLabelFromIconName = (iconName?: string) => {\n  if (!iconName) {\n    return 'Unknown';\n  }\n\n  if (isHttpUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  if (isSvgDataUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  const label = kebabCaseToUpperCaseSentence(iconName);\n\n  if (label.length === 0) {\n    return 'Unknown';\n  }\n\n  return label;\n};\n\nexport const a11yHostAttributes = (\n  hostElement: HTMLElement,\n  ignoreAttributes: A11yAttributeName[] = []\n): Record<A11yAttributeName, string> => {\n  const attributeObject: Record<string, string> = {};\n  a11yAttributes.forEach((attr) => {\n    if (hostElement.hasAttribute(attr)) {\n      const value = hostElement.getAttribute(attr);\n      if (value !== null && !ignoreAttributes.includes(attr)) {\n        attributeObject[attr] = hostElement.getAttribute(attr) ?? '';\n        hostElement.removeAttribute(attr);\n      }\n    }\n  });\n\n  return attributeObject;\n};\n\nexport type A11yAttributeName =\n  | 'role'\n  | 'aria-activedescendant'\n  | 'aria-atomic'\n  | 'aria-autocomplete'\n  | 'aria-braillelabel'\n  | 'aria-brailleroledescription'\n  | 'aria-busy'\n  | 'aria-checked'\n  | 'aria-colcount'\n  | 'aria-colindex'\n  | 'aria-colindextext'\n  | 'aria-colspan'\n  | 'aria-controls'\n  | 'aria-current'\n  | 'aria-describedby'\n  | 'aria-description'\n  | 'aria-details'\n  | 'aria-disabled'\n  | 'aria-errormessage'\n  | 'aria-expanded'\n  | 'aria-flowto'\n  | 'aria-haspopup'\n  | 'aria-hidden'\n  | 'aria-invalid'\n  | 'aria-keyshortcuts'\n  | 'aria-label'\n  | 'aria-labelledby'\n  | 'aria-level'\n  | 'aria-live'\n  | 'aria-multiline'\n  | 'aria-multiselectable'\n  | 'aria-orientation'\n  | 'aria-owns'\n  | 'aria-placeholder'\n  | 'aria-posinset'\n  | 'aria-pressed'\n  | 'aria-readonly'\n  | 'aria-relevant'\n  | 'aria-required'\n  | 'aria-roledescription'\n  | 'aria-rowcount'\n  | 'aria-rowindex'\n  | 'aria-rowindextext'\n  | 'aria-rowspan'\n  | 'aria-selected'\n  | 'aria-setsize'\n  | 'aria-sort'\n  | 'aria-valuemax'\n  | 'aria-valuemin'\n  | 'aria-valuenow'\n  | 'aria-valuetext';\n\nconst a11yAttributes: A11yAttributeName[] = [\n  'role',\n  'aria-activedescendant',\n  'aria-atomic',\n  'aria-autocomplete',\n  'aria-braillelabel',\n  'aria-brailleroledescription',\n  'aria-busy',\n  'aria-checked',\n  'aria-colcount',\n  'aria-colindex',\n  'aria-colindextext',\n  'aria-colspan',\n  'aria-controls',\n  'aria-current',\n  'aria-describedby',\n  'aria-description',\n  'aria-details',\n  'aria-disabled',\n  'aria-errormessage',\n  'aria-expanded',\n  'aria-flowto',\n  'aria-haspopup',\n  'aria-hidden',\n  'aria-invalid',\n  'aria-keyshortcuts',\n  'aria-label',\n  'aria-labelledby',\n  'aria-level',\n  'aria-live',\n  'aria-multiline',\n  'aria-multiselectable',\n  'aria-orientation',\n  'aria-owns',\n  'aria-placeholder',\n  'aria-posinset',\n  'aria-pressed',\n  'aria-readonly',\n  'aria-relevant',\n  'aria-required',\n  'aria-roledescription',\n  'aria-rowcount',\n  'aria-rowindex',\n  'aria-rowindextext',\n  'aria-rowspan',\n  'aria-selected',\n  'aria-setsize',\n  'aria-sort',\n  'aria-valuemax',\n  'aria-valuemin',\n  'aria-valuenow',\n  'aria-valuetext',\n];\n\ntype PartialRecord<K extends A11yAttributeName, T> = {\n  [P in K]?: T;\n};\nexport type A11yAttributes = PartialRecord<A11yAttributeName, string>;\n"],"names":["Pagination","constructor","hostRef","baseButtonConfig","variant","outline","ghost","iconOnly","iconOval","disabled","icon","loading","selected","type","maxCountPages","advanced","itemCount","showItemCount","count","selectedPage","i18nPage","i18nOf","i18nItems","selectPage","index","oldIndex","this","defaultPrevented","pageSelected","emit","increase","decrease","getPageButton","baseButtonProps","Object","assign","onClick","ariaAttributes","a11yBoolean","h","BaseButton","renderPageButtons","pagesBeforeOverflow","Math","floor","hasOverflow","hasOverflowStart","hasOverflowEnd","pageButtons","start","end","min","pageCount","max","push","i","class","render","Host","key","iconChevronLeftSmall","format","value","onChange","event","eventTarget","target","Number","parseInt","iconChevronRightSmall","hideListHeader","i18nPlaceholder","i18nSelectListHeader","concat","onValueChange","e","Array","isArray","detail","itemCountChanged","label","isDanger","toUpperCase","isPrimary","isSecondary","getButtonClasses","arguments","length","undefined","btn","getSpinnerSize","btnProps","iconSize","props","children","extraClasses","_a","_b","tabindex","_c","tabIndex","size","hideTrack","name","color","iconColor","content","alignment","afterContent","getFallbackLabelFromIconName","iconName","link","url","URL","protocol","isHttpUrl","startsWith","replace","split","map","word","trimWord","trim","digitLessWord","charAt","slice","join","a11yHostAttributes","hostElement","ignoreAttributes","attributeObject","a11yAttributes","forEach","attr","hasAttribute","getAttribute","includes","removeAttribute"],"sourceRoot":""}