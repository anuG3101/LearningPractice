{"version":3,"file":"static/js/9454.1e06248e.chunk.js","mappings":"sKAAA,MCkBaA,EAAQ,MALrBC,WAAAA,CAAAC,I,+FAcU,KAAWC,aAAG,CAuDvB,CAtCCC,MAAAA,G,UACE,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAAAC,IAAA,2CACHC,MAAO,CACLC,YAA0B,QAAdC,EAAAC,KAAKC,eAAS,IAAAF,OAAA,EAAAA,EAAAG,eAG5BR,EAAAA,EAAAA,GAAK,OAAAE,IAAA,2CAAAC,MAAM,yBACRG,KAAKR,aACJE,EAAAA,EAAAA,GACE,WAAAS,KAAMC,EAAAA,EACNC,KAAK,KACLR,MAAO,CACL,sBAAsC,QAAdS,EAAAN,KAAKC,eAAS,IAAAK,OAAA,EAAAA,EAAAC,aAExCC,MAAK,SAAAC,QACW,QAAdC,EAAAV,KAAKC,eAAS,IAAAS,OAAA,EAAAA,EAAAH,YAAa,UAAY,YAEzCI,QAAUC,IACRA,EAAEC,iBACFD,EAAEE,kBACFd,KAAKe,OAAOC,UAGd,OAENtB,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CACEC,MAAM,sBACNc,QAASA,KACPX,KAAKiB,UAAUD,UAGjBtB,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CAAKC,MAAM,kBAAkBG,KAAKkB,OAClCxB,EAAAA,EAAAA,GAAa,QAAAE,IAAA,8C,WD7EH,8gE","sources":["../node_modules/@siemens/ix/dist/esm/src/components/tree-item/tree-item.scss?tag=ix-tree-item&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/tree-item/tree-item.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/text-truncation';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  display: flex;\n  align-items: center;\n\n  height: 32px;\n  width: 100%;\n\n  cursor: pointer;\n\n  .tree-node-container {\n    @include ellipsis;\n    display: flex;\n    align-items: center;\n    height: $x-large-space;\n    flex-grow: 1;\n    align-items: center;\n\n    .tree-node-text {\n      @include ellipsis;\n    }\n  }\n\n  .icon-toggle-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 2rem;\n    height: 2rem;\n    min-width: 2rem;\n\n    ix-icon {\n      transition: transform var(--theme-default-time) ease-in-out;\n\n      &.icon-toggle-down {\n        transform: rotate(90deg);\n      }\n    }\n  }\n}\n\n:host(:not(.disabled):not(:disabled):not(.selected).hover),\n:host(:not(.disabled):not(:disabled):not(.selected):hover) {\n  background-color: var(--theme-tree-item--background--hover);\n}\n\n:host(:not(.disabled):not(:disabled):not(.selected).active),\n:host(:not(.disabled):not(:disabled):not(.selected):active) {\n  background-color: var(--theme-tree-item--background--active);\n}\n\n:host(.selected) {\n  background-color: var(--theme-tree-item--background--selected);\n}\n\n:host(.selected.hover),\n:host(.selected:hover) {\n  background-color: var(--theme-tree-item--background--selected-hover);\n}\n\n:host(.selected.active),\n:host(.selected:active) {\n  background-color: var(--theme-tree-item--background--selected-active);\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Event, EventEmitter, h, Host, Prop } from '@stencil/core';\nimport { TreeItemContext } from '../tree/tree-model';\nimport { iconChevronRight } from '@siemens/ix-icons/icons';\n\n@Component({\n  tag: 'ix-tree-item',\n  styleUrl: 'tree-item.scss',\n  shadow: true,\n})\nexport class TreeItem {\n  /**\n   * Text\n   */\n  @Prop() text?: string;\n\n  /**\n   * Has tree item children\n   */\n  @Prop() hasChildren = false;\n\n  /**\n   * Context\n   */\n  @Prop() context?: TreeItemContext;\n\n  /**\n   * Expand/Collapsed toggled\n   */\n  @Event() toggle!: EventEmitter<void>;\n\n  /**\n   * Click on item not on the expand/collapse icon\n   */\n  @Event() itemClick!: EventEmitter<void>;\n\n  render() {\n    return (\n      <Host\n        class={{\n          selected: !!this.context?.isSelected,\n        }}\n      >\n        <div class=\"icon-toggle-container\">\n          {this.hasChildren ? (\n            <ix-icon\n              name={iconChevronRight}\n              size=\"16\"\n              class={{\n                ['icon-toggle-down']: !!this.context?.isExpanded,\n              }}\n              color={`color-${\n                this.context?.isExpanded ? 'primary' : 'std-text'\n              }`}\n              onClick={(e: Event) => {\n                e.preventDefault();\n                e.stopPropagation();\n                this.toggle.emit();\n              }}\n            />\n          ) : null}\n        </div>\n        <div\n          class=\"tree-node-container\"\n          onClick={() => {\n            this.itemClick.emit();\n          }}\n        >\n          <div class=\"tree-node-text\">{this.text}</div>\n          <slot></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"names":["TreeItem","constructor","hostRef","hasChildren","render","h","Host","key","class","selected","_a","this","context","isSelected","name","iconChevronRight","size","_b","isExpanded","color","concat","_c","onClick","e","preventDefault","stopPropagation","toggle","emit","itemClick","text"],"sourceRoot":""}