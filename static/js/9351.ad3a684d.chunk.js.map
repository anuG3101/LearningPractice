{"version":3,"file":"static/js/9351.ad3a684d.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/breakpoints.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/context.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/application-layout/context.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/application-layout/service.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/debounce.ts","../node_modules/@siemens/ix/dist/esm/src/components/basic-navigation/basic-navigation.scss?tag=ix-basic-navigation&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/basic-navigation/basic-navigation.tsx","../node_modules/@siemens/ix/dist/esm/src/components/utils/menu-service/menu-service.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// Implementation of scss breakpoints mixins/_break-points.scss\nconst mediaQueries = {\n  sm: '(max-width: 48em)',\n  md: '(min-width: 48.0625em) and (max-width: 80em)',\n  lg: '(min-width: 80.0625em)',\n} as const;\n\nexport type Breakpoint = keyof typeof mediaQueries;\n\nexport const matchBreakpoint = (breakpoint: Breakpoint) => {\n  if (typeof window !== 'undefined' && (window as any).matchMedia) {\n    const mediaQuery = mediaQueries[breakpoint];\n    return window.matchMedia(mediaQuery).matches;\n  }\n  return false;\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TypedEvent } from './typed-event';\n\n/**\n * A Context object defines an optional initial value for a Context, as well as a name identifier for debugging purposes.\n */\nexport type Context<T> = {\n  name: string;\n  initialValue?: T;\n};\n\n/**\n * An unknown context type\n */\nexport type UnknownContext = Context<unknown>;\n\n/**\n * A helper type which can extract a Context value type from a Context type\n */\nexport type ContextType<T extends UnknownContext> =\n  T extends Context<infer Y> ? Y : never;\n\n/**\n * A function which creates a Context value object\n */\nexport function createContext<T>(\n  name: string,\n  initialValue?: T\n): Readonly<Context<T>> {\n  return {\n    name,\n    initialValue,\n  };\n}\n\n/**\n * A callback which is provided by a context requester and is called with the value satisfying the request.\n * This callback can be called multiple times by context providers as the requested value is changed.\n */\nexport type ContextCallback<ValueType> = (\n  value: ValueType,\n  unsubscribe?: () => void\n) => void;\n\n/**\n * An event fired by a context requester to signal it desires a named context.\n *\n * A provider should inspect the `context` property of the event to determine if it has a value that can\n * satisfy the request, calling the `callback` with the requested value if so.\n *\n * If the requested context event contains a truthy `subscribe` value, then a provider can call the callback\n * multiple times if the value is changed, if this is the case the provider should pass an `unsubscribe`\n * function to the callback which requesters can invoke to indicate they no longer wish to receive these updates.\n */\nexport class ContextEvent<T extends UnknownContext> extends Event {\n  public constructor(\n    public readonly context: T,\n    public readonly callback: ContextCallback<ContextType<T>>,\n    public readonly subscribe?: boolean\n  ) {\n    super('context-request', { bubbles: true, composed: true });\n  }\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    /**\n     * A 'context-request' event can be emitted by any element which desires\n     * a context value to be injected by an external provider.\n     */\n    'context-request': ContextEvent<UnknownContext>;\n  }\n}\n\nexport type ContextConsumerSubscription = {\n  unsubscribe: () => void;\n};\n\nexport function useContextConsumer<\n  T extends HTMLElement,\n  C extends UnknownContext,\n>(\n  hostElement: T,\n  context: C,\n  onContextReceived: (\n    context: ContextType<C>,\n    unsubscribe?: () => void\n  ) => void,\n  subscribe?: boolean\n): ContextConsumerSubscription {\n  let _unsubscribe: (() => void) | undefined;\n  hostElement.dispatchEvent(\n    new ContextEvent(\n      context,\n      (ctx, unSub) => {\n        onContextReceived(ctx, unSub);\n        _unsubscribe = unSub;\n      },\n      subscribe\n    )\n  );\n\n  return {\n    unsubscribe: () => {\n      if (_unsubscribe) {\n        _unsubscribe();\n      }\n    },\n  };\n}\nexport type ContextProvider<C extends Context<{}> = Context<any>> = {\n  emit: (context: ContextType<C>) => void;\n};\n\nexport function useContextProvider<\n  X extends {},\n  C extends Context<X>,\n  T extends HTMLElement = HTMLElement,\n>(\n  hostElement: T,\n  context: C,\n  contextPayload?: ContextType<C>\n): ContextProvider<C> {\n  const requestContext = new TypedEvent<ContextEvent<C>>();\n  const updateContext = new TypedEvent<ContextType<C>>();\n\n  const requests = new Set<ContextEvent<UnknownContext>>();\n\n  hostElement.addEventListener('context-request', (event: Event) => {\n    const requestContextEvent = event as ContextEvent<C>;\n    if (requestContextEvent?.context.name !== context.name) {\n      return;\n    }\n\n    requestContextEvent.stopPropagation();\n\n    if (requestContextEvent.subscribe) {\n      requests.add(requestContextEvent);\n    }\n    requestContext.emit(requestContextEvent);\n\n    if (contextPayload) {\n      requestContextEvent.callback(contextPayload, () => {\n        requests.delete(requestContextEvent);\n      });\n    }\n  });\n\n  updateContext.on((context: ContextType<C>) => {\n    requests.forEach((r) =>\n      r.callback(context, () => {\n        requests.delete(r);\n      })\n    );\n  });\n\n  return {\n    emit: (context: ContextType<C>) => {\n      updateContext.emit(context);\n    },\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { createContext } from '../context';\nimport { type LiteralStringUnion } from '../type-helper';\n\nexport const closestIxMenu = (element: Element) => {\n  const menuElement = element.closest('ix-menu');\n  return menuElement;\n};\n\nexport type AppSwitchConfigurationTarget = LiteralStringUnion<\n  '_self' | '_blank' | '_parent' | '_top'\n>;\n\nexport type AppSwitchConfiguration = {\n  currentAppId: string;\n  apps: {\n    id: string;\n    name: string;\n    description: string;\n    url: string;\n    target: AppSwitchConfigurationTarget;\n    iconSrc: string;\n  }[];\n  i18nAppSwitch?: string;\n  i18nLoadingApps?: string;\n};\n\nexport const ApplicationLayoutContext = createContext<{\n  hideHeader: boolean;\n  host: 'basic-navigation' | 'map-navigation' | null;\n  appSwitchConfig?: AppSwitchConfiguration;\n  sidebar?: boolean;\n}>('application-layout-context', {\n  hideHeader: false,\n  host: null,\n  sidebar: false,\n});\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Breakpoint, matchBreakpoint } from '../breakpoints';\nimport { debounce } from '../debounce';\nimport { TypedEvent } from '../typed-event';\n\nclass ApplicationLayoutService {\n  // Keep order of breakpoints\n  #supportedBreakpoints: Breakpoint[] = ['sm', 'md', 'lg'];\n  #breakpointChangeListener = new TypedEvent<Breakpoint>();\n  #breakpoint: Breakpoint = 'lg';\n\n  #isDetectionEnabled = true;\n  debouncedOnResize = debounce(this.onResize.bind(this), 50);\n\n  constructor() {\n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', this.debouncedOnResize.bind(this));\n      this.debouncedOnResize();\n    }\n  }\n\n  get breakpoint() {\n    return this.#breakpoint;\n  }\n\n  get onChange() {\n    return this.#breakpointChangeListener;\n  }\n\n  get isDetectionEnabled() {\n    return this.#isDetectionEnabled;\n  }\n\n  private onResize() {\n    if (!this.#isDetectionEnabled) {\n      return;\n    }\n    if (!this.#supportedBreakpoints) {\n      return;\n    }\n    const matchBreakpoints: [Breakpoint, boolean][] = [];\n\n    const breakpoints = this.#supportedBreakpoints;\n\n    breakpoints.forEach((breakpoint) => {\n      const match = matchBreakpoint(breakpoint);\n      matchBreakpoints.push([breakpoint, match]);\n    });\n\n    if (matchBreakpoints.every(([_, match]) => match === false)) {\n      let breakPointIndex = 0;\n      if (!this.#supportedBreakpoints.includes('lg')) {\n        breakPointIndex = matchBreakpoints.length - 1;\n      }\n\n      const [breakpoint, _] = matchBreakpoints[breakPointIndex];\n      requestAnimationFrame(() =>\n        this.#breakpointChangeListener.emit(breakpoint)\n      );\n      this.#breakpoint = breakpoint;\n      return;\n    }\n\n    for (const [breakpoint, match] of matchBreakpoints.reverse()) {\n      if (match) {\n        requestAnimationFrame(() =>\n          this.#breakpointChangeListener.emit(breakpoint)\n        );\n        this.#breakpoint = breakpoint;\n        break;\n      }\n    }\n  }\n\n  public disableBreakpointDetection() {\n    this.#isDetectionEnabled = false;\n  }\n\n  public enableBreakpointDetection() {\n    this.#isDetectionEnabled = true;\n  }\n\n  public setBreakpoint(breakpoint: Breakpoint) {\n    this.#breakpoint = breakpoint;\n    this.#breakpointChangeListener.emit(breakpoint);\n  }\n\n  public setBreakpoints(breakpoints: Breakpoint[]) {\n    this.#supportedBreakpoints = breakpoints;\n    this.onResize();\n  }\n}\n\nexport const applicationLayoutService = new ApplicationLayoutService();\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\ntype AnyFunction = (...args: any[]) => any;\n\nexport function debounce<T extends AnyFunction>(\n  func: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let timeoutId: ReturnType<typeof setTimeout>;\n\n  return function debounced(...args: Parameters<T>): void {\n    clearTimeout(timeoutId);\n\n    timeoutId = setTimeout(() => {\n      func(...args);\n    }, delay);\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  display: flex;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  flex-direction: column;\n\n  ix-application-header {\n    z-index: calc(var(--theme-z-index-sticky) + 1);\n  }\n\n  .logo-wrapper {\n    display: contents;\n  }\n\n  .content {\n    display: flex;\n    height: 100%;\n    width: 100%;\n    position: relative;\n    margin-left: 3.25rem;\n    overflow: auto;\n  }\n\n  .navigation-content {\n    display: flex;\n    position: relative;\n\n    flex-direction: row;\n\n    height: calc(100% - 2.75rem);\n    width: 100%;\n  }\n}\n\n:host(.hide-header) {\n  .navigation-content,\n  .content {\n    height: 100%;\n  }\n}\n\n:host(.breakpoint-lg) {\n  .content {\n    margin-left: 0rem;\n  }\n}\n\n:host(.breakpoint-sm) {\n  .content {\n    margin-left: 0px;\n    width: 100%;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Element, h, Host, Prop, State, Watch } from '@stencil/core';\nimport { ApplicationLayoutContext } from '../utils/application-layout/context';\nimport { applicationLayoutService } from '../utils/application-layout/service';\nimport { Breakpoint } from '../utils/breakpoints';\nimport { ContextProvider, useContextProvider } from '../utils/context';\nimport { menuController } from '../utils/menu-service/menu-service';\nimport { Disposable } from '../utils/typed-event';\n\n@Component({\n  tag: 'ix-basic-navigation',\n  styleUrl: 'basic-navigation.scss',\n  shadow: true,\n})\nexport class BasicNavigation {\n  @Element() hostElement!: HTMLIxBasicNavigationElement;\n\n  /**\n   * Application name\n   */\n  @Prop() applicationName?: string;\n\n  /**\n   * Hide application header. Will disable responsive feature of basic navigation.\n   */\n  @Prop() hideHeader = false;\n  @Watch('hideHeader')\n  onHideHeaderChange() {\n    this.contextProvider?.emit({\n      hideHeader: this.hideHeader,\n      host: 'basic-navigation',\n    });\n\n    this.breakpoint = applicationLayoutService.breakpoint;\n  }\n\n  /**\n   * Change the responsive layout of the menu structure\n   */\n  @Prop() forceBreakpoint: Breakpoint | undefined;\n  forceLayoutChange(newMode: Breakpoint | undefined) {\n    if (!newMode) {\n      applicationLayoutService.enableBreakpointDetection();\n      return;\n    }\n\n    applicationLayoutService.disableBreakpointDetection();\n    applicationLayoutService.setBreakpoint(newMode);\n  }\n\n  /**\n   * Supported layouts\n   * @example ['sm', 'md']\n   */\n  @Prop() breakpoints: Breakpoint[] = ['sm', 'md', 'lg'];\n  @Watch('breakpoints')\n  onBreakpointsChange(breakpoints: Breakpoint[]) {\n    applicationLayoutService.setBreakpoints(breakpoints);\n  }\n\n  @State() breakpoint: Breakpoint = 'lg';\n\n  get menu(): HTMLIxMenuElement | null {\n    return this.hostElement.querySelector('ix-menu');\n  }\n\n  private modeDisposable?: Disposable;\n  private contextProvider?: ContextProvider<typeof ApplicationLayoutContext>;\n\n  private onContentClick() {\n    if (menuController.isPinned) {\n      return;\n    }\n    this.menu?.toggleMenu(false);\n  }\n\n  componentWillLoad() {\n    applicationLayoutService.setBreakpoints(this.breakpoints);\n\n    this.contextProvider = useContextProvider(\n      this.hostElement,\n      ApplicationLayoutContext,\n      {\n        hideHeader: this.hideHeader,\n        host: 'basic-navigation',\n      }\n    );\n\n    this.modeDisposable = applicationLayoutService.onChange.on((mode) => {\n      this.breakpoint = mode;\n    });\n    this.breakpoint = applicationLayoutService.breakpoint;\n\n    if (this.forceBreakpoint) {\n      this.forceLayoutChange(this.forceBreakpoint);\n    }\n  }\n\n  componentDidRender() {\n    if (this.menu) {\n      this.menu.applicationName = this.applicationName;\n    }\n  }\n\n  disconnectedCallback() {\n    this.modeDisposable?.dispose();\n  }\n\n  render() {\n    return (\n      <Host\n        data-role=\"\"\n        class={{\n          'hide-header': this.hideHeader,\n          [`breakpoint-${this.breakpoint}`]: true,\n        }}\n      >\n        {!this.hideHeader ? (\n          <ix-application-header name={this.applicationName}>\n            <slot name=\"logo\" slot=\"logo\"></slot>\n          </ix-application-header>\n        ) : null}\n        <div class=\"navigation-content\">\n          <slot name=\"menu\"></slot>\n          <div class=\"content\" onClick={() => this.onContentClick()}>\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TypedEvent } from '../typed-event';\n\nclass MenuService {\n  #menuElement: HTMLIxMenuElement | null = null;\n  #menuExpandChange = new TypedEvent<boolean>();\n  #isPinned = false;\n\n  register(menuElement: HTMLIxMenuElement) {\n    if (this.#menuElement) {\n      console.warn('Menu already defined');\n      return;\n    }\n    this.#menuElement = menuElement;\n    this.#menuElement.addEventListener(\n      'expandChange',\n      (event: CustomEvent<boolean>) => {\n        this.#menuExpandChange.emit(event.detail);\n      }\n    );\n  }\n\n  public setIsPinned(pinned: boolean) {\n    this.#isPinned = pinned;\n  }\n\n  public async open() {\n    if (this.#menuElement) {\n      this.#menuElement.toggleMenu(true);\n      return true;\n    }\n\n    return false;\n  }\n\n  public async close() {\n    if (this.#menuElement) {\n      this.#menuElement.toggleMenu(false);\n      return true;\n    }\n\n    return false;\n  }\n\n  public async toggle() {\n    if (this.#menuElement) {\n      this.#menuElement.toggleMenu();\n      return true;\n    }\n\n    return false;\n  }\n\n  get nativeElement() {\n    return this.#menuElement;\n  }\n\n  get expandChange() {\n    return this.#menuExpandChange;\n  }\n\n  get isPinned() {\n    return this.#isPinned;\n  }\n}\n\nexport const menuController = new MenuService();\n"],"names":["mediaQueries","sm","md","lg","matchBreakpoint","breakpoint","window","matchMedia","mediaQuery","matches","ContextEvent","Event","constructor","context","callback","subscribe","super","bubbles","composed","useContextConsumer","hostElement","onContextReceived","_unsubscribe","dispatchEvent","ctx","unSub","unsubscribe","useContextProvider","contextPayload","requestContext","TypedEvent","updateContext","requests","Set","addEventListener","event","requestContextEvent","name","stopPropagation","add","emit","delete","on","forEach","r","closestIxMenu","element","closest","ApplicationLayoutContext","initialValue","hideHeader","host","sidebar","applicationLayoutService","_ApplicationLayoutService_supportedBreakpoints","set","_ApplicationLayoutService_breakpointChangeListener","_ApplicationLayoutService_breakpoint","_ApplicationLayoutService_isDetectionEnabled","debouncedOnResize","func","delay","timeoutId","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","debounce","this","onResize","bind","__classPrivateFieldGet","onChange","isDetectionEnabled","matchBreakpoints","match","push","every","_ref","_","breakPointIndex","includes","requestAnimationFrame","__classPrivateFieldSet","reverse","disableBreakpointDetection","enableBreakpointDetection","setBreakpoint","setBreakpoints","breakpoints","BasicNavigation","hostRef","onHideHeaderChange","_a","contextProvider","forceLayoutChange","newMode","onBreakpointsChange","menu","querySelector","onContentClick","menuController","isPinned","toggleMenu","componentWillLoad","modeDisposable","mode","forceBreakpoint","componentDidRender","applicationName","disconnectedCallback","dispose","render","h","Host","key","class","concat","slot","onClick","_MenuService_menuElement","_MenuService_menuExpandChange","_MenuService_isPinned","register","menuElement","console","warn","detail","setIsPinned","pinned","open","close","toggle","nativeElement","expandChange"],"sourceRoot":""}