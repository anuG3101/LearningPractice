{"version":3,"file":"static/js/700.689abae8.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/breakpoints.ts","../node_modules/@siemens/ix/dist/esm/src/components/application/application.scss?tag=ix-application&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/application/application.tsx","../node_modules/@siemens/ix/dist/esm/src/components/utils/shadow-dom.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/context.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/application-layout/context.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/application-layout/service.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/debounce.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/menu-service/menu-service.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// Implementation of scss breakpoints mixins/_break-points.scss\nconst mediaQueries = {\n  sm: '(max-width: 48em)',\n  md: '(min-width: 48.0625em) and (max-width: 80em)',\n  lg: '(min-width: 80.0625em)',\n} as const;\n\nexport type Breakpoint = keyof typeof mediaQueries;\n\nexport const matchBreakpoint = (breakpoint: Breakpoint) => {\n  if (typeof window !== 'undefined' && (window as any).matchMedia) {\n    const mediaQuery = mediaQueries[breakpoint];\n    return window.matchMedia(mediaQuery).matches;\n  }\n  return false;\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  display: flex;\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n\n  flex-direction: column;\n\n  ix-application-header {\n    z-index: calc(var(--theme-z-index-sticky) + 1);\n  }\n\n  .logo-wrapper {\n    display: contents;\n  }\n\n  .application {\n    display: flex;\n    position: relative;\n    flex-direction: row;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n  }\n\n  .content-area {\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    flex-wrap: nowrap;\n    height: calc(100% - var(--ix-safe-area-inset-bottom, 0px));\n    width: 100%;\n    margin-left: var(--ix-application-menu-margin-left);\n  }\n\n  main {\n    display: block;\n    position: relative;\n    flex-grow: 1;\n\n    width: 100%;\n    padding-bottom: var(--ix-safe-area-inset-bottom);\n    overflow: auto;\n  }\n\n  footer {\n    display: block;\n    position: relative;\n    width: 100%;\n  }\n}\n\n:host(.breakpoint-md) {\n  --ix-application-menu-margin-left: calc(\n    3.25rem + var(--ix-application-menu-safe-area-left, 0rem)\n  );\n\n  aside.slotted {\n    margin-left: var(--ix-application-menu-margin-left);\n  }\n\n  aside.slotted + .content-area {\n    margin-left: 0;\n  }\n\n  aside:not(.slotted) + .content-area {\n    margin-left: var(--ix-application-menu-margin-left);\n  }\n}\n\n:host(.breakpoint-lg) {\n  --ix-application-menu-margin-left: 0;\n}\n\n:host(.breakpoint-sm) {\n  --ix-application-menu-margin-left: var(\n    --ix-application-menu-safe-area-left,\n    0rem\n  );\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Element, h, Host, Prop, State, Watch } from '@stencil/core';\nimport {\n  ApplicationLayoutContext,\n  AppSwitchConfiguration,\n} from '../utils/application-layout/context';\nimport { applicationLayoutService } from '../utils/application-layout/service';\nimport { Breakpoint } from '../utils/breakpoints';\nimport { ContextProvider, useContextProvider } from '../utils/context';\nimport { menuController } from '../utils/menu-service/menu-service';\nimport { hasSlottedElements } from '../utils/shadow-dom';\nimport { IxTheme, themeSwitcher } from '../utils/theme-switcher';\nimport { Disposable } from '../utils/typed-event';\n\n@Component({\n  tag: 'ix-application',\n  styleUrl: 'application.scss',\n  shadow: true,\n})\nexport class Application {\n  @Element() hostElement!: HTMLIxApplicationElement;\n\n  /**\n   * Application theme\n   */\n  @Prop() theme?: IxTheme;\n\n  /**\n   * Use the system appearance dark or light\n   */\n  @Prop() themeSystemAppearance = false;\n\n  /**\n   * Change the responsive layout of the menu structure\n   */\n  @Prop() forceBreakpoint: Breakpoint | undefined;\n  forceLayoutChange(newMode: Breakpoint | undefined) {\n    if (!newMode) {\n      applicationLayoutService.enableBreakpointDetection();\n      return;\n    }\n\n    applicationLayoutService.disableBreakpointDetection();\n    applicationLayoutService.setBreakpoint(newMode);\n  }\n\n  /**\n   * Supported layouts\n   */\n  @Prop() breakpoints: Breakpoint[] = ['sm', 'md', 'lg'];\n  @Watch('breakpoints')\n  onBreakpointsChange(breakpoints: Breakpoint[]) {\n    applicationLayoutService.setBreakpoints(breakpoints);\n  }\n\n  /**\n   * Define application switch configuration\n   */\n  @Prop() appSwitchConfig?: AppSwitchConfiguration;\n\n  @State() breakpoint: Breakpoint = 'lg';\n  @State() applicationSidebarSlotted = false;\n\n  private contextProvider?: ContextProvider<typeof ApplicationLayoutContext>;\n\n  get menu(): HTMLIxMenuElement | null {\n    return this.hostElement.querySelector('ix-menu');\n  }\n\n  get applicationSidebarSlot() {\n    return this.hostElement.shadowRoot!.querySelector(\n      '.application-sidebar slot'\n    ) as HTMLSlotElement;\n  }\n\n  private modeDisposable?: Disposable;\n\n  private onContentClick() {\n    if (menuController.isPinned) {\n      return;\n    }\n    this.menu?.toggleMenu(false);\n  }\n\n  componentWillLoad() {\n    applicationLayoutService.setBreakpoints(this.breakpoints);\n\n    this.contextProvider = useContextProvider(\n      this.hostElement,\n      ApplicationLayoutContext,\n      {\n        hideHeader: false,\n        host: 'basic-navigation',\n        sidebar: this.applicationSidebarSlotted,\n        appSwitchConfig: this.appSwitchConfig,\n      }\n    );\n\n    this.modeDisposable = applicationLayoutService.onChange.on((mode) => {\n      this.breakpoint = mode;\n    });\n    this.breakpoint = applicationLayoutService.breakpoint;\n\n    if (this.forceBreakpoint) {\n      this.forceLayoutChange(this.forceBreakpoint);\n    }\n\n    this.changeTheme();\n  }\n\n  disconnectedCallback() {\n    this.modeDisposable?.dispose();\n  }\n\n  @Watch('theme')\n  @Watch('themeSystemAppearance')\n  private changeTheme() {\n    if (!this.theme) {\n      if (this.themeSystemAppearance) {\n        themeSwitcher.setVariant();\n      }\n\n      return;\n    }\n\n    if (themeSwitcher.hasVariantSuffix(this.theme)) {\n      themeSwitcher.setTheme(`theme-${this.theme}`);\n      return;\n    }\n\n    themeSwitcher.setTheme(\n      `theme-${this.theme}-dark`,\n      this.themeSystemAppearance\n    );\n  }\n\n  @Watch('appSwitchConfig')\n  @Watch('applicationSidebarSlotted')\n  onApplicationSidebarChange() {\n    if (!this.contextProvider) {\n      console.error('Context provider not available');\n      return;\n    }\n    this.contextProvider.emit({\n      hideHeader: false,\n      host: 'basic-navigation',\n      sidebar: this.applicationSidebarSlotted,\n      appSwitchConfig: this.appSwitchConfig,\n    });\n  }\n\n  render() {\n    return (\n      <Host\n        data-role=\"\"\n        class={{\n          [`breakpoint-${this.breakpoint}`]: true,\n        }}\n      >\n        <slot name=\"application-header\"></slot>\n        <div class=\"application\">\n          <slot name=\"menu\"></slot>\n          <aside\n            class={{\n              'application-sidebar': true,\n              slotted: this.applicationSidebarSlotted,\n            }}\n            onClick={() => this.onContentClick()}\n          >\n            <slot\n              name=\"application-sidebar\"\n              onSlotchange={() =>\n                (this.applicationSidebarSlotted = hasSlottedElements(\n                  this.applicationSidebarSlot\n                ))\n              }\n            ></slot>\n          </aside>\n          <div class=\"content-area\">\n            <main class=\"content\" onClick={() => this.onContentClick()}>\n              <slot></slot>\n            </main>\n            <footer class=\"footer\">\n              <slot name=\"bottom\"></slot>\n            </footer>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function closestElement(selector: string, el: any): null | Element {\n  if (!el) {\n    return null;\n  }\n  return (\n    el.closest(selector) ||\n    closestElement(selector, (el.getRootNode() as any).host)\n  );\n}\n\nexport function getSlottedElements<R = any>(slot: any): R[] {\n  return slot.assignedElements({ flatten: true });\n}\n\nexport function hasSlottedElements(slot: any) {\n  if (!slot) {\n    return false;\n  }\n  return slot.assignedElements({ flatten: true }).length !== 0;\n}\n\nexport function containsElement(target: Element, element: Element) {\n  const hasShadowDom = target.shadowRoot;\n\n  if (hasShadowDom) {\n    target.contains(element) || target.shadowRoot.contains(element);\n  }\n\n  return target.contains(element);\n}\n\nexport function closestPassShadow(node: Node, selector: string) {\n  if (!node) {\n    return null;\n  }\n\n  if (node instanceof ShadowRoot) {\n    return closestPassShadow(node.host, selector);\n  }\n\n  if (node instanceof HTMLElement) {\n    if (node.matches(selector)) {\n      return node;\n    } else {\n      return closestPassShadow(node.parentNode!, selector);\n    }\n  }\n\n  return closestPassShadow(node.parentNode!, selector);\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TypedEvent } from './typed-event';\n\n/**\n * A Context object defines an optional initial value for a Context, as well as a name identifier for debugging purposes.\n */\nexport type Context<T> = {\n  name: string;\n  initialValue?: T;\n};\n\n/**\n * An unknown context type\n */\nexport type UnknownContext = Context<unknown>;\n\n/**\n * A helper type which can extract a Context value type from a Context type\n */\nexport type ContextType<T extends UnknownContext> =\n  T extends Context<infer Y> ? Y : never;\n\n/**\n * A function which creates a Context value object\n */\nexport function createContext<T>(\n  name: string,\n  initialValue?: T\n): Readonly<Context<T>> {\n  return {\n    name,\n    initialValue,\n  };\n}\n\n/**\n * A callback which is provided by a context requester and is called with the value satisfying the request.\n * This callback can be called multiple times by context providers as the requested value is changed.\n */\nexport type ContextCallback<ValueType> = (\n  value: ValueType,\n  unsubscribe?: () => void\n) => void;\n\n/**\n * An event fired by a context requester to signal it desires a named context.\n *\n * A provider should inspect the `context` property of the event to determine if it has a value that can\n * satisfy the request, calling the `callback` with the requested value if so.\n *\n * If the requested context event contains a truthy `subscribe` value, then a provider can call the callback\n * multiple times if the value is changed, if this is the case the provider should pass an `unsubscribe`\n * function to the callback which requesters can invoke to indicate they no longer wish to receive these updates.\n */\nexport class ContextEvent<T extends UnknownContext> extends Event {\n  public constructor(\n    public readonly context: T,\n    public readonly callback: ContextCallback<ContextType<T>>,\n    public readonly subscribe?: boolean\n  ) {\n    super('context-request', { bubbles: true, composed: true });\n  }\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    /**\n     * A 'context-request' event can be emitted by any element which desires\n     * a context value to be injected by an external provider.\n     */\n    'context-request': ContextEvent<UnknownContext>;\n  }\n}\n\nexport type ContextConsumerSubscription = {\n  unsubscribe: () => void;\n};\n\nexport function useContextConsumer<\n  T extends HTMLElement,\n  C extends UnknownContext,\n>(\n  hostElement: T,\n  context: C,\n  onContextReceived: (\n    context: ContextType<C>,\n    unsubscribe?: () => void\n  ) => void,\n  subscribe?: boolean\n): ContextConsumerSubscription {\n  let _unsubscribe: (() => void) | undefined;\n  hostElement.dispatchEvent(\n    new ContextEvent(\n      context,\n      (ctx, unSub) => {\n        onContextReceived(ctx, unSub);\n        _unsubscribe = unSub;\n      },\n      subscribe\n    )\n  );\n\n  return {\n    unsubscribe: () => {\n      if (_unsubscribe) {\n        _unsubscribe();\n      }\n    },\n  };\n}\nexport type ContextProvider<C extends Context<{}> = Context<any>> = {\n  emit: (context: ContextType<C>) => void;\n};\n\nexport function useContextProvider<\n  X extends {},\n  C extends Context<X>,\n  T extends HTMLElement = HTMLElement,\n>(\n  hostElement: T,\n  context: C,\n  contextPayload?: ContextType<C>\n): ContextProvider<C> {\n  const requestContext = new TypedEvent<ContextEvent<C>>();\n  const updateContext = new TypedEvent<ContextType<C>>();\n\n  const requests = new Set<ContextEvent<UnknownContext>>();\n\n  hostElement.addEventListener('context-request', (event: Event) => {\n    const requestContextEvent = event as ContextEvent<C>;\n    if (requestContextEvent?.context.name !== context.name) {\n      return;\n    }\n\n    requestContextEvent.stopPropagation();\n\n    if (requestContextEvent.subscribe) {\n      requests.add(requestContextEvent);\n    }\n    requestContext.emit(requestContextEvent);\n\n    if (contextPayload) {\n      requestContextEvent.callback(contextPayload, () => {\n        requests.delete(requestContextEvent);\n      });\n    }\n  });\n\n  updateContext.on((context: ContextType<C>) => {\n    requests.forEach((r) =>\n      r.callback(context, () => {\n        requests.delete(r);\n      })\n    );\n  });\n\n  return {\n    emit: (context: ContextType<C>) => {\n      updateContext.emit(context);\n    },\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { createContext } from '../context';\nimport { type LiteralStringUnion } from '../type-helper';\n\nexport const closestIxMenu = (element: Element) => {\n  const menuElement = element.closest('ix-menu');\n  return menuElement;\n};\n\nexport type AppSwitchConfigurationTarget = LiteralStringUnion<\n  '_self' | '_blank' | '_parent' | '_top'\n>;\n\nexport type AppSwitchConfiguration = {\n  currentAppId: string;\n  apps: {\n    id: string;\n    name: string;\n    description: string;\n    url: string;\n    target: AppSwitchConfigurationTarget;\n    iconSrc: string;\n  }[];\n  i18nAppSwitch?: string;\n  i18nLoadingApps?: string;\n};\n\nexport const ApplicationLayoutContext = createContext<{\n  hideHeader: boolean;\n  host: 'basic-navigation' | 'map-navigation' | null;\n  appSwitchConfig?: AppSwitchConfiguration;\n  sidebar?: boolean;\n}>('application-layout-context', {\n  hideHeader: false,\n  host: null,\n  sidebar: false,\n});\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Breakpoint, matchBreakpoint } from '../breakpoints';\nimport { debounce } from '../debounce';\nimport { TypedEvent } from '../typed-event';\n\nclass ApplicationLayoutService {\n  // Keep order of breakpoints\n  #supportedBreakpoints: Breakpoint[] = ['sm', 'md', 'lg'];\n  #breakpointChangeListener = new TypedEvent<Breakpoint>();\n  #breakpoint: Breakpoint = 'lg';\n\n  #isDetectionEnabled = true;\n  debouncedOnResize = debounce(this.onResize.bind(this), 50);\n\n  constructor() {\n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', this.debouncedOnResize.bind(this));\n      this.debouncedOnResize();\n    }\n  }\n\n  get breakpoint() {\n    return this.#breakpoint;\n  }\n\n  get onChange() {\n    return this.#breakpointChangeListener;\n  }\n\n  get isDetectionEnabled() {\n    return this.#isDetectionEnabled;\n  }\n\n  private onResize() {\n    if (!this.#isDetectionEnabled) {\n      return;\n    }\n    if (!this.#supportedBreakpoints) {\n      return;\n    }\n    const matchBreakpoints: [Breakpoint, boolean][] = [];\n\n    const breakpoints = this.#supportedBreakpoints;\n\n    breakpoints.forEach((breakpoint) => {\n      const match = matchBreakpoint(breakpoint);\n      matchBreakpoints.push([breakpoint, match]);\n    });\n\n    if (matchBreakpoints.every(([_, match]) => match === false)) {\n      let breakPointIndex = 0;\n      if (!this.#supportedBreakpoints.includes('lg')) {\n        breakPointIndex = matchBreakpoints.length - 1;\n      }\n\n      const [breakpoint, _] = matchBreakpoints[breakPointIndex];\n      requestAnimationFrame(() =>\n        this.#breakpointChangeListener.emit(breakpoint)\n      );\n      this.#breakpoint = breakpoint;\n      return;\n    }\n\n    for (const [breakpoint, match] of matchBreakpoints.reverse()) {\n      if (match) {\n        requestAnimationFrame(() =>\n          this.#breakpointChangeListener.emit(breakpoint)\n        );\n        this.#breakpoint = breakpoint;\n        break;\n      }\n    }\n  }\n\n  public disableBreakpointDetection() {\n    this.#isDetectionEnabled = false;\n  }\n\n  public enableBreakpointDetection() {\n    this.#isDetectionEnabled = true;\n  }\n\n  public setBreakpoint(breakpoint: Breakpoint) {\n    this.#breakpoint = breakpoint;\n    this.#breakpointChangeListener.emit(breakpoint);\n  }\n\n  public setBreakpoints(breakpoints: Breakpoint[]) {\n    this.#supportedBreakpoints = breakpoints;\n    this.onResize();\n  }\n}\n\nexport const applicationLayoutService = new ApplicationLayoutService();\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\ntype AnyFunction = (...args: any[]) => any;\n\nexport function debounce<T extends AnyFunction>(\n  func: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let timeoutId: ReturnType<typeof setTimeout>;\n\n  return function debounced(...args: Parameters<T>): void {\n    clearTimeout(timeoutId);\n\n    timeoutId = setTimeout(() => {\n      func(...args);\n    }, delay);\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TypedEvent } from '../typed-event';\n\nclass MenuService {\n  #menuElement: HTMLIxMenuElement | null = null;\n  #menuExpandChange = new TypedEvent<boolean>();\n  #isPinned = false;\n\n  register(menuElement: HTMLIxMenuElement) {\n    if (this.#menuElement) {\n      console.warn('Menu already defined');\n      return;\n    }\n    this.#menuElement = menuElement;\n    this.#menuElement.addEventListener(\n      'expandChange',\n      (event: CustomEvent<boolean>) => {\n        this.#menuExpandChange.emit(event.detail);\n      }\n    );\n  }\n\n  public setIsPinned(pinned: boolean) {\n    this.#isPinned = pinned;\n  }\n\n  public async open() {\n    if (this.#menuElement) {\n      this.#menuElement.toggleMenu(true);\n      return true;\n    }\n\n    return false;\n  }\n\n  public async close() {\n    if (this.#menuElement) {\n      this.#menuElement.toggleMenu(false);\n      return true;\n    }\n\n    return false;\n  }\n\n  public async toggle() {\n    if (this.#menuElement) {\n      this.#menuElement.toggleMenu();\n      return true;\n    }\n\n    return false;\n  }\n\n  get nativeElement() {\n    return this.#menuElement;\n  }\n\n  get expandChange() {\n    return this.#menuExpandChange;\n  }\n\n  get isPinned() {\n    return this.#isPinned;\n  }\n}\n\nexport const menuController = new MenuService();\n"],"names":["mediaQueries","sm","md","lg","matchBreakpoint","breakpoint","window","matchMedia","mediaQuery","matches","Application","constructor","hostRef","themeSystemAppearance","breakpoints","applicationSidebarSlotted","forceLayoutChange","newMode","applicationLayoutService","disableBreakpointDetection","setBreakpoint","enableBreakpointDetection","onBreakpointsChange","setBreakpoints","menu","this","hostElement","querySelector","applicationSidebarSlot","shadowRoot","onContentClick","menuController","isPinned","_a","toggleMenu","componentWillLoad","contextProvider","useContextProvider","ApplicationLayoutContext","hideHeader","host","sidebar","appSwitchConfig","modeDisposable","onChange","on","mode","forceBreakpoint","changeTheme","disconnectedCallback","dispose","theme","themeSwitcher","hasVariantSuffix","setTheme","concat","setVariant","onApplicationSidebarChange","emit","console","error","render","h","Host","key","class","name","slotted","onClick","onSlotchange","hasSlottedElements","closestElement","selector","el","closest","getRootNode","getSlottedElements","slot","assignedElements","flatten","length","closestPassShadow","node","ShadowRoot","HTMLElement","parentNode","ContextEvent","Event","context","callback","subscribe","super","bubbles","composed","useContextConsumer","onContextReceived","_unsubscribe","dispatchEvent","ctx","unSub","unsubscribe","contextPayload","requestContext","TypedEvent","updateContext","requests","Set","addEventListener","event","requestContextEvent","stopPropagation","add","delete","forEach","r","closestIxMenu","element","initialValue","_ApplicationLayoutService_supportedBreakpoints","set","_ApplicationLayoutService_breakpointChangeListener","_ApplicationLayoutService_breakpoint","_ApplicationLayoutService_isDetectionEnabled","debouncedOnResize","func","delay","timeoutId","_len","arguments","args","Array","_key","clearTimeout","setTimeout","debounce","onResize","bind","__classPrivateFieldGet","isDetectionEnabled","matchBreakpoints","match","push","every","_ref","_","breakPointIndex","includes","requestAnimationFrame","__classPrivateFieldSet","reverse","_MenuService_menuElement","_MenuService_menuExpandChange","_MenuService_isPinned","register","menuElement","warn","detail","setIsPinned","pinned","open","close","toggle","nativeElement","expandChange"],"sourceRoot":""}