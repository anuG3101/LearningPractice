{"version":3,"file":"static/js/5697.94d78b6c.chunk.js","mappings":"2LAAA,MCmBaA,EAAkB,MAL/BC,WAAAA,CAAAC,I,eAQW,KAAOC,SAAG,CAwCpB,CAnCCC,iBAAAA,GACE,MAAMC,GAAcC,KAAKH,QACnBI,EAA+B,CACnCC,QAASF,KAAKG,YACdC,MAAOL,EAAa,CAAC,IAAK,SAAW,CAAC,QAAS,KAC/CM,QAASN,EAAa,CAAC,EAAG,GAAK,CAAC,EAAG,GACnCO,OAAQ,aACRC,SAAUC,EAAAA,EAAUC,aAGhBC,EAAmBA,KACvBV,KAAKH,QAAUE,GAGbA,EACFE,EAAUU,MAAQD,EAAiBE,KAAKZ,MAExCC,EAAUY,SAAWH,EAAiBE,KAAKZ,OAG7Cc,EAAAA,EAAAA,GAAMb,E,CAGRc,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAAAC,IAAA,2CACHC,KAAK,sBACLC,MAAO,CACLvB,QAASG,KAAKH,UAGfG,KAAKH,SAAUmB,EAAAA,EAAAA,GAAa,aAAG,K,iDD1DV,65B","sources":["../node_modules/@siemens/ix/dist/esm/src/components/application-sidebar/application-sidebar.scss?tag=ix-application-sidebar&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/application-sidebar/application-sidebar.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  display: block;\n  position: relative;\n\n  width: 22rem;\n  height: 100%;\n\n  padding: 0;\n}\n\n:host(.visible) {\n  border-right: 2px solid var(--theme-color-soft-bdr);\n  padding: 1.5rem 0.5rem 0;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Element, h, Host, Listen, State } from '@stencil/core';\nimport anime from 'animejs';\nimport Animation from '../utils/animation';\n\n/** @internal */\n@Component({\n  tag: 'ix-application-sidebar',\n  styleUrl: 'application-sidebar.scss',\n  shadow: true,\n})\nexport class ApplicationSidebar {\n  @Element() hostElement!: HTMLIxApplicationSidebarElement;\n\n  @State() visible = true;\n\n  @Listen('application-sidebar-toggle', {\n    target: 'window',\n  })\n  listenToggleEvent() {\n    const visibility = !this.visible;\n    const animation: anime.AnimeParams = {\n      targets: this.hostElement,\n      width: visibility ? ['0', '22rem'] : ['22rem', '0'],\n      opacity: visibility ? [0, 1] : [1, 0],\n      easing: 'easeInSine',\n      duration: Animation.defaultTime,\n    };\n\n    const changeVisibility = () => {\n      this.visible = visibility;\n    };\n\n    if (visibility) {\n      animation.begin = changeVisibility.bind(this);\n    } else {\n      animation.complete = changeVisibility.bind(this);\n    }\n\n    anime(animation);\n  }\n\n  render() {\n    return (\n      <Host\n        slot=\"application-sidebar\"\n        class={{\n          visible: this.visible,\n        }}\n      >\n        {this.visible ? <slot></slot> : null}\n      </Host>\n    );\n  }\n}\n"],"names":["ApplicationSidebar","constructor","hostRef","visible","listenToggleEvent","visibility","this","animation","targets","hostElement","width","opacity","easing","duration","Animation","defaultTime","changeVisibility","begin","bind","complete","anime","render","h","Host","key","slot","class"],"sourceRoot":""}