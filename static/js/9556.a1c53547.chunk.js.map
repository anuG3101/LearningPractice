{"version":3,"file":"static/js/9556.a1c53547.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/shadow-dom.ts","../node_modules/@siemens/ix/dist/esm/src/components/input-group/input-group.scss?tag=ix-input-group&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/input-group/input-group.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function closestElement(selector: string, el: any): null | Element {\n  if (!el) {\n    return null;\n  }\n  return (\n    el.closest(selector) ||\n    closestElement(selector, (el.getRootNode() as any).host)\n  );\n}\n\nexport function getSlottedElements<R = any>(slot: any): R[] {\n  return slot.assignedElements({ flatten: true });\n}\n\nexport function hasSlottedElements(slot: any) {\n  if (!slot) {\n    return false;\n  }\n  return slot.assignedElements({ flatten: true }).length !== 0;\n}\n\nexport function containsElement(target: Element, element: Element) {\n  const hasShadowDom = target.shadowRoot;\n\n  if (hasShadowDom) {\n    target.contains(element) || target.shadowRoot.contains(element);\n  }\n\n  return target.contains(element);\n}\n\nexport function closestPassShadow(node: Node, selector: string) {\n  if (!node) {\n    return null;\n  }\n\n  if (node instanceof ShadowRoot) {\n    return closestPassShadow(node.host, selector);\n  }\n\n  if (node instanceof HTMLElement) {\n    if (node.matches(selector)) {\n      return node;\n    } else {\n      return closestPassShadow(node.parentNode!, selector);\n    }\n  }\n\n  return closestPassShadow(node.parentNode!, selector);\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'mixins/shadow-dom/component';\n@import 'mixins/shadow-dom/host-disabled';\n\n:host {\n  @include ix-component;\n\n  position: relative;\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  align-items: stretch;\n\n  .group {\n    display: flex;\n    position: absolute;\n    align-items: center;\n    height: 100%;\n  }\n\n  .group-start {\n    left: 0px;\n    height: 2rem;\n    margin-left: 0.5rem;\n    color: var(--theme-color-soft-text);\n  }\n\n  .group-end {\n    right: 0px;\n    height: 2rem;\n    margin-right: 0.5rem;\n    color: var(--theme-color-soft-text);\n  }\n\n  ::slotted(*) {\n    display: flex;\n  }\n}\n\n@include host-disabled {\n  .group-start,\n  .group-end {\n    ::slotted(*) {\n      opacity: 0.4 !important;\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Element, h, Host, State } from '@stencil/core';\nimport { getSlottedElements } from '../utils/shadow-dom';\n\n/**\n * @deprecated Will be removed with 4.0.0\n * Use the 'ix-input' component instead\n */\n@Component({\n  tag: 'ix-input-group',\n  styleUrl: 'input-group.scss',\n  shadow: true,\n})\nexport class InputGroup {\n  @Element() hostElement!: HTMLIxInputGroupElement;\n\n  @State() disabled = false;\n\n  @State() inputPaddingLeft = 0;\n  @State() inputPaddingRight = 0;\n\n  startSlotRef?: HTMLElement;\n  endSlotRef?: HTMLElement;\n\n  private get inputElement() {\n    return this.hostElement.querySelector('input') as HTMLInputElement;\n  }\n\n  private observer?: MutationObserver;\n\n  componentWillLoad() {\n    const { valid } = this.inputElement.validity;\n    this.inputElement.addEventListener('valid', () => {\n      this.onValidInput();\n    });\n    this.inputElement.addEventListener('invalid', () => {\n      this.onInvalidInput();\n    });\n    this.inputElement.addEventListener('input', () => {\n      this.startSlotChanged();\n    });\n\n    this.inputElement.form?.addEventListener('submit', () => {\n      this.startSlotChanged();\n    });\n\n    valid ? this.onValidInput() : this.onInvalidInput();\n\n    this.observer = new MutationObserver(() => {\n      this.slotChanged();\n      this.startSlotChanged();\n      this.endSlotChanged();\n    });\n\n    this.observer.observe(this.hostElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      characterData: true,\n    });\n  }\n\n  componentDidRender() {\n    this.prepareInputElement();\n  }\n\n  private onValidInput() {\n    this.startSlotChanged();\n  }\n\n  private onInvalidInput() {\n    this.startSlotChanged();\n  }\n\n  private prepareInputElement() {\n    if (this.inputElement) {\n      this.inputElement.style.width = '100%';\n\n      if (this.inputPaddingRight !== 0) {\n        this.inputElement.style.paddingRight = this.inputPaddingRight + 'px';\n      } else {\n        this.inputElement.style.paddingRight = '0.5rem';\n      }\n\n      if (this.inputPaddingLeft !== 0) {\n        this.inputElement.style.paddingLeft = this.inputPaddingLeft + 'px';\n      } else {\n        this.inputElement.style.paddingLeft = '0.5rem';\n      }\n    } else {\n      console.warn(\n        'You used the ix-input-group without an input tag, e.g. <input class=\"ix-form-control\" />'\n      );\n    }\n  }\n\n  private slotChanged() {\n    this.disabled = this.inputElement?.disabled;\n  }\n\n  private startSlotChanged() {\n    setTimeout(() => {\n      const startPadding = this.getChildrenWidth(this.startSlotRef);\n\n      if (startPadding !== 0) {\n        this.inputPaddingLeft = 11 + startPadding;\n      } else {\n        this.inputPaddingLeft = 0;\n      }\n\n      if (!this.inputElement) {\n        return;\n      }\n\n      const isInputInvalid =\n        !this.inputElement.validity.valid ||\n        this.inputElement.classList.contains('is-invalid');\n\n      const formWasValidated =\n        this.inputElement.form?.classList.contains('was-validated') ||\n        this.inputElement.form?.noValidate === false;\n\n      if (formWasValidated && isInputInvalid) {\n        const left = this.inputPaddingLeft !== 0 ? this.inputPaddingLeft : 7;\n        this.inputElement.style.backgroundPosition = `left ${left}px center`;\n        this.inputPaddingLeft += 26;\n      }\n    });\n  }\n\n  private endSlotChanged() {\n    setTimeout(() => {\n      this.inputPaddingRight = 15 + this.getChildrenWidth(this.endSlotRef);\n    });\n  }\n\n  private getChildrenWidth(slotElement: Element | undefined) {\n    if (!slotElement) {\n      return 0;\n    }\n\n    const endElements = getSlottedElements<HTMLElement>(slotElement);\n    if (endElements.length === 0) {\n      return 0;\n    }\n\n    let width = 0;\n\n    endElements.forEach((element) => {\n      width += element.getBoundingClientRect().width;\n    });\n\n    return width;\n  }\n\n  render() {\n    return (\n      <Host class={{ disabled: this.disabled }}>\n        <div class=\"group group-start\">\n          <slot\n            ref={(el) => (this.startSlotRef = el as HTMLElement)}\n            name=\"input-start\"\n          ></slot>\n        </div>\n        <slot></slot>\n        <div class=\"group group-end\">\n          <slot\n            ref={(el) => (this.endSlotRef = el as HTMLElement)}\n            name=\"input-end\"\n          ></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"names":["closestElement","selector","el","closest","getRootNode","host","getSlottedElements","slot","assignedElements","flatten","hasSlottedElements","length","closestPassShadow","node","ShadowRoot","HTMLElement","matches","parentNode","InputGroup","constructor","hostRef","disabled","inputPaddingLeft","inputPaddingRight","inputElement","this","hostElement","querySelector","componentWillLoad","valid","validity","addEventListener","onValidInput","onInvalidInput","startSlotChanged","_a","form","observer","MutationObserver","slotChanged","endSlotChanged","observe","subtree","childList","attributes","characterData","componentDidRender","prepareInputElement","style","width","paddingRight","paddingLeft","console","warn","setTimeout","startPadding","getChildrenWidth","startSlotRef","isInputInvalid","classList","contains","_b","noValidate","left","backgroundPosition","concat","endSlotRef","slotElement","endElements","forEach","element","getBoundingClientRect","render","h","Host","key","class","ref","name"],"sourceRoot":""}