{"version":3,"file":"static/js/6698.ce7cbd24.chunk.js","mappings":"4GAQgB,SAAAA,EAAeC,EAAkBC,GAC/C,OAAKA,EAIHA,EAAGC,QAAQF,IACXD,EAAeC,EAAWC,EAAGE,cAAsBC,MAJ5C,IAMX,CAEM,SAAUC,EAA4BC,GAC1C,OAAOA,EAAKC,iBAAiB,CAAEC,SAAS,GAC1C,CAEM,SAAUC,EAAmBH,GACjC,QAAKA,GAGsD,IAApDA,EAAKC,iBAAiB,CAAEC,SAAS,IAAQE,MAClD,CAYgB,SAAAC,EAAkBC,EAAYZ,GAC5C,OAAKY,EAIDA,aAAgBC,WACXF,EAAkBC,EAAKR,KAAMJ,GAGlCY,aAAgBE,aACdF,EAAKG,QAAQf,GACRY,EAMJD,EAAkBC,EAAKI,WAAahB,GAflC,IAgBX,C,uJCzDA,MCgBaiB,EAAY,M,+BACvBC,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAAAC,IAAA,6CACHF,EAAAA,EAAAA,GAAa,QAAAE,IAAA,6C,WDpBG,u0BEAxB,MC2BaC,EAAW,MALxBC,WAAAA,CAAAC,I,4DAWU,KAASC,WAAG,CAsErB,CA9DCC,YAAAA,CAAaC,GACPC,KAAKC,eACHF,EACFC,KAAKC,aAAaC,UAAUC,IAAI,aAEhCH,KAAKC,aAAaC,UAAUE,OAAO,a,CAkBzCC,gBAAAA,GACEL,KAAKC,cAAelB,EAAAA,EAAAA,GAClBiB,KAAKM,YACL,YAEFN,KAAKF,aAAaE,KAAKD,K,CAGjBQ,YAAAA,CAAaC,GACRR,KAAKS,WAAWC,KAAKF,GACzBG,kBAAoBH,EAAMG,kBAIjCX,KAAKC,aAAaW,c,CAGpBtB,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAAAC,IAAA,4CACFO,KAAKD,MACJR,EAAAA,EAAAA,GAAA,WAASsB,KAAMb,KAAKD,KAAMe,MAAOd,KAAKe,UAAWC,KAAK,OACpD,MACJzB,EAAAA,EAAAA,GAAK,OAAAE,IAAA,2CAAAwB,MAAM,gBACT1B,EAAAA,EAAAA,GAAe,iBAAAE,IAAA,2CAAAyB,OAAO,OACpB3B,EAAAA,EAAAA,GAAA,QAAAE,IAAA,+CAGFO,KAAKH,UAOH,MANFN,EAAAA,EAAAA,GAAA,kBACE0B,MAAM,cACNE,QAAUX,GAAUR,KAAKO,aAAaC,GACtCY,OAAK,EACLrB,KAAMsB,EAAAA,I,qGDjGK,g5B","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/shadow-dom.ts","../node_modules/@siemens/ix/dist/esm/src/components/modal-content/modal-content.scss?tag=ix-modal-content&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/modal-content/modal-content.tsx","../node_modules/@siemens/ix/dist/esm/src/components/modal-header/modal-header.scss?tag=ix-modal-header&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/modal-header/modal-header.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function closestElement(selector: string, el: any): null | Element {\n  if (!el) {\n    return null;\n  }\n  return (\n    el.closest(selector) ||\n    closestElement(selector, (el.getRootNode() as any).host)\n  );\n}\n\nexport function getSlottedElements<R = any>(slot: any): R[] {\n  return slot.assignedElements({ flatten: true });\n}\n\nexport function hasSlottedElements(slot: any) {\n  if (!slot) {\n    return false;\n  }\n  return slot.assignedElements({ flatten: true }).length !== 0;\n}\n\nexport function containsElement(target: Element, element: Element) {\n  const hasShadowDom = target.shadowRoot;\n\n  if (hasShadowDom) {\n    target.contains(element) || target.shadowRoot.contains(element);\n  }\n\n  return target.contains(element);\n}\n\nexport function closestPassShadow(node: Node, selector: string) {\n  if (!node) {\n    return null;\n  }\n\n  if (node instanceof ShadowRoot) {\n    return closestPassShadow(node.host, selector);\n  }\n\n  if (node instanceof HTMLElement) {\n    if (node.matches(selector)) {\n      return node;\n    } else {\n      return closestPassShadow(node.parentNode!, selector);\n    }\n  }\n\n  return closestPassShadow(node.parentNode!, selector);\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  display: block;\n  position: relative;\n  overflow: auto;\n  padding: 0 0.5rem 0.5rem;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, h, Host } from '@stencil/core';\n\n@Component({\n  tag: 'ix-modal-content',\n  styleUrl: 'modal-content.scss',\n  shadow: true,\n})\nexport class ModalContent {\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n  display: flex;\n  padding: 0.5rem 0 0.5rem 0.5rem;\n  align-items: center;\n  gap: 1rem;\n\n  .modal-title {\n    flex-grow: 1;\n  }\n\n  .modal-close  {\n    align-self: flex-start;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  Watch,\n} from '@stencil/core';\nimport { closestPassShadow } from '../utils/shadow-dom';\nimport { iconClose } from '@siemens/ix-icons/icons';\n\n@Component({\n  tag: 'ix-modal-header',\n  styleUrl: 'modal-header.scss',\n  shadow: true,\n})\nexport class ModalHeader {\n  @Element() hostElement!: HTMLIxModalHeaderElement;\n\n  /**\n   * Hide the close button\n   */\n  @Prop() hideClose = false;\n\n  /**\n   * Icon of the Header\n   */\n  @Prop() icon?: string;\n\n  @Watch('icon')\n  onIconChange(icon?: string) {\n    if (this.parentDialog) {\n      if (icon) {\n        this.parentDialog.classList.add('with-icon');\n      } else {\n        this.parentDialog.classList.remove('with-icon');\n      }\n    }\n  }\n\n  /**\n   * Icon color\n   */\n  @Prop() iconColor?: string;\n\n  /**\n   * Emits when close icon is clicked and closes the modal\n   * Can be prevented, in which case only the event is triggered, and the modal remains open\n   */\n  @Event() closeClick!: EventEmitter<MouseEvent>;\n\n  private parentDialog!: HTMLIxModalElement;\n\n  componentDidLoad() {\n    this.parentDialog = closestPassShadow(\n      this.hostElement,\n      'ix-modal'\n    ) as HTMLIxModalElement;\n    this.onIconChange(this.icon);\n  }\n\n  private onCloseClick(event: MouseEvent) {\n    const ce = this.closeClick.emit(event);\n    if (ce.defaultPrevented || event.defaultPrevented) {\n      return;\n    }\n\n    this.parentDialog.dismissModal();\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.icon ? (\n          <ix-icon name={this.icon} color={this.iconColor} size=\"32\"></ix-icon>\n        ) : null}\n        <div class=\"modal-title\">\n          <ix-typography format=\"h5\">\n            <slot></slot>\n          </ix-typography>\n        </div>\n        {!this.hideClose ? (\n          <ix-icon-button\n            class=\"modal-close\"\n            onClick={(event) => this.onCloseClick(event)}\n            ghost\n            icon={iconClose}\n          ></ix-icon-button>\n        ) : null}\n      </Host>\n    );\n  }\n}\n"],"names":["closestElement","selector","el","closest","getRootNode","host","getSlottedElements","slot","assignedElements","flatten","hasSlottedElements","length","closestPassShadow","node","ShadowRoot","HTMLElement","matches","parentNode","ModalContent","render","h","Host","key","ModalHeader","constructor","hostRef","hideClose","onIconChange","icon","this","parentDialog","classList","add","remove","componentDidLoad","hostElement","onCloseClick","event","closeClick","emit","defaultPrevented","dismissModal","name","color","iconColor","size","class","format","onClick","ghost","iconClose"],"sourceRoot":""}