{"version":3,"file":"static/js/2278.f986a69d.chunk.js","mappings":"4GAQgB,SAAAA,EAAeC,EAAkBC,GAC/C,OAAKA,EAIHA,EAAGC,QAAQF,IACXD,EAAeC,EAAWC,EAAGE,cAAsBC,MAJ5C,IAMX,CAEM,SAAUC,EAA4BC,GAC1C,OAAOA,EAAKC,iBAAiB,CAAEC,SAAS,GAC1C,CAEM,SAAUC,EAAmBH,GACjC,QAAKA,GAGsD,IAApDA,EAAKC,iBAAiB,CAAEC,SAAS,IAAQE,MAClD,CAYgB,SAAAC,EAAkBC,EAAYZ,GAC5C,OAAKY,EAIDA,aAAgBC,WACXF,EAAkBC,EAAKR,KAAMJ,GAGlCY,aAAgBE,aACdF,EAAKG,QAAQf,GACRY,EAMJD,EAAkBC,EAAKI,WAAahB,GAflC,IAgBX,C,0JCzDA,MCkBaiB,EAAgB,MAL7BC,WAAAA,CAAAC,I,eAQW,KAAeC,iBAAG,CAoD5B,CAlDSC,UAAAA,GACN,OAAOC,KAAKC,W,CAGNC,iBAAAA,CACNC,EACAC,GAEAD,EAAgBE,oBAAsB,QACtCF,EAAgBG,QAAUF,C,CAGpBG,YAAAA,GACN,MAAMvB,EAAOgB,KAAKC,YAAYO,WAAYC,cAAc,QACxD,IAAKzB,EACH,OAEF,MAAM0B,GAAW3B,EAAAA,EAAAA,GAAmBC,GACpCgB,KAAKF,gBAAsC,IAApBY,EAAStB,OAEhC,MAAMe,EAAkBO,EAASC,MAC9BC,GAAiC,gBAAhBA,EAAIC,UAGlBT,EAAiBJ,KAAKD,aAEvBK,GAIAD,GAILH,KAAKE,kBAAkBC,EAAiBC,E,CAG1CU,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAAAC,IAAA,6CACHF,EAAAA,EAAAA,GACE,kBAAAE,IAAA,2CAAAC,MAAO,CAAEC,MAAOnB,KAAKF,iBACrBsB,KAAK,KACLC,OAAO,EACPC,KAAMC,EAAAA,KAERR,EAAAA,EAAAA,GAAA,QAAAE,IAAA,2CAAMO,aAAcA,IAAMxB,KAAKO,iB,iDDrEX,8NEA5B,MCyBakB,EAAS,MALtB7B,WAAAA,CAAAC,I,sEA0BU,KAAiB6B,mBAAG,EAKpB,KAAQC,UAAY,EAMpB,KAASC,WAAG,CA0CrB,CA7BCC,WAAAA,GACE7B,KAAK8B,gBAAgBC,KAAK/B,KAAKC,Y,CAGjCa,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAAAC,IAAA,2CACHC,MAAO,CACLS,SAAU3B,KAAK2B,WAAa3B,KAAK0B,qBAGnCX,EAAAA,EAAAA,GAAA,UAAAE,IAAA,2CAAQe,SAAUhC,KAAK4B,UAAY,GAAK,IACtCb,EAAAA,EAAAA,GAAK,OAAAE,IAAA,2CAAAC,MAAM,oCACVlB,KAAKsB,MAAOP,EAAAA,EAAAA,GAAA,WAASK,KAAK,KAAKa,KAAMjC,KAAKsB,OAAmB,KAC7DtB,KAAKkC,MACJnB,EAAAA,EAAAA,GAAA,QAAMG,MAAM,qBACVH,EAAAA,EAAAA,GAAA,QAAMoB,MAAOnC,KAAKkC,MAAOlC,KAAKkC,OAE9B,KACHlC,KAAKoC,eACJrB,EAAAA,EAAAA,GAAA,QAAMG,MAAM,+BACVH,EAAAA,EAAAA,GAAA,QAAMoB,MAAOnC,KAAKoC,eAAgBpC,KAAKoC,gBAEvC,MACJrB,EAAAA,EAAAA,GAAa,QAAAE,IAAA,8C,iDD9FF,iqF","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/shadow-dom.ts","../node_modules/@siemens/ix/dist/esm/src/components/group/group-context-menu.scss?tag=ix-group-context-menu&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/group/group-context-menu.tsx","../node_modules/@siemens/ix/dist/esm/src/components/group-item/group-item.scss?tag=ix-group-item&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/group-item/group-item.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function closestElement(selector: string, el: any): null | Element {\n  if (!el) {\n    return null;\n  }\n  return (\n    el.closest(selector) ||\n    closestElement(selector, (el.getRootNode() as any).host)\n  );\n}\n\nexport function getSlottedElements<R = any>(slot: any): R[] {\n  return slot.assignedElements({ flatten: true });\n}\n\nexport function hasSlottedElements(slot: any) {\n  if (!slot) {\n    return false;\n  }\n  return slot.assignedElements({ flatten: true }).length !== 0;\n}\n\nexport function containsElement(target: Element, element: Element) {\n  const hasShadowDom = target.shadowRoot;\n\n  if (hasShadowDom) {\n    target.contains(element) || target.shadowRoot.contains(element);\n  }\n\n  return target.contains(element);\n}\n\nexport function closestPassShadow(node: Node, selector: string) {\n  if (!node) {\n    return null;\n  }\n\n  if (node instanceof ShadowRoot) {\n    return closestPassShadow(node.host, selector);\n  }\n\n  if (node instanceof HTMLElement) {\n    if (node.matches(selector)) {\n      return node;\n    } else {\n      return closestPassShadow(node.parentNode!, selector);\n    }\n  }\n\n  return closestPassShadow(node.parentNode!, selector);\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n:host {\n  display: block;\n  position: relative;\n\n  height: 2rem;\n  width: 2rem;\n\n  margin-block-start: 0.3125rem;\n  margin-inline-end: 0.3125rem;\n  margin-inline-start: auto;\n\n  .hide {\n    visibility: collapse;\n  }\n\n  ::slotted(ix-dropdown) {\n    cursor: default;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Element, h, Host, State } from '@stencil/core';\nimport { getSlottedElements } from '../utils/shadow-dom';\nimport { iconContextMenu } from '@siemens/ix-icons/icons';\n\n@Component({\n  tag: 'ix-group-context-menu',\n  styleUrl: './group-context-menu.scss',\n  shadow: true,\n})\nexport class GroupContextMenu {\n  @Element() hostElement!: HTMLIxGroupContextMenuElement;\n\n  @State() showContextMenu = false;\n\n  private getTrigger() {\n    return this.hostElement;\n  }\n\n  private configureDropdown(\n    dropdownElement: HTMLIxDropdownElement,\n    triggerElement: HTMLElement\n  ) {\n    dropdownElement.positioningStrategy = 'fixed';\n    dropdownElement.trigger = triggerElement;\n  }\n\n  private onSlotChange() {\n    const slot = this.hostElement.shadowRoot!.querySelector('slot');\n    if (!slot) {\n      return;\n    }\n    const elements = getSlottedElements(slot);\n    this.showContextMenu = elements.length !== 0;\n\n    const dropdownElement = elements.find(\n      (elm: Element) => elm.tagName === 'IX-DROPDOWN'\n    );\n\n    const triggerElement = this.getTrigger();\n\n    if (!triggerElement) {\n      return;\n    }\n\n    if (!dropdownElement) {\n      return;\n    }\n\n    this.configureDropdown(dropdownElement, triggerElement);\n  }\n\n  render() {\n    return (\n      <Host>\n        <ix-icon-button\n          class={{ hide: !this.showContextMenu }}\n          size=\"24\"\n          ghost={true}\n          icon={iconContextMenu}\n        ></ix-icon-button>\n        <slot onSlotchange={() => this.onSlotChange()}></slot>\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'legacy/mixins/fonts';\n@import 'mixins/shadow-dom/hover';\n@import 'mixins/shadow-dom/component';\n@import 'mixins/text-truncation';\n\n$focusBorderWidth: 1px;\n\n:host {\n  @include ix-component;\n  display: flex;\n  min-height: 2.25rem;\n  height: 2.25rem;\n\n  > button {\n    display: flex;\n    height: 100%;\n    width: 100%;\n    align-items: center;\n    justify-content: flex-start;\n    position: relative;\n    outline: none;\n    background-color: var(--theme-group-item--background);\n    border: 1px solid transparent;\n    color: var(--theme-color-std-text);\n    cursor: pointer;\n\n    padding-left: 2.5rem;\n\n    &:focus-visible {\n      border: $focusBorderWidth solid var(--theme-color-focus-bdr);\n    }\n  }\n\n  ix-icon {\n    margin-right: $tiny-space;\n    margin-top: -0.125rem;\n  }\n\n  .group-entry-selection-indicator {\n    position: absolute;\n    left: -#{$focusBorderWidth};\n    height: calc(100% + #{$focusBorderWidth * 2});\n    width: $tiny-space;\n  }\n\n  .group-entry-text {\n    @include text-default;\n    @include ellipsis();\n  }\n\n  .group-entry-text-secondary {\n    &,\n    span {\n      @include text-default;\n      @include ellipsis;\n    }\n\n    display: flex;\n    justify-content: flex-end;\n    flex-grow: 1;\n    white-space: nowrap;\n    color: var(--theme-color-soft-text);\n  }\n}\n\n:host(.selected) {\n  border-top-width: 0.062rem !important;\n  background-color: var(--theme-color-ghost--selected);\n\n  .group-entry-selection-indicator {\n    background-color: var(--theme-group-item-indicator--background--selected);\n  }\n}\n\n:host(:hover) {\n  background-color: var(--theme-color-ghost--selected-hover);\n  border-color: var(--theme-group-item--border-color--hover);\n}\n\n:host(.selected:hover) {\n  background-color: var(--theme-color-ghost--selected-hover);\n}\n\n:host(:active) {\n  background-color: var(--theme-color-ghost--selected-active);\n  border-color: var(--theme-group-item--border-color--active);\n}\n\n:host(.selected:active) {\n  background-color: var(--theme-color-ghost--selected-active);\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n} from '@stencil/core';\n\n@Component({\n  tag: 'ix-group-item',\n  styleUrl: 'group-item.scss',\n  shadow: true,\n})\nexport class GroupItem {\n  @Element() hostElement!: HTMLIxGroupItemElement;\n\n  /**\n   * Group item icon\n   */\n  @Prop() icon?: string;\n\n  /**\n   * Group item text\n   */\n  @Prop() text?: string;\n\n  /**\n   * Group item secondary text\n   */\n  @Prop() secondaryText?: string;\n\n  /**\n   * Supress the selection of the group\n   */\n  @Prop() suppressSelection = false;\n\n  /**\n   * Show selected state\n   */\n  @Prop() selected: boolean = false;\n\n  /**\n   * The elements tabindex attribute will get set accordingly.\n   * If true tabindex will be 0, -1 otherwise.\n   */\n  @Prop() focusable = true;\n\n  /**\n   * Selection changed\n   */\n  @Event() selectedChanged!: EventEmitter<HTMLIxGroupItemElement>;\n\n  /**\n   * Index\n   */\n  @Prop() index?: number;\n\n  @Listen('click', { passive: true })\n  clickListen() {\n    this.selectedChanged.emit(this.hostElement);\n  }\n\n  render() {\n    return (\n      <Host\n        class={{\n          selected: this.selected && !this.suppressSelection,\n        }}\n      >\n        <button tabindex={this.focusable ? 0 : -1}>\n          <div class=\"group-entry-selection-indicator\"></div>\n          {this.icon ? <ix-icon size=\"16\" name={this.icon}></ix-icon> : null}\n          {this.text ? (\n            <span class=\"group-entry-text\">\n              <span title={this.text}>{this.text}</span>\n            </span>\n          ) : null}\n          {this.secondaryText ? (\n            <span class=\"group-entry-text-secondary\">\n              <span title={this.secondaryText}>{this.secondaryText}</span>\n            </span>\n          ) : null}\n          <slot></slot>\n        </button>\n      </Host>\n    );\n  }\n}\n"],"names":["closestElement","selector","el","closest","getRootNode","host","getSlottedElements","slot","assignedElements","flatten","hasSlottedElements","length","closestPassShadow","node","ShadowRoot","HTMLElement","matches","parentNode","GroupContextMenu","constructor","hostRef","showContextMenu","getTrigger","this","hostElement","configureDropdown","dropdownElement","triggerElement","positioningStrategy","trigger","onSlotChange","shadowRoot","querySelector","elements","find","elm","tagName","render","h","Host","key","class","hide","size","ghost","icon","iconContextMenu","onSlotchange","GroupItem","suppressSelection","selected","focusable","clickListen","selectedChanged","emit","tabindex","name","text","title","secondaryText"],"sourceRoot":""}