{"version":3,"file":"static/js/8776.047b15a5.chunk.js","mappings":"6LAAA,MCyBaA,EAAU,MALvBC,WAAAA,CAAAC,I,4DAWU,KAAQC,UAAG,EAKX,KAAQC,UAAG,CAqCpB,CA9BSC,YAAAA,CAAaC,GACnBA,EAAMC,iBACND,EAAME,kBACNC,KAAKC,WAAWC,M,CAGlBC,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EACC,CAAAC,IAAA,2CAAAC,MAAO,CAAEb,SAAUM,KAAKN,SAAUC,SAAUK,KAAKL,UACjDa,MAAOR,KAAKS,YAAYC,cAExBN,EAAAA,EAAAA,GAAK,OAAAE,IAAA,2CAAAC,MAAM,mBACTH,EAAAA,EAAAA,GAAA,QAAAE,IAAA,8CAEAN,KAAKN,UAAaM,KAAKL,SAWrB,MAVFS,EAAAA,EAAAA,GAAA,kBACEO,OACA,EAAAC,MACA,EAAAC,KAAMC,EAAAA,EACNC,KAAK,KACLC,SAAUhB,KAAKN,UAAY,EAAI,EAC/BuB,QAAQ,UACRvB,SAAUM,KAAKN,SACfwB,QAAUC,GAAMnB,KAAKJ,aAAauB,K,iDDnExB,20EEQhB,MAAOC,UAAqCC,YAIhD7B,WAAAA,CAAY8B,GACVC,MAAM,6BAA8B,CAClCC,SAAS,EACTF,U,EAKA,MAAOG,UAAqCJ,YAIhD7B,WAAAA,CAAY8B,GACVC,MAAM,6BAA8B,CAClCC,SAAS,EACTF,U,EC3BN,MC+BaI,EAAU,MALvBlC,WAAAA,CAAAC,I,0DAuBU,KAAQkC,UAAG,EAKX,KAAKC,OAAG,EAOR,KAAeC,iBAAG,CAqE3B,CAjEC,4BAAMC,GACJ,OAAO9B,KAAK+B,Y,CAQd,iBAAMC,CAAYnC,GACX,OAALA,QAAK,IAALA,GAAAA,EAAOC,iBACF,OAALD,QAAK,IAALA,GAAAA,EAAOE,kBAEPC,KAAKiC,UAAU/B,KAAKF,KAAKkC,M,CAG3B,gBAAIH,GACF,OAAO/B,KAAKS,YAAY0B,cAAc,mB,CAGxCC,kBAAAA,QACqBC,IAAfrC,KAAKkC,OAAsC,OAAflC,KAAKkC,OACnCI,QAAQC,KAAK,+CAEfvC,KAAK6B,iBAAkB,C,CAIzBW,aAAAA,CAAcC,EAAkBC,GAC1B1C,KAAK6B,iBACP7B,KAAKS,YAAYkC,cACf,IAAIlB,EAA6B,CAC/BgB,SAAUA,EACVC,SAAUA,I,CAOlBE,WAAAA,CAAYH,EAAkBC,GACxB1C,KAAK6B,iBACP7B,KAAKS,YAAYkC,cACf,IAAIvB,EAA6B,CAC/BqB,SAAUA,EACVC,SAAUA,I,CAMlBvC,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAAAC,IAAA,6CACHF,EAAAA,EAAAA,GAAA,oBAAAE,IAAA,2CACEC,MAAO,CACL,sBAAuBP,KAAK2B,UAE9BkB,QAAS7C,KAAK2B,SACdmB,MAAO9C,KAAK8C,MAAQ9C,KAAK8C,MAAQ9C,KAAKkC,MACtCF,YAAcb,GAAMnB,KAAKgC,YAAYb,K,6HD7HzB,kU","sources":["../node_modules/@siemens/ix/dist/esm/src/components/filter-chip/filter-chip.scss?tag=ix-filter-chip&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/filter-chip/filter-chip.tsx","../node_modules/@siemens/ix/dist/esm/src/components/select-item/events.ts","../node_modules/@siemens/ix/dist/esm/src/components/select-item/select-item.scss?tag=ix-select-item&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/select-item/select-item.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/hover';\n@import 'mixins/text-truncation';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-between;\n  height: $large-space;\n  padding-left: $small-space;\n  border: var(--theme-focus--border-thickness) solid\n    var(--theme-chip-primary-outline--border-color);\n  border-radius: $x-large-space;\n  background-color: var(--theme-color-ghost);\n  color: var(--theme-chip-primary-outline--color);\n\n  .slot-container {\n    @include ellipsis;\n\n    :host-context(.disabled) {\n      background-color: var(--theme-color-ghost);\n      border-color: var(--theme-color-component-4);\n      color: var(--theme-color-weak-text);\n    }\n  }\n\n  ix-icon-button {\n    height: $large-space;\n    margin-left: 0.25rem;\n\n    @include focus-visible {\n      outline: none;\n    }\n  }\n}\n\n:host(.disabled) {\n  border: var(--theme-focus--border-thickness) solid\n    var(--theme-color-component-4);\n  color: var(--theme-color-weak-text);\n  padding-right: $small-space;\n\n  cursor: default;\n}\n\n:host(.readonly) {\n  padding-right: $small-space;\n}\n\n@include host-hover {\n  background-color: var(--theme-color-ghost-primary--hover);\n  border-color: var(--theme-chip-primary-outline--border-color--hover);\n  color: var(--theme-chip-primary-outline--color--hover);\n}\n\n@include host-active {\n  background-color: var(--theme-color-ghost-primary--active);\n  border-color: var(--theme-chip-primary-outline--border-color--active);\n  color: var(--theme-chip-primary-outline--color--active);\n}\n\n@include host-focus-visible {\n  outline: var(--theme-color-focus-bdr) solid\n    var(--theme-focus--border-thickness);\n  outline-offset: -0.125rem;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { iconCloseSmall } from '@siemens/ix-icons/icons';\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n} from '@stencil/core';\n\n@Component({\n  tag: 'ix-filter-chip',\n  styleUrl: 'filter-chip.scss',\n  shadow: true,\n})\nexport class FilterChip {\n  @Element() hostElement!: HTMLIxFilterChipElement;\n\n  /**\n   * If true the filter chip will be in disabled state\n   */\n  @Prop() disabled = false;\n\n  /**\n   * If true the filter chip will be in readonly mode\n   */\n  @Prop() readonly = false;\n\n  /**\n   * Close clicked\n   */\n  @Event() closeClick!: EventEmitter<void>;\n\n  private onCloseClick(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.closeClick.emit();\n  }\n\n  render() {\n    return (\n      <Host\n        class={{ disabled: this.disabled, readonly: this.readonly }}\n        title={this.hostElement.textContent}\n      >\n        <div class=\"slot-container\">\n          <slot></slot>\n        </div>\n        {!this.disabled && !this.readonly ? (\n          <ix-icon-button\n            ghost\n            oval\n            icon={iconCloseSmall}\n            size=\"16\"\n            tabindex={this.disabled ? -1 : 0}\n            variant=\"primary\"\n            disabled={this.disabled}\n            onClick={(e) => this.onCloseClick(e)}\n          ></ix-icon-button>\n        ) : null}\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport class IxSelectItemLabelChangeEvent extends CustomEvent<{\n  oldValue: string;\n  newValue: string;\n}> {\n  constructor(detail: { oldValue: string; newValue: string }) {\n    super('ix-select-item:labelChange', {\n      bubbles: true,\n      detail,\n    });\n  }\n}\n\nexport class IxSelectItemValueChangeEvent extends CustomEvent<{\n  oldValue: string;\n  newValue: string;\n}> {\n  constructor(detail: { oldValue: string; newValue: string }) {\n    super('ix-select-item:valueChange', {\n      bubbles: true,\n      detail,\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n:host {\n  display: block;\n  position: relative;\n\n  > ix-dropdown-item {\n    width: 100%;\n  }\n\n  ix-dropdown-item {\n    color: var(--theme-color-std-text);\n  }\n\n  .select-item-checked {\n    background-color: var(--theme-select-list-item--background--selected);\n    --ix-dropdown-item-checked-color: var(--theme-color-std-text);\n  }\n}\n\n:host(.display-none) {\n  display: none;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  Watch,\n} from '@stencil/core';\nimport {\n  IxSelectItemLabelChangeEvent,\n  IxSelectItemValueChangeEvent,\n} from './events';\nimport { DropdownItemWrapper } from '../dropdown/dropdown-controller';\n\n@Component({\n  tag: 'ix-select-item',\n  styleUrl: 'select-item.scss',\n  shadow: true,\n})\nexport class SelectItem implements DropdownItemWrapper {\n  @Element() hostElement!: HTMLIxSelectItemElement;\n\n  /**\n   * Displayed name of the item\n   */\n  @Prop({ reflect: true }) label?: string;\n\n  /**\n   * The value of the item.\n   * Important: The select component uses string values to handle selection and will call toString() on this value.\n   * Therefor a string should be passed to value to prevent unexpected behavior.\n   */\n  @Prop({ reflect: true }) value!: string;\n\n  /**\n   * Flag indicating whether the item is selected\n   */\n  @Prop() selected = false;\n\n  /**\n   * @internal\n   */\n  @Prop() hover = false;\n\n  /**\n   * Item clicked\n   */\n  @Event() itemClick!: EventEmitter<string>;\n\n  private componentLoaded = false;\n\n  /** @internal */\n  @Method()\n  async getDropdownItemElement(): Promise<HTMLIxDropdownItemElement> {\n    return this.dropdownItem!;\n  }\n\n  /**\n   * @internal\n   * @param event\n   */\n  @Method()\n  async onItemClick(event?: CustomEvent<HTMLIxDropdownItemElement>) {\n    event?.preventDefault();\n    event?.stopPropagation();\n\n    this.itemClick.emit(this.value);\n  }\n\n  get dropdownItem() {\n    return this.hostElement.querySelector('ix-dropdown-item');\n  }\n\n  componentDidRender() {\n    if (this.value === undefined || this.value === null) {\n      console.warn('ix-select-item must have a `value` property');\n    }\n    this.componentLoaded = true;\n  }\n\n  @Watch('value')\n  onValueChange(newValue: string, oldValue: string) {\n    if (this.componentLoaded) {\n      this.hostElement.dispatchEvent(\n        new IxSelectItemValueChangeEvent({\n          newValue: newValue,\n          oldValue: oldValue,\n        })\n      );\n    }\n  }\n\n  @Watch('label')\n  labelChange(newValue: string, oldValue: string) {\n    if (this.componentLoaded) {\n      this.hostElement.dispatchEvent(\n        new IxSelectItemLabelChangeEvent({\n          newValue: newValue,\n          oldValue: oldValue,\n        })\n      );\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <ix-dropdown-item\n          class={{\n            'select-item-checked': this.selected,\n          }}\n          checked={this.selected}\n          label={this.label ? this.label : this.value}\n          onItemClick={(e) => this.onItemClick(e)}\n        ></ix-dropdown-item>\n      </Host>\n    );\n  }\n}\n"],"names":["FilterChip","constructor","hostRef","disabled","readonly","onCloseClick","event","preventDefault","stopPropagation","this","closeClick","emit","render","h","Host","key","class","title","hostElement","textContent","ghost","oval","icon","iconCloseSmall","size","tabindex","variant","onClick","e","IxSelectItemLabelChangeEvent","CustomEvent","detail","super","bubbles","IxSelectItemValueChangeEvent","SelectItem","selected","hover","componentLoaded","getDropdownItemElement","dropdownItem","onItemClick","itemClick","value","querySelector","componentDidRender","undefined","console","warn","onValueChange","newValue","oldValue","dispatchEvent","labelChange","checked","label"],"sourceRoot":""}