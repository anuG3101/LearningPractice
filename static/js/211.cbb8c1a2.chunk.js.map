{"version":3,"file":"static/js/211.cbb8c1a2.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/menu-item/menu-item.scss?tag=ix-menu-item&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/menu-item/menu-item.tsx","../node_modules/@siemens/ix/dist/esm/src/components/utils/mutation-observer.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/make-ref.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/menu-service/menu-service.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/hover';\n@import 'mixins/text-truncation';\n\n$menuItemHeight: 3rem;\n$menuItemPadding: 0.875rem;\n\n:host {\n  position: relative;\n  display: block;\n  cursor: pointer;\n\n  height: var(--ix-menu-item-height, $menuItemHeight);\n  min-height: var(--ix-menu-item-height, $menuItemHeight);\n  max-height: var(--ix-menu-item-height, $menuItemHeight);\n\n  .tab {\n    all: unset;\n    box-sizing: border-box;\n    display: flex;\n    position: relative;\n    align-items: center;\n    height: var(--ix-menu-item-height, $menuItemHeight);\n    width: calc(100%);\n    z-index: 500;\n    padding-left: $menuItemPadding;\n\n    @include ghost-hover-pressed;\n  }\n\n  .tab-icon {\n    color: var(--theme-nav-item-primary-icon--color);\n    position: relative;\n    pointer-events: none;\n  }\n\n  .tab:focus-visible {\n    outline: 1px solid var(--theme-color-focus-bdr);\n    outline-offset: -1px;\n  }\n\n  .notification {\n    display: inline-flex;\n    position: absolute;\n    top: 0.25rem;\n    left: 1.5rem;\n\n    .pill {\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      height: 0.5rem;\n      min-width: 1rem;\n      position: relative;\n      border-radius: 6.25rem;\n      background-color: var(--theme-color-primary);\n      font-size: 0.75rem;\n      font-weight: bold;\n      line-height: 1;\n      font-family: Siemens Sans, Arial, sans-serif;\n      color: var(--theme-color-primary--contrast);\n      padding: $tiny-space;\n    }\n  }\n\n  .tab-text {\n    @include ellipsis;\n    color: var(--theme-nav-item-primary--color);\n    margin: 0 1rem 0 1.25rem;\n    user-select: none;\n    width: 100%;\n  }\n}\n\n:host(.active),\n:host(.selected) {\n  .tab {\n    background-color: var(--theme-nav-item-primary--background--selected);\n  }\n\n  .tab::before {\n    content: '';\n    background-color: var(--theme-nav-item-primary--border-color--selected);\n    height: var(--ix-menu-item-height, $menuItemHeight);\n    width: 0.25rem;\n    left: 0;\n    position: absolute;\n  }\n\n  .tab > .glyph {\n    color: var(--theme-nav-item-primary-icon--color--selected);\n  }\n}\n\n:host(.disabled) {\n  color: var(--theme-color-weak-text);\n  pointer-events: none;\n  cursor: default;\n\n  .tab > .tab-icon {\n    color: var(--theme-color-weak-text);\n  }\n\n  .tab-text {\n    color: var(--theme-color-weak-text);\n  }\n}\n\n:host(.bottom-tab),\n:host([slot='bottom']) {\n  $bottom-height: 2.25rem;\n\n  min-height: $bottom-height;\n  height: $bottom-height;\n  max-height: $bottom-height;\n\n  .tab {\n    height: $bottom-height;\n  }\n\n  .tab::before {\n    height: $bottom-height;\n    background-color: transparent;\n  }\n\n  &.active,\n  &.selected {\n    &:hover {\n      background-color: var(--theme-nav-item-secondary--background--selected);\n    }\n\n    &:active {\n      background-color: var(--theme-nav-item-secondary--background--selected);\n    }\n  }\n}\n\n:host(.bottom-tab.active),\n:host(.bottom-tab.selected),\n:host(.active[slot='bottom']),\n:host(.selected[slot='bottom']) {\n  .tab {\n    background-color: var(--theme-nav-item-secondary--background--selected);\n  }\n}\n\n:host(.tab-nested) {\n  .tab {\n    flex-direction: row;\n    padding-left: calc(0.5rem + $menuItemPadding);\n\n    .notification {\n      position: relative;\n      top: 0;\n      left: 0;\n      padding-left: 0.5rem;\n    }\n\n    .tab-icon {\n      padding-left: 0.5rem;\n      padding-right: 0.5rem;\n    }\n\n    .tab-text {\n      margin-left: 0.5rem;\n    }\n\n    &::before {\n      display: none;\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Element, h, Host, Prop, State, Watch } from '@stencil/core';\nimport { createMutationObserver } from '../utils/mutation-observer';\nimport { makeRef } from '../utils/make-ref';\nimport { menuController } from '../utils/menu-service/menu-service';\nimport { Disposable } from '../utils/typed-event';\nimport { iconDocument } from '@siemens/ix-icons/icons';\n\n/**\n * @slot menu-item-label Custom label\n */\n@Component({\n  tag: 'ix-menu-item',\n  styleUrl: 'menu-item.scss',\n  shadow: true,\n})\nexport class MenuItem {\n  /**\n   * Label of the menu item. Will also be used as tooltip text\n   */\n  @Prop() label?: string;\n\n  /**\n   * Move the Tab to a top position.\n   */\n  @Prop() home = false;\n\n  /**\n   * Caution: this is no longer working. Please use slot=\"bottom\" instead.\n   *\n   * Place tab on bottom\n   */\n  @Prop() bottom = false;\n\n  /**\n   * Name of the icon you want to display. Icon names can be resolved from the documentation @link https://ix.siemens.io/docs/icon-library/icons\n   */\n  @Prop({ mutable: true }) icon?: string;\n\n  /**\n   * Show notification count on tab\n   */\n  @Prop() notifications?: number;\n\n  /**\n   * State to display active\n   */\n  @Prop() active: boolean = false;\n\n  /**\n   * Disable tab and remove event handlers\n   */\n  @Prop() disabled: boolean = false;\n\n  /** @internal */\n  @Prop() isCategory: boolean = false;\n\n  @Element() hostElement!: HTMLIxMenuItemElement;\n\n  @State() tooltip?: string;\n  @State() menuExpanded: boolean = false;\n\n  private readonly buttonRef = makeRef<HTMLButtonElement>();\n  private isHostedInsideCategory = false;\n  private menuExpandedDisposer?: Disposable;\n\n  private readonly observer: MutationObserver = createMutationObserver(() => {\n    this.setTooltip();\n  });\n\n  componentWillLoad() {\n    this.isHostedInsideCategory =\n      !!this.hostElement.closest('ix-menu-category');\n\n    this.onIconChange();\n\n    this.menuExpanded = menuController.nativeElement?.expand || false;\n    this.menuExpandedDisposer = menuController.expandChange.on(\n      (expand) => (this.menuExpanded = expand)\n    );\n  }\n\n  componentWillRender() {\n    this.setTooltip();\n  }\n\n  setTooltip() {\n    this.tooltip = this.label ?? this.hostElement.textContent ?? undefined;\n  }\n\n  connectedCallback() {\n    this.observer.observe(this.hostElement, {\n      subtree: true,\n      childList: true,\n      characterData: true,\n    });\n  }\n\n  disconnectedCallback() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n\n    if (this.menuExpandedDisposer) {\n      this.menuExpandedDisposer.dispose();\n    }\n  }\n\n  @Watch('icon')\n  onIconChange() {\n    if (!this.isHostedInsideCategory && !this.hostElement.icon) {\n      this.icon = iconDocument;\n    }\n  }\n\n  render() {\n    let extendedAttributes = {};\n    if (this.home) {\n      extendedAttributes = {\n        slot: 'home',\n      };\n    }\n\n    if (this.bottom) {\n      extendedAttributes = {\n        slot: 'bottom',\n      };\n    }\n    return (\n      <Host\n        class={{\n          disabled: this.disabled,\n          'home-tab': this.home,\n          'bottom-tab': this.bottom,\n          active: this.active,\n          'tab-nested': this.isHostedInsideCategory,\n        }}\n        {...extendedAttributes}\n      >\n        <button\n          class=\"tab\"\n          tabIndex={this.disabled ? -1 : 0}\n          ref={this.buttonRef}\n        >\n          {this.icon && <ix-icon class={'tab-icon'} name={this.icon}></ix-icon>}\n          {this.notifications ? (\n            <div class=\"notification\">\n              <div class=\"pill\">{this.notifications}</div>\n            </div>\n          ) : null}\n          <span class=\"tab-text text-default\">\n            {this.label}\n            <slot></slot>\n          </span>\n        </button>\n        {!this.isCategory &&\n          !this.isHostedInsideCategory &&\n          !this.menuExpanded && (\n            <ix-tooltip\n              for={this.buttonRef.waitForCurrent()}\n              placement={'right'}\n              showDelay={1000}\n            >\n              {this.tooltip}\n            </ix-tooltip>\n          )}\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const createMutationObserver = (callback: MutationCallback) =>\n  new MutationObserver(callback);\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport type MakeRef<T> = {\n  (ref: T | undefined | null): void;\n  current: T | null;\n  waitForCurrent(): Promise<T>;\n};\n\ntype Resolve<T> = (value: T) => void;\n\nexport function makeRef<T>(\n  currentChangedCallback?: (element: T) => void\n): MakeRef<T> {\n  let resolve: Resolve<T> | undefined = undefined;\n  let currentPromise = new Promise<T>((res) => (resolve = res));\n  let current: T | undefined = undefined;\n\n  const setRefFunction = (ref: T | undefined) => {\n    if (ref === undefined) {\n      return;\n    }\n    current = (setRefFunction as MakeRef<T>).current = ref;\n    currentChangedCallback?.(ref);\n    resolve?.(ref);\n  };\n\n  setRefFunction.current = current as T | null;\n\n  setRefFunction.waitForCurrent = async () => {\n    await currentPromise;\n    return current;\n  };\n\n  return setRefFunction as MakeRef<T>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TypedEvent } from '../typed-event';\n\nclass MenuService {\n  #menuElement: HTMLIxMenuElement | null = null;\n  #menuExpandChange = new TypedEvent<boolean>();\n  #isPinned = false;\n\n  register(menuElement: HTMLIxMenuElement) {\n    if (this.#menuElement) {\n      console.warn('Menu already defined');\n      return;\n    }\n    this.#menuElement = menuElement;\n    this.#menuElement.addEventListener(\n      'expandChange',\n      (event: CustomEvent<boolean>) => {\n        this.#menuExpandChange.emit(event.detail);\n      }\n    );\n  }\n\n  public setIsPinned(pinned: boolean) {\n    this.#isPinned = pinned;\n  }\n\n  public async open() {\n    if (this.#menuElement) {\n      this.#menuElement.toggleMenu(true);\n      return true;\n    }\n\n    return false;\n  }\n\n  public async close() {\n    if (this.#menuElement) {\n      this.#menuElement.toggleMenu(false);\n      return true;\n    }\n\n    return false;\n  }\n\n  public async toggle() {\n    if (this.#menuElement) {\n      this.#menuElement.toggleMenu();\n      return true;\n    }\n\n    return false;\n  }\n\n  get nativeElement() {\n    return this.#menuElement;\n  }\n\n  get expandChange() {\n    return this.#menuExpandChange;\n  }\n\n  get isPinned() {\n    return this.#isPinned;\n  }\n}\n\nexport const menuController = new MenuService();\n"],"names":["MenuItem","constructor","hostRef","home","bottom","active","disabled","isCategory","menuExpanded","buttonRef","makeRef","isHostedInsideCategory","observer","createMutationObserver","this","setTooltip","componentWillLoad","hostElement","closest","onIconChange","_a","menuController","nativeElement","expand","menuExpandedDisposer","expandChange","on","componentWillRender","tooltip","_b","label","textContent","undefined","connectedCallback","observe","subtree","childList","characterData","disconnectedCallback","disconnect","dispose","icon","iconDocument","render","extendedAttributes","slot","h","Host","Object","assign","key","class","tabIndex","ref","name","notifications","for","waitForCurrent","placement","showDelay","callback","MutationObserver","currentChangedCallback","resolve","current","currentPromise","Promise","res","setRefFunction","async","_MenuService_menuElement","set","_MenuService_menuExpandChange","TypedEvent","_MenuService_isPinned","register","menuElement","__classPrivateFieldGet","console","warn","__classPrivateFieldSet","addEventListener","event","emit","detail","setIsPinned","pinned","open","toggleMenu","close","toggle","isPinned"],"sourceRoot":""}