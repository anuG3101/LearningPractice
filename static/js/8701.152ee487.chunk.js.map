{"version":3,"file":"static/js/8701.152ee487.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/validation-tooltip/validation-tooltip.scss?tag=ix-validation-tooltip&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/validation-tooltip/validation-tooltip.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'legacy/fonts';\n\n:host {\n  display: inline-block;\n  position: relative;\n  $padding: 5px;\n  width: 100%;\n  z-index: var(--theme-z-index-tooltip);\n\n  .validation-tooltip {\n    background-color: var(--theme-tootlip--background);\n    color: var(--theme-tooltip--color);\n    padding: $padding 10px;\n    border-radius: 4px;\n    font-size: 13px;\n    border: 1px solid var(--theme-tooltip--border-color);\n    box-shadow: 0 0 2px 0 rgba(0, 0, 40, 0.1), 0 4px 8px 0 rgba(0, 0, 40, 0.1),\n      0 12px 18px 0 rgba(0, 0, 40, 0.1);\n\n    #arrow,\n    #arrow::before {\n      position: absolute;\n      width: 8px;\n      height: 8px;\n      background: inherit;\n    }\n\n    #arrow {\n      visibility: hidden;\n    }\n\n    #arrow::before {\n      visibility: visible;\n      content: '';\n      transform: rotate(45deg);\n      background-color: var(--theme-tootlip--background);\n    }\n  }\n\n  .validation-tooltip > #arrow {\n    bottom: -5px;\n\n    &::before {\n      border-right: 1px solid var(--theme-tooltip--border-color);\n      border-bottom: 1px solid var(--theme-tooltip--border-color);\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport {\n  arrow,\n  autoUpdate,\n  computePosition,\n  ComputePositionConfig,\n  flip,\n  inline,\n  offset,\n  shift,\n} from '@floating-ui/dom';\nimport { Component, Element, h, Host, Prop, State, Watch } from '@stencil/core';\nimport { Side } from '../dropdown/placement';\n\ntype Position = { x: number; y: number };\n\n/**\n * @slot tooltip-message - Custom tooltip message with html support\n *\n * @deprecated Will be removed with 4.0.0\n */\n@Component({\n  tag: 'ix-validation-tooltip',\n  styleUrl: 'validation-tooltip.scss',\n  shadow: true,\n})\nexport class ValidationTooltip {\n  @Element() hostElement!: HTMLIxValidationTooltipElement;\n\n  /**\n   * Message of the tooltip\n   */\n  @Prop() message?: string;\n\n  /**\n   * Placement of the tooltip\n   */\n  @Prop() placement: Side = 'top';\n\n  /**\n   * Suppress the automatic placement of the dropdown.\n   */\n  @Prop() suppressAutomaticPlacement = false;\n\n  @State() isInputValid = true;\n  @State() tooltipPosition?: Position;\n  @State() arrowPosition?: Position;\n\n  private onSubmitBind = this.onSubmit.bind(this);\n  private onInputFocusBind = this.onInputFocus.bind(this);\n  private autoUpdateCleanup?: () => void;\n  private observer?: MutationObserver;\n\n  get arrow() {\n    return this.hostElement.shadowRoot!.querySelector('#arrow') as HTMLElement;\n  }\n\n  get inputElement() {\n    return this.hostElement.querySelector('input');\n  }\n\n  get formElement() {\n    return this.inputElement?.form;\n  }\n\n  get tooltipElement(): HTMLElement {\n    return this.hostElement.shadowRoot!.querySelector('.validation-tooltip')!;\n  }\n\n  private destroyAutoUpdate() {\n    if (this.tooltipElement) {\n      this.tooltipElement.style.display = 'none';\n    }\n\n    if (this.autoUpdateCleanup) {\n      this.autoUpdateCleanup();\n    }\n  }\n\n  private applyTooltipPosition() {\n    this.tooltipElement.style.display = 'block';\n\n    let positionConfig: Partial<ComputePositionConfig> = {\n      strategy: 'fixed',\n      middleware: [\n        inline(),\n        shift(),\n        offset({\n          mainAxis: 8,\n        }),\n      ],\n    };\n\n    if (!positionConfig.middleware) {\n      positionConfig.middleware = [];\n    }\n\n    if (!this.suppressAutomaticPlacement) {\n      positionConfig.middleware.push(\n        flip({ fallbackStrategy: 'initialPlacement' })\n      );\n    }\n    positionConfig.placement = this.placement;\n\n    this.autoUpdateCleanup = autoUpdate(\n      this.inputElement!,\n      this.tooltipElement,\n      async () => {\n        positionConfig.middleware = [\n          ...positionConfig.middleware!,\n          arrow({\n            element: this.arrow,\n          }),\n        ];\n        const computeResponse = await computePosition(\n          this.inputElement!,\n          this.tooltipElement,\n          positionConfig\n        );\n\n        if (computeResponse.middlewareData.arrow) {\n          const { x, y } = computeResponse.middlewareData.arrow as {\n            x: number;\n            y: number;\n          };\n          this.arrowPosition = {\n            x,\n            y,\n          };\n          Object.assign(this.arrow.style, {\n            left: x != null ? `${x}px` : '',\n            top: y != null ? `${y}px` : '',\n          });\n        }\n\n        this.tooltipPosition = {\n          x: computeResponse.x,\n          y: computeResponse.y,\n        };\n      },\n      {\n        ancestorResize: true,\n        ancestorScroll: true,\n        elementResize: true,\n      }\n    );\n  }\n\n  componentDidLoad() {\n    if (!this.inputElement) {\n      throw Error(\n        'Validation tooltip is only working with an direct input child.'\n      );\n    }\n\n    if (!this.formElement) {\n      throw Error('Validation tooltip is only working with an form element.');\n    }\n\n    this.formElement.addEventListener('submit', this.onSubmitBind);\n    this.inputElement.addEventListener('focus', this.onInputFocusBind);\n\n    this.observer = new MutationObserver(() => {\n      if (this.inputElement!.classList.contains('is-invalid')) {\n        this.isInputValid = false;\n        this.validationChanged();\n      }\n    });\n\n    this.observer.observe(this.inputElement, {\n      childList: false,\n      subtree: false,\n      attributes: true,\n      attributeFilter: ['class'],\n    });\n  }\n\n  private onInputFocus() {\n    this.isInputValid = true;\n  }\n\n  private onSubmit() {\n    if (this.formElement!.classList.contains('needs-validation')) {\n      this.isInputValid = this.inputElement!.validity.valid;\n    }\n  }\n\n  disconnectedCallback() {\n    this.observer?.disconnect();\n    this.destroyAutoUpdate();\n\n    this.formElement?.removeEventListener('submit', this.onSubmitBind);\n    this.inputElement?.removeEventListener('focus', this.onInputFocusBind);\n  }\n\n  @Watch('isInputValid')\n  validationChanged() {\n    if (!this.isInputValid) {\n      this.applyTooltipPosition();\n    } else {\n      this.destroyAutoUpdate();\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n        <div\n          role=\"tooltip\"\n          style={{\n            display: 'none',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            transform: `translate(${Math.round(\n              this.tooltipPosition?.x ?? 0\n            )}px,${Math.round(this.tooltipPosition?.y ?? 0)}px)`,\n          }}\n          class=\"validation-tooltip text-default\"\n        >\n          {this.message}\n          <slot name=\"tooltip-message\"></slot>\n          <div id=\"arrow\"></div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"names":["ValidationTooltip","constructor","hostRef","placement","suppressAutomaticPlacement","isInputValid","onSubmitBind","this","onSubmit","bind","onInputFocusBind","onInputFocus","arrow","hostElement","shadowRoot","querySelector","inputElement","formElement","_a","form","tooltipElement","destroyAutoUpdate","style","display","autoUpdateCleanup","applyTooltipPosition","positionConfig","strategy","middleware","inline","shift","offset","mainAxis","push","flip","fallbackStrategy","autoUpdate","async","element","computeResponse","computePosition","middlewareData","x","y","arrowPosition","Object","assign","left","concat","top","tooltipPosition","ancestorResize","ancestorScroll","elementResize","componentDidLoad","Error","addEventListener","observer","MutationObserver","classList","contains","validationChanged","observe","childList","subtree","attributes","attributeFilter","validity","valid","disconnectedCallback","disconnect","_b","removeEventListener","_c","render","h","Host","key","role","position","transform","Math","round","_d","class","message","name","id"],"sourceRoot":""}