{"version":3,"file":"static/js/7321.1692aba2.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/condition-checks.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/a11y.ts","../node_modules/@siemens/ix/dist/esm/src/components/blind/blind.tsx","../node_modules/@siemens/ix/dist/esm/src/components/blind/blind.scss?tag=ix-blind&encapsulation=shadow"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport const isHttpUrl = (link: string) => {\n  if (!link) {\n    return false;\n  }\n\n  let url: URL;\n\n  try {\n    url = new URL(link);\n  } catch (e) {\n    return false;\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:';\n};\n\nexport const isSvgDataUrl = (url: string) => {\n  if (!url) {\n    return false;\n  }\n\n  if (typeof url !== 'string') {\n    return false;\n  }\n\n  return url.startsWith('data:image/svg+xml');\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { isHttpUrl, isSvgDataUrl } from './condition-checks';\n\nexport const a11yBoolean = (value: boolean | undefined) =>\n  value ? 'true' : 'false';\n\nconst kebabCaseToUpperCaseSentence = (kebabCase: string) => {\n  const withoutFilledSuffix = kebabCase.replace('-filled', '');\n  const words = withoutFilledSuffix.split('-');\n  const sentence = words\n    .map((word) => {\n      const trimWord = word.trim();\n      const digitLessWord = trimWord.replace(/\\d+/g, '');\n\n      if (digitLessWord.length === 0) {\n        return trimWord;\n      }\n\n      return digitLessWord;\n    })\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n\n  return sentence;\n};\n\nexport const getFallbackLabelFromIconName = (iconName?: string) => {\n  if (!iconName) {\n    return 'Unknown';\n  }\n\n  if (isHttpUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  if (isSvgDataUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  const label = kebabCaseToUpperCaseSentence(iconName);\n\n  if (label.length === 0) {\n    return 'Unknown';\n  }\n\n  return label;\n};\n\nexport const a11yHostAttributes = (\n  hostElement: HTMLElement,\n  ignoreAttributes: A11yAttributeName[] = []\n): Record<A11yAttributeName, string> => {\n  const attributeObject: Record<string, string> = {};\n  a11yAttributes.forEach((attr) => {\n    if (hostElement.hasAttribute(attr)) {\n      const value = hostElement.getAttribute(attr);\n      if (value !== null && !ignoreAttributes.includes(attr)) {\n        attributeObject[attr] = hostElement.getAttribute(attr) ?? '';\n        hostElement.removeAttribute(attr);\n      }\n    }\n  });\n\n  return attributeObject;\n};\n\nexport type A11yAttributeName =\n  | 'role'\n  | 'aria-activedescendant'\n  | 'aria-atomic'\n  | 'aria-autocomplete'\n  | 'aria-braillelabel'\n  | 'aria-brailleroledescription'\n  | 'aria-busy'\n  | 'aria-checked'\n  | 'aria-colcount'\n  | 'aria-colindex'\n  | 'aria-colindextext'\n  | 'aria-colspan'\n  | 'aria-controls'\n  | 'aria-current'\n  | 'aria-describedby'\n  | 'aria-description'\n  | 'aria-details'\n  | 'aria-disabled'\n  | 'aria-errormessage'\n  | 'aria-expanded'\n  | 'aria-flowto'\n  | 'aria-haspopup'\n  | 'aria-hidden'\n  | 'aria-invalid'\n  | 'aria-keyshortcuts'\n  | 'aria-label'\n  | 'aria-labelledby'\n  | 'aria-level'\n  | 'aria-live'\n  | 'aria-multiline'\n  | 'aria-multiselectable'\n  | 'aria-orientation'\n  | 'aria-owns'\n  | 'aria-placeholder'\n  | 'aria-posinset'\n  | 'aria-pressed'\n  | 'aria-readonly'\n  | 'aria-relevant'\n  | 'aria-required'\n  | 'aria-roledescription'\n  | 'aria-rowcount'\n  | 'aria-rowindex'\n  | 'aria-rowindextext'\n  | 'aria-rowspan'\n  | 'aria-selected'\n  | 'aria-setsize'\n  | 'aria-sort'\n  | 'aria-valuemax'\n  | 'aria-valuemin'\n  | 'aria-valuenow'\n  | 'aria-valuetext';\n\nconst a11yAttributes: A11yAttributeName[] = [\n  'role',\n  'aria-activedescendant',\n  'aria-atomic',\n  'aria-autocomplete',\n  'aria-braillelabel',\n  'aria-brailleroledescription',\n  'aria-busy',\n  'aria-checked',\n  'aria-colcount',\n  'aria-colindex',\n  'aria-colindextext',\n  'aria-colspan',\n  'aria-controls',\n  'aria-current',\n  'aria-describedby',\n  'aria-description',\n  'aria-details',\n  'aria-disabled',\n  'aria-errormessage',\n  'aria-expanded',\n  'aria-flowto',\n  'aria-haspopup',\n  'aria-hidden',\n  'aria-invalid',\n  'aria-keyshortcuts',\n  'aria-label',\n  'aria-labelledby',\n  'aria-level',\n  'aria-live',\n  'aria-multiline',\n  'aria-multiselectable',\n  'aria-orientation',\n  'aria-owns',\n  'aria-placeholder',\n  'aria-posinset',\n  'aria-pressed',\n  'aria-readonly',\n  'aria-relevant',\n  'aria-required',\n  'aria-roledescription',\n  'aria-rowcount',\n  'aria-rowindex',\n  'aria-rowindextext',\n  'aria-rowspan',\n  'aria-selected',\n  'aria-setsize',\n  'aria-sort',\n  'aria-valuemax',\n  'aria-valuemin',\n  'aria-valuenow',\n  'aria-valuetext',\n];\n\ntype PartialRecord<K extends A11yAttributeName, T> = {\n  [P in K]?: T;\n};\nexport type A11yAttributes = PartialRecord<A11yAttributeName, string>;\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Fragment,\n  h,\n  Host,\n  Prop,\n  Watch,\n} from '@stencil/core';\nimport anime from 'animejs';\nimport { CardVariant } from '../card/card';\nimport { a11yBoolean } from '../utils/a11y';\nimport { iconChevronRightSmall } from '@siemens/ix-icons/icons';\n\nexport type BlindVariant = CardVariant;\n\nlet sequentialInstanceId = 0;\n\n@Component({\n  tag: 'ix-blind',\n  styleUrl: 'blind.scss',\n  shadow: true,\n})\nexport class Blind {\n  /**\n   * Collapsed state\n   */\n  @Prop({ mutable: true, reflect: true }) collapsed = false;\n\n  /**\n   * Label of blind\n   */\n  @Prop() label?: string;\n\n  /**\n   * Secondary label inside blind header\n   */\n  @Prop() sublabel?: string;\n\n  /**\n   * Optional icon to be displayed next to the header label\n   */\n  @Prop() icon?: string;\n\n  /**\n   * Blind variant\n   */\n  @Prop() variant: BlindVariant = 'filled';\n\n  /**\n   * Collapsed state changed\n   */\n  @Event() collapsedChange!: EventEmitter<boolean>;\n\n  @Element() hostElement!: HTMLIxBlindElement;\n\n  private chevronRef?: HTMLElement;\n  private blindId = ++sequentialInstanceId;\n\n  constructor() {}\n\n  private onHeaderClick() {\n    this.collapsed = !this.collapsed;\n    this.collapsedChange.emit(this.collapsed);\n  }\n\n  componentDidLoad() {\n    this.animateCollapse(this.collapsed);\n  }\n\n  get content() {\n    return this.hostElement.shadowRoot!.querySelector('.blind-content');\n  }\n\n  @Watch('collapsed')\n  animation(isCollapsed: boolean) {\n    this.animateCollapse(isCollapsed);\n  }\n\n  private animateCollapse(isCollapsed: boolean) {\n    if (isCollapsed) {\n      this.rotateChevronRight();\n    } else {\n      this.rotateChevronDown();\n    }\n  }\n\n  private rotateChevronDown() {\n    anime({\n      targets: this.chevronRef,\n      duration: 150,\n      easing: 'easeInOutSine',\n      rotateZ: 90,\n    });\n    anime({\n      targets: this.content,\n      duration: 150,\n      easing: 'easeInOutSine',\n      opacity: 1,\n    });\n  }\n\n  private rotateChevronRight() {\n    anime({\n      targets: this.chevronRef,\n      duration: 150,\n      easing: 'easeInOutSine',\n      rotateZ: 0,\n    });\n    anime({\n      targets: this.content,\n      duration: 150,\n      easing: 'easeInOutSine',\n      opacity: 0,\n    });\n  }\n\n  render() {\n    return (\n      <Host\n        class={{\n          [`blind-${this.variant}`]: true,\n        }}\n      >\n        <div class={'blind-header-wrapper'}>\n          <button\n            class={{\n              'blind-header': true,\n              [`blind-${this.variant}`]: true,\n              closed: this.collapsed,\n            }}\n            type=\"button\"\n            aria-labelledby={`ix-blind-header-title-${this.blindId}`}\n            aria-controls={`ix-blind-content-section-${this.blindId}`}\n            aria-expanded={a11yBoolean(!this.collapsed)}\n            onClick={() => this.onHeaderClick()}\n          >\n            <slot name=\"custom-header\"></slot>\n          </button>\n\n          <div class={'blind-header-content'}>\n            <ix-icon\n              class=\"collapse-icon\"\n              name={iconChevronRightSmall}\n              color={\n                this.variant === 'filled' || this.variant === 'outline'\n                  ? 'color-primary'\n                  : `color-${this.variant}--contrast`\n              }\n              ref={(ref: HTMLElement | undefined) => (this.chevronRef = ref)}\n            ></ix-icon>\n            <div\n              class=\"blind-header-title\"\n              id={`ix-blind-header-title-${this.blindId}`}\n            >\n              {this.label !== undefined ? (\n                <Fragment>\n                  {this.icon && (\n                    <ix-icon\n                      class=\"blind-header-title-icon\"\n                      name={this.icon}\n                      color={\n                        this.variant === 'filled' || this.variant === 'outline'\n                          ? 'color-std-text'\n                          : `color-${this.variant}--contrast`\n                      }\n                    ></ix-icon>\n                  )}\n                  <div class={'blind-header-title-row'}>\n                    <div class=\"blind-header-title-col\">\n                      <ix-typography title={this.label} format=\"label-lg\" bold>\n                        <div\n                          class=\"blind-header-title-label\"\n                          title={this.label}\n                        >\n                          {this.label}\n                        </div>\n                      </ix-typography>\n                    </div>\n\n                    {this.sublabel && (\n                      <div class=\"blind-header-title-col\">\n                        <ix-typography title={this.sublabel}>\n                          <div class=\"blind-header-title-sublabel\">\n                            {this.sublabel}\n                          </div>\n                        </ix-typography>\n                      </div>\n                    )}\n                  </div>\n                  <div class=\"header-actions\">\n                    <slot name=\"header-actions\"></slot>\n                  </div>\n                </Fragment>\n              ) : null}\n            </div>\n          </div>\n        </div>\n        <section\n          id={`ix-blind-content-section-${this.blindId}`}\n          aria-labelledby={`ix-blind-header-title-${this.blindId}`}\n        >\n          <div\n            class={{\n              'blind-content': true,\n              hide: this.collapsed,\n            }}\n          >\n            {!this.collapsed ? <slot></slot> : null}\n          </div>\n        </section>\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'legacy/mixins/fonts';\n@import 'mixins/hover';\n@import 'mixins/text-truncation';\n@import 'mixins/shadow-dom/component';\n\n@mixin blind($variant: 'filled') {\n  :host(.blind-#{$variant}) {\n    @if $variant == 'outline' {\n      border: solid\n        var(--theme-blind--border-thickness)\n        var(--theme-blind-base--border-color);\n    }\n\n    .blind-header {\n      @if $variant == 'outline' {\n        background-color: var(--theme-color-ghost);\n      } @else {\n        background-color: var(--theme-color-#{$variant});\n      }\n\n      @if $variant == 'filled' or $variant == 'outline' {\n        @include ghost-hover-pressed;\n      } @else {\n        @include hover {\n          background-color: var(--theme-color-#{$variant}--hover);\n        }\n\n        @include active {\n          background-color: var(--theme-color-#{$variant}--active);\n        }\n      }\n    }\n\n    @if $variant == 'filled' or $variant == 'outline' {\n      .blind-header-title-label {\n        color: var(--theme-color-std-text);\n      }\n      .blind-header-title-sublabel {\n        color: var(--theme-color-soft-text);\n      }\n    } @else {\n      .blind-header-title-label,\n      .blind-header-title-sublabel {\n        color: var(--theme-color-#{$variant}--contrast);\n      }\n    }\n\n    @if $variant == 'outline' {\n      border-color: var(--theme-color-soft-bdr);\n    } @else {\n      background-color: var(--theme-blind-base--background);\n    }\n  }\n}\n\n:host {\n  @include ix-component;\n  display: flex;\n  flex-direction: column;\n  border-radius: var(--theme-blind--border-radius);\n  overflow: hidden;\n\n  .blind-header-wrapper {\n    position: relative;\n    min-height: 3rem;\n    height: 3rem;\n    overflow: hidden;\n  }\n\n  .blind-header-content {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n\n    width: 100%;\n    height: 100%;\n\n    pointer-events: none;\n    padding-left: 0.5rem;\n  }\n\n  .blind-header-title {\n    display: flex;\n    position: relative;\n    align-items: center;\n    flex-grow: 1;\n    margin-right: 0.5rem;\n  }\n\n  .blind-header {\n    all: unset;\n    @include ellipsis;\n\n    display: block;\n    position: absolute;\n\n    top: 0px;\n    left: 0px;\n\n    pointer-events: all;\n\n    padding-left: 2.5rem;\n    min-height: 3rem;\n    height: 3rem;\n    width: calc(100% - 2 * var(--theme-blind--border-thickness));\n    border: solid var(--theme-blind--border-thickness) transparent;\n    border-radius: var(--theme-blind--border-radius)\n      var(--theme-blind--border-radius) 0 0;\n    cursor: pointer;\n\n    @include focus-visible {\n      border-color: var(--theme-color-focus-bdr);\n      outline: none;\n    }\n  }\n\n  .blind-header-title-icon,\n  .collapse-icon {\n    margin-right: $small-space;\n  }\n\n  .blind-header-title-row {\n    display: flex;\n    flex-grow: 1;\n    overflow: hidden;\n  }\n\n  .blind-header-title-col {\n    display: inline-flex;\n    align-items: center;\n    width: calc(100% - 1rem);\n    overflow: hidden;\n  }\n\n  .blind-header-title-col:not(:first-of-type) {\n    justify-content: flex-end;\n  }\n  ix-typography {\n    flex-grow: 1;\n    @include ellipsis;\n  }\n\n  .blind-header-title-label {\n    @include ellipsis;\n    padding-inline-end: 0.5rem;\n  }\n\n  .blind-header-title-sublabel {\n    @include ellipsis;\n    padding-inline: 0.5rem;\n  }\n\n  .blind-header-title {\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    height: 100%;\n    min-width: 0;\n  }\n\n  .blind-header-labels {\n    display: inline-flex;\n    flex-grow: 1;\n    min-width: 0;\n  }\n\n  .blind-content {\n    display: block;\n    padding: 1rem;\n    transition-property: padding;\n    transition-duration: var(--theme-default-time);\n    transition-timing-function: ease-in;\n\n    &.hide {\n      max-height: 0;\n      padding-top: 0px;\n      padding-bottom: 0px;\n    }\n  }\n\n  .header-actions {\n    pointer-events: all;\n    margin-left: auto;\n  }\n}\n\n$blind-variants: (\n  alarm,\n  critical,\n  info,\n  neutral,\n  filled,\n  success,\n  warning,\n  primary,\n  outline\n);\n\n@each $variant in $blind-variants {\n  @include blind($variant);\n}\n"],"names":["a11yBoolean","value","getFallbackLabelFromIconName","iconName","link","url","URL","e","protocol","isHttpUrl","startsWith","label","replace","split","map","word","trimWord","trim","digitLessWord","length","charAt","toUpperCase","slice","join","a11yHostAttributes","hostElement","ignoreAttributes","arguments","undefined","attributeObject","a11yAttributes","forEach","attr","hasAttribute","getAttribute","includes","_a","removeAttribute","sequentialInstanceId","Blind","constructor","hostRef","collapsed","variant","blindId","onHeaderClick","this","collapsedChange","emit","componentDidLoad","animateCollapse","content","shadowRoot","querySelector","animation","isCollapsed","rotateChevronRight","rotateChevronDown","anime","targets","chevronRef","duration","easing","rotateZ","opacity","render","h","Host","key","class","concat","closed","type","onClick","name","iconChevronRightSmall","color","ref","id","Fragment","icon","title","format","bold","sublabel","hide"],"sourceRoot":""}