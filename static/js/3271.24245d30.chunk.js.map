{"version":3,"file":"static/js/3271.24245d30.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/mutation-observer.ts","../node_modules/@siemens/ix/dist/esm/src/components/card-list/card-list.tsx","../node_modules/@siemens/ix/dist/esm/src/components/card-list/card-list.scss?tag=ix-card-list&encapsulation=shadow"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const createMutationObserver = (callback: MutationCallback) =>\n  new MutationObserver(callback);\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n} from '@stencil/core';\nimport { createMutationObserver } from '../utils/mutation-observer';\nimport { iconChevronDown, iconMoreMenu } from '@siemens/ix-icons/icons';\n\nfunction CardListTitle(props: {\n  label?: string;\n  isCollapsed: boolean;\n  onClick: (e: MouseEvent) => void;\n  onShowAllClick: (e: MouseEvent) => void;\n  showAllLabel: string;\n  showAllCounter: number;\n  hideShowAll: boolean;\n}) {\n  if (!props.label) {\n    return null;\n  }\n\n  return (\n    <div class=\"CardList_Title\">\n      <ix-icon-button\n        ghost\n        icon={iconChevronDown}\n        onClick={props.onClick}\n        iconColor=\"color-primary\"\n        class={{\n          CardList__Title__Button: true,\n          CardList__Title__Button__Collapsed: props.isCollapsed,\n        }}\n      ></ix-icon-button>\n      <ix-typography class=\"CardList_Title__Label\" format=\"body-lg\">\n        {props.label}\n      </ix-typography>\n      {!props.hideShowAll && (\n        <ix-button\n          class=\"CardList__Title__Show__All\"\n          ghost\n          onClick={props.onShowAllClick}\n        >\n          <span>{props.showAllLabel}</span>\n          <span>\n            {!isNaN(props.showAllCounter) ? ` (${props.showAllCounter})` : null}\n          </span>\n        </ix-button>\n      )}\n    </div>\n  );\n}\n\n@Component({\n  tag: 'ix-card-list',\n  styleUrl: 'card-list.scss',\n  shadow: true,\n})\nexport class CardList {\n  /**\n   * Name the card list\n   */\n  @Prop() label?: string;\n\n  /**\n   * Collapse the list\n   */\n  @Prop({ mutable: true }) collapse = false;\n\n  /**\n   * List style\n   */\n  @Prop() listStyle: 'stack' | 'scroll' = 'stack';\n\n  /**\n   * Maximal visible cards\n   *\n   * @internal\n   */\n  @Prop() maxVisibleCards = 12;\n\n  /**\n   * Overwrite the default show all count.\n   * */\n  @Prop() showAllCount?: number;\n\n  /**\n   * Suppress the overflow handling of child elements\n   */\n  @Prop() suppressOverflowHandling = false;\n\n  /**\n   * Hide the show all button\n   */\n  @Prop() hideShowAll = false;\n\n  /**\n   * i18n Show all button\n   */\n  @Prop() i18nShowAll = 'Show all';\n\n  /**\n   * i18n More cards available\n   */\n  @Prop() i18nMoreCards = 'There are more cards available';\n\n  /**\n   * Fire event when the collapse state is changed by the user\n   */\n  @Event() collapseChanged!: EventEmitter<boolean>;\n\n  /**\n   * Fire event when the collapse state is changed by the user\n   */\n  @Event() showAllClick!: EventEmitter<{\n    nativeEvent: MouseEvent;\n  }>;\n\n  /**\n   * Fire event when the show more card is clicked.\n   */\n  @Event() showMoreCardClick!: EventEmitter<{\n    nativeEvent: MouseEvent;\n  }>;\n\n  @Element() hostElement!: HTMLIxCardListElement;\n\n  @State() private hasOverflowingElements = false;\n  @State() private numberOfOverflowingElements = 0;\n  @State() private numberOfAllChildElements = 0;\n  @State() private leftScrollDistance = 0;\n  @State() private rightScrollDistance = 0;\n\n  private observer?: MutationObserver;\n\n  private onCardListVisibilityToggle() {\n    this.collapse = !this.collapse;\n    this.collapseChanged.emit(this.collapse);\n  }\n\n  private onShowAllClick(event: MouseEvent) {\n    this.showAllClick.emit({\n      nativeEvent: event,\n    });\n  }\n\n  private getListChildren() {\n    const slot = this.hostElement.shadowRoot!.querySelector(\n      '.CardList__Content > slot'\n    ) as HTMLSlotElement;\n    return slot.assignedElements({ flatten: true });\n  }\n\n  private changeVisibilityOfSlotChildren() {\n    const childElements = this.getListChildren();\n    childElements.forEach((element, index) => {\n      if (element instanceof HTMLElement) {\n        if (index > this.maxVisibleCards - 1) {\n          element.classList.add('display-none');\n          return;\n        }\n        element.classList.remove('display-none');\n      }\n    });\n    this.hasOverflowingElements = childElements.length > this.maxVisibleCards;\n    this.numberOfOverflowingElements =\n      childElements.length - this.maxVisibleCards;\n\n    this.numberOfAllChildElements = childElements.length;\n    this.detectOverflow();\n  }\n\n  private registerOverflowHandler() {\n    this.observer = createMutationObserver(() => {\n      this.changeVisibilityOfSlotChildren();\n    });\n\n    this.observer.observe(\n      this.hostElement.shadowRoot!.querySelector('.CardList__Content')!,\n      {\n        childList: true,\n        subtree: true,\n      }\n    );\n\n    requestAnimationFrame(() => {\n      this.changeVisibilityOfSlotChildren();\n    });\n  }\n\n  private shouldHandleOverflow() {\n    if (this.suppressOverflowHandling) {\n      return false;\n    }\n    if (this.listStyle === 'stack' || this.listStyle === 'scroll') {\n      return true;\n    }\n  }\n\n  private get listElement() {\n    return this.hostElement.shadowRoot!.querySelector('.CardList__Content');\n  }\n\n  private onCardListScroll() {\n    this.detectOverflow();\n  }\n\n  private isShowMoreCardVisible() {\n    return (\n      this.suppressOverflowHandling === false && this.hasOverflowingElements\n    );\n  }\n\n  private getOpacityFromScrollDistance(distance: number) {\n    if (!this.listElement) {\n      return 0;\n    }\n\n    if (distance === 0) {\n      return 0;\n    }\n\n    if (distance > 100) {\n      return 1;\n    }\n\n    return distance / 100;\n  }\n\n  private computeMaskLayer() {\n    const maxOverflowWidth = 80;\n    const maskLayer = `linear-gradient(\n      90deg,\n      transparent 0px,\n      black ${\n        maxOverflowWidth *\n        (this.getOpacityFromScrollDistance(this.leftScrollDistance) > 0 ? 1 : 0)\n      }px,\n      black calc(100% - ${\n        maxOverflowWidth *\n        (this.getOpacityFromScrollDistance(this.rightScrollDistance) > 0\n          ? 1\n          : 0)\n      }px),\n      transparent 100%\n    )`;\n    return {\n      '--ix-card-list-overflow': maskLayer,\n    };\n  }\n\n  @Listen('resize', { target: 'window' })\n  private detectOverflow() {\n    if (!this.listElement) {\n      return;\n    }\n    const { clientWidth, scrollWidth, scrollLeft } = this.listElement;\n\n    this.leftScrollDistance = scrollLeft;\n    this.rightScrollDistance = scrollWidth - scrollLeft - clientWidth;\n  }\n\n  componentDidLoad() {\n    if (this.shouldHandleOverflow()) {\n      this.registerOverflowHandler();\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <CardListTitle\n          isCollapsed={this.collapse}\n          label={this.label}\n          showAllLabel={this.i18nShowAll}\n          showAllCounter={\n            this.showAllCount === undefined\n              ? this.numberOfAllChildElements\n              : this.showAllCount\n          }\n          onClick={() => this.onCardListVisibilityToggle()}\n          onShowAllClick={(e) => this.onShowAllClick(e)}\n          hideShowAll={this.hideShowAll}\n        ></CardListTitle>\n        <div\n          class={{\n            CardList__Overflow: true,\n          }}\n          style={this.computeMaskLayer()}\n        >\n          <div\n            class={{\n              CardList__Content: true,\n              CardList__Content__Collapsed: this.collapse,\n              CardList__Style__Flexbox__Scroll: this.listStyle === 'stack',\n              CardList__Style__Infinite__Scroll: this.listStyle === 'scroll',\n            }}\n            onScroll={() => this.onCardListScroll()}\n          >\n            <slot\n              onSlotchange={() => this.changeVisibilityOfSlotChildren()}\n            ></slot>\n            {this.isShowMoreCardVisible() ? (\n              <ix-card\n                class={{\n                  Show__All__Card: true,\n                }}\n                onClick={(event) =>\n                  this.showMoreCardClick.emit({\n                    nativeEvent: event,\n                  })\n                }\n              >\n                <ix-card-content>\n                  <div class=\"Show__All__Card__Content\">\n                    <ix-icon\n                      name={iconMoreMenu}\n                      size={'32'}\n                      class={'Show__All__Card__Icon'}\n                    ></ix-icon>\n                    <span class=\"Show__All__Card__Text\">\n                      {this.i18nMoreCards} ({this.numberOfOverflowingElements})\n                    </span>\n                  </div>\n                </ix-card-content>\n              </ix-card>\n            ) : null}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'mixins/shadow-dom/component';\n\n$CardList__Title__Height: 1.5rem;\n\n:host {\n  @include ix-component;\n\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 0.5rem;\n\n  .CardList_Title {\n    display: flex;\n    position: relative;\n    height: $CardList__Title__Height;\n    align-items: center;\n    width: 100%;\n    margin-bottom: 1rem;\n\n    &__Label {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n  }\n\n  .CardList__Title__Button {\n    margin-right: 1rem;\n    transition: var(--theme-default-time) transform ease-in-out;\n  }\n\n  .CardList__Title__Button__Collapsed {\n    transform: rotate(-90deg);\n  }\n\n  .CardList__Title__Show__All {\n    align-self: center;\n    margin-left: auto;\n    margin-right: 0px;\n    flex-shrink: 0;\n  }\n\n  .CardList__Content {\n    display: flex;\n    position: relative;\n    height: calc(100% - #{$CardList__Title__Height});\n    width: 100%;\n    gap: 1.5rem;\n    transition: var(--theme-default-time) ease-in-out;\n    overflow: auto;\n  }\n\n  .CardList__Content__Collapsed {\n    min-height: 0px;\n    max-height: 0px;\n    overflow: hidden;\n    opacity: 0;\n  }\n\n  .CardList__Style__Flexbox__Scroll {\n    flex-wrap: wrap;\n  }\n\n  .CardList__Style__Infinite__Scroll {\n    flex-wrap: nowrap;\n\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n\n  .CardList__Overflow {\n    display: block;\n    position: relative;\n    height: 100%;\n    width: 100%;\n    pointer-events: all;\n    mask-image: var(--ix-card-list-overflow, none);\n  }\n\n  .Show__All__Card {\n    display: flex;\n    position: relative;\n\n    align-self: flex-start;\n    justify-self: center;\n\n    max-width: 11.25rem;\n    min-width: 11.25rem;\n    width: 11.25rem;\n\n    min-height: 11.25rem;\n    max-height: 11.25rem;\n    height: 11.25rem;\n\n    --ix-card-border-color: var(--theme-color-primary);\n    color: var(--theme-color-primary);\n  }\n\n  .CardList__Style__Infinite__Scroll .Show__All__Card {\n    margin-top: 2.375rem;\n  }\n\n  .CardList__Style__Flexbox__Scroll .Show__All__Card {\n    margin-bottom: 2.375rem;\n  }\n\n  .Show__All__Card:hover {\n    background-color: var(--theme-color-ghost--hover);\n  }\n\n  .Show__All__Card:active {\n    background-color: var(--theme-color-ghost--active);\n  }\n\n  .Show__All__Card__Content {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n  }\n\n  .Show__All__Card__Icon {\n    display: flex;\n    position: absolute;\n    height: 4rem;\n    width: 4rem;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .Show__All__Card__Text {\n    margin-bottom: 0px;\n    margin-top: auto;\n  }\n}\n\n::slotted(.display-none) {\n  display: none !important;\n}\n"],"names":["createMutationObserver","callback","MutationObserver","CardListTitle","props","label","h","class","ghost","icon","iconChevronDown","onClick","iconColor","CardList__Title__Button","CardList__Title__Button__Collapsed","isCollapsed","format","hideShowAll","onShowAllClick","showAllLabel","isNaN","showAllCounter","concat","CardList","constructor","hostRef","collapse","listStyle","maxVisibleCards","suppressOverflowHandling","i18nShowAll","i18nMoreCards","hasOverflowingElements","numberOfOverflowingElements","numberOfAllChildElements","leftScrollDistance","rightScrollDistance","onCardListVisibilityToggle","this","collapseChanged","emit","event","showAllClick","nativeEvent","getListChildren","hostElement","shadowRoot","querySelector","assignedElements","flatten","changeVisibilityOfSlotChildren","childElements","forEach","element","index","HTMLElement","classList","add","remove","length","detectOverflow","registerOverflowHandler","observer","observe","childList","subtree","requestAnimationFrame","shouldHandleOverflow","listElement","onCardListScroll","isShowMoreCardVisible","getOpacityFromScrollDistance","distance","computeMaskLayer","clientWidth","scrollWidth","scrollLeft","componentDidLoad","disconnectedCallback","disconnect","render","Host","key","undefined","showAllCount","e","CardList__Overflow","style","CardList__Content","CardList__Content__Collapsed","CardList__Style__Flexbox__Scroll","CardList__Style__Infinite__Scroll","onScroll","onSlotchange","Show__All__Card","showMoreCardClick","name","iconMoreMenu","size"],"sourceRoot":""}