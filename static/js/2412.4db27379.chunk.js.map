{"version":3,"file":"static/js/2412.4db27379.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/breakpoints.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/app-switch/index.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/shadow-dom.ts","../node_modules/@siemens/ix/dist/esm/src/components/application-header/application-header.scss?tag=ix-application-header&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/application-header/application-header.tsx","../node_modules/@siemens/ix/dist/esm/src/components/utils/context.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/application-layout/context.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/application-layout/service.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/debounce.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/menu-service/menu-service.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// Implementation of scss breakpoints mixins/_break-points.scss\nconst mediaQueries = {\n  sm: '(max-width: 48em)',\n  md: '(min-width: 48.0625em) and (max-width: 80em)',\n  lg: '(min-width: 80.0625em)',\n} as const;\n\nexport type Breakpoint = keyof typeof mediaQueries;\n\nexport const matchBreakpoint = (breakpoint: Breakpoint) => {\n  if (typeof window !== 'undefined' && (window as any).matchMedia) {\n    const mediaQuery = mediaQueries[breakpoint];\n    return window.matchMedia(mediaQuery).matches;\n  }\n  return false;\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { AppSwitchConfiguration } from '../application-layout/context';\nimport { showModal } from '../modal';\n\nexport async function showAppSwitch(config: AppSwitchConfiguration) {\n  const modal = document.createElement('ix-application-switch-modal');\n  modal.config = config;\n  const result = await showModal({\n    content: modal,\n    size: '840',\n    closeOnBackdropClick: true,\n  });\n\n  const appSwitchElement = result.htmlElement.querySelector(\n    'ix-application-switch-modal'\n  );\n\n  return (updateAppSwitchConfig: AppSwitchConfiguration) => {\n    if (!appSwitchElement) {\n      console.warn('ix-application-switch-modal element not found!');\n      return;\n    }\n\n    appSwitchElement.config = updateAppSwitchConfig;\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function closestElement(selector: string, el: any): null | Element {\n  if (!el) {\n    return null;\n  }\n  return (\n    el.closest(selector) ||\n    closestElement(selector, (el.getRootNode() as any).host)\n  );\n}\n\nexport function getSlottedElements<R = any>(slot: any): R[] {\n  return slot.assignedElements({ flatten: true });\n}\n\nexport function hasSlottedElements(slot: any) {\n  if (!slot) {\n    return false;\n  }\n  return slot.assignedElements({ flatten: true }).length !== 0;\n}\n\nexport function containsElement(target: Element, element: Element) {\n  const hasShadowDom = target.shadowRoot;\n\n  if (hasShadowDom) {\n    target.contains(element) || target.shadowRoot.contains(element);\n  }\n\n  return target.contains(element);\n}\n\nexport function closestPassShadow(node: Node, selector: string) {\n  if (!node) {\n    return null;\n  }\n\n  if (node instanceof ShadowRoot) {\n    return closestPassShadow(node.host, selector);\n  }\n\n  if (node instanceof HTMLElement) {\n    if (node.matches(selector)) {\n      return node;\n    } else {\n      return closestPassShadow(node.parentNode!, selector);\n    }\n  }\n\n  return closestPassShadow(node.parentNode!, selector);\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'mixins/shadow-dom/component';\n@import 'mixins/break-points';\n\n:host {\n  @include ix-component;\n\n  display: flex;\n  align-items: flex-end;\n  flex-wrap: nowrap;\n  position: relative;\n  width: 100%;\n  height: calc(2.75rem + var(--ix-safe-area-inset-top, 0rem));\n  min-height: calc(2.75rem + var(--ix-safe-area-inset-top, 0rem));\n  padding-top: 0;\n  padding-right: calc(1rem + var(--ix-safe-area-inset-right, 0rem));\n  padding-bottom: 0.3rem;\n  padding-left: calc(0.625rem + var(--ix-safe-area-inset-left, 0rem));\n\n  color: var(--theme-app-header--color);\n  background-color: var(--theme-app-header--background);\n\n  border-bottom: var(--theme-app-header--border-width) solid\n    var(--theme-app-header--border-color);\n\n  z-index: var(--theme-z-index-fixed);\n\n  .app-switch {\n    margin-right: 1rem;\n  }\n\n  .name {\n    overflow: hidden;\n    overflow-wrap: anywhere;\n    text-overflow: ellipsis;\n    text-wrap: nowrap;\n    max-width: 50%;\n    margin-left: 1.5rem;\n    margin-right: 2.5rem;\n    margin-bottom: 0.25rem;\n    color: var(--theme-app-header--color);\n  }\n\n  .logo {\n    display: inline-flex;\n    align-items: center;\n    position: relative;\n    height: 32px;\n    overflow: hidden;\n    line-height: 0rem;\n    color: var(--theme-app-header-logo--color);\n    margin-left: 0.375rem;\n  }\n\n  .content {\n    display: flex;\n    position: relative;\n    flex-direction: row;\n    margin-left: auto;\n    margin-right: 0px;\n  }\n\n  .dropdown {\n    overflow: visible;\n  }\n\n  .dropdown-content {\n    padding: 1rem;\n  }\n\n  .context-menu {\n    display: none;\n  }\n\n  .context-menu.context-menu-visible {\n    display: block;\n  }\n\n  @include media-breakpoint-match('sm') {\n    .logo {\n      display: none;\n    }\n  }\n\n  ::slotted(ix-avatar) {\n    margin-left: 1rem;\n  }\n}\n\n:host(.breakpoint-sm) {\n  .logo {\n    margin-left: 0.5rem;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { iconApps, iconMoreMenu } from '@siemens/ix-icons/icons';\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Fragment,\n  h,\n  Host,\n  Prop,\n  readTask,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { showAppSwitch } from '../utils/app-switch';\nimport { applicationLayoutService } from '../utils/application-layout';\nimport {\n  ApplicationLayoutContext,\n  AppSwitchConfiguration,\n} from '../utils/application-layout/context';\nimport { Breakpoint } from '../utils/breakpoints';\nimport { ContextType, useContextConsumer } from '../utils/context';\nimport { menuController } from '../utils/menu-service/menu-service';\nimport { hasSlottedElements } from '../utils/shadow-dom';\nimport { Disposable } from '../utils/typed-event';\n\n/**\n * @slot logo - Location of the logo\n */\n@Component({\n  tag: 'ix-application-header',\n  styleUrl: 'application-header.scss',\n  shadow: true,\n})\nexport class ApplicationHeader {\n  @Element() hostElement!: HTMLIxApplicationHeaderElement;\n\n  /**\n   * Application name\n   */\n  @Prop() name?: string;\n\n  /**\n   * Controls the visibility of the menu toggle button based on the context of the application header.\n   *\n   * When the application header is utilized outside the application frame, the menu toggle button is displayed.\n   * Conversely, if the header is within the application frame, this property is ineffective.\n   */\n  @Prop({ mutable: true }) showMenu?: boolean = false;\n\n  /**\n   * Event emitted when the menu toggle button is clicked\n   */\n  @Event() menuToggle!: EventEmitter<boolean>;\n\n  /**\n   * Event emitted when the app switch button is clicked\n   *\n   * @since 3.0.0\n   */\n  @Event() openAppSwitch!: EventEmitter<void>;\n\n  @State() breakpoint: Breakpoint = 'lg';\n  @State() menuExpanded = false;\n  @State() suppressResponsive = false;\n\n  @State() hasSlottedElements = false;\n\n  private menuDisposable?: Disposable;\n  private modeDisposable?: Disposable;\n  private callbackUpdateAppSwitchModal?: (\n    config: AppSwitchConfiguration\n  ) => void;\n\n  @State() applicationLayoutContext?: ContextType<\n    typeof ApplicationLayoutContext\n  >;\n\n  get contentBackground() {\n    return this.hostElement.shadowRoot!.querySelector('.dropdown-content');\n  }\n\n  componentWillLoad() {\n    useContextConsumer(\n      this.hostElement,\n      ApplicationLayoutContext,\n      (ctx) => {\n        if (ctx?.host === 'map-navigation') {\n          this.suppressResponsive = true;\n          this.breakpoint = 'md';\n          return;\n        }\n\n        this.breakpoint = applicationLayoutService.breakpoint;\n        this.applicationLayoutContext = ctx;\n\n        this.tryUpdateAppSwitch();\n      },\n      true\n    );\n\n    this.menuDisposable = menuController.expandChange.on((show) => {\n      this.menuExpanded = show;\n    });\n\n    this.modeDisposable = applicationLayoutService.onChange.on((mode) => {\n      if (this.suppressResponsive) {\n        return;\n      }\n\n      this.breakpoint = mode;\n    });\n\n    this.updateIsSlottedContent();\n  }\n\n  componentDidLoad() {\n    this.attachSiemensLogoIfLoaded();\n  }\n\n  disconnectedCallback() {\n    this.menuDisposable?.dispose();\n    this.modeDisposable?.dispose();\n  }\n\n  @Watch('applicationLayoutContext')\n  watchApplicationLayoutContext() {\n    if (this.applicationLayoutContext) {\n      this.showMenu = false;\n    }\n  }\n  @Watch('suppressResponsive')\n  watchSuppressResponsive() {\n    this.breakpoint = 'md';\n  }\n\n  private isLogoSlotted() {\n    const slotElement = this.hostElement.shadowRoot!.querySelector(\n      'slot[name=\"logo\"]'\n    ) as HTMLSlotElement;\n    const nodes = slotElement.assignedNodes({\n      flatten: true,\n    });\n\n    return nodes.length !== 0;\n  }\n\n  private attachSiemensLogoIfLoaded() {\n    const logoElement = document.createElement('ix-siemens-logo');\n    if (!this.isLogoSlotted()) {\n      this.hostElement\n        .shadowRoot!.querySelector('.logo')\n        ?.appendChild(logoElement);\n    }\n  }\n\n  private async onMenuClick() {\n    if (this.applicationLayoutContext) {\n      menuController.toggle();\n    } else {\n      this.menuExpanded = !this.menuExpanded;\n    }\n\n    this.menuToggle.emit(this.menuExpanded);\n  }\n\n  private resolveContextMenuButton() {\n    return new Promise<HTMLElement>((resolve) =>\n      readTask(() =>\n        resolve(\n          this.hostElement.shadowRoot!.querySelector(\n            '[data-context-menu]'\n          ) as HTMLElement\n        )\n      )\n    );\n  }\n\n  private tryUpdateAppSwitch() {\n    if (\n      !this.callbackUpdateAppSwitchModal ||\n      !this.applicationLayoutContext?.appSwitchConfig\n    ) {\n      return;\n    }\n\n    this.callbackUpdateAppSwitchModal(\n      this.applicationLayoutContext?.appSwitchConfig\n    );\n  }\n\n  private async showAppSwitch() {\n    const { defaultPrevented } = this.openAppSwitch.emit();\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    if (!this.applicationLayoutContext?.appSwitchConfig) {\n      return;\n    }\n\n    this.callbackUpdateAppSwitchModal = await showAppSwitch(\n      this.applicationLayoutContext?.appSwitchConfig\n    );\n  }\n\n  private updateIsSlottedContent() {\n    const slotElement =\n      this.hostElement.shadowRoot!.querySelector('.content slot');\n\n    this.hasSlottedElements = hasSlottedElements(slotElement);\n  }\n\n  private onContentBgClick(e: MouseEvent) {\n    if (e.target === this.contentBackground) {\n      e.preventDefault();\n    }\n  }\n\n  render() {\n    const hasApplicationContextAvailable = !!this.applicationLayoutContext;\n\n    const showMenuByApplicationFrame =\n      this.breakpoint === 'sm' &&\n      this.suppressResponsive === false &&\n      hasApplicationContextAvailable;\n\n    const showApplicationSwitch =\n      this.applicationLayoutContext?.appSwitchConfig &&\n      this.breakpoint !== 'sm' &&\n      this.suppressResponsive === false;\n\n    return (\n      <Host\n        class={{\n          [`breakpoint-${this.breakpoint}`]: true,\n        }}\n        slot=\"application-header\"\n      >\n        {(this.showMenu || showMenuByApplicationFrame) && (\n          <ix-menu-expand-icon\n            onClick={() => this.onMenuClick()}\n            expanded={this.menuExpanded}\n          ></ix-menu-expand-icon>\n        )}\n        {showApplicationSwitch && (\n          <ix-icon-button\n            onClick={() => this.showAppSwitch()}\n            icon={iconApps}\n            ghost\n            class=\"app-switch\"\n          ></ix-icon-button>\n        )}\n        <div class={{ logo: true }}>\n          <slot name=\"logo\"></slot>\n        </div>\n        <ix-typography format=\"body-lg\" class=\"name\">\n          {this.name}\n        </ix-typography>\n        <div class=\"content\">\n          {this.breakpoint === 'sm' ? (\n            <Fragment>\n              <ix-icon-button\n                class={{\n                  ['context-menu']: true,\n                  ['context-menu-visible']: this.hasSlottedElements,\n                }}\n                data-context-menu\n                data-testid=\"show-more\"\n                icon={iconMoreMenu}\n                ghost\n              ></ix-icon-button>\n              <ix-dropdown\n                data-overflow-dropdown\n                class=\"dropdown\"\n                discoverAllSubmenus\n                trigger={this.resolveContextMenuButton()}\n              >\n                <div\n                  class=\"dropdown-content\"\n                  onClick={(e) => this.onContentBgClick(e)}\n                >\n                  <slot\n                    onSlotchange={() => this.updateIsSlottedContent()}\n                  ></slot>\n                </div>\n              </ix-dropdown>\n            </Fragment>\n          ) : (\n            <slot onSlotchange={() => this.updateIsSlottedContent()}></slot>\n          )}\n          <slot name=\"ix-application-header-avatar\"></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TypedEvent } from './typed-event';\n\n/**\n * A Context object defines an optional initial value for a Context, as well as a name identifier for debugging purposes.\n */\nexport type Context<T> = {\n  name: string;\n  initialValue?: T;\n};\n\n/**\n * An unknown context type\n */\nexport type UnknownContext = Context<unknown>;\n\n/**\n * A helper type which can extract a Context value type from a Context type\n */\nexport type ContextType<T extends UnknownContext> =\n  T extends Context<infer Y> ? Y : never;\n\n/**\n * A function which creates a Context value object\n */\nexport function createContext<T>(\n  name: string,\n  initialValue?: T\n): Readonly<Context<T>> {\n  return {\n    name,\n    initialValue,\n  };\n}\n\n/**\n * A callback which is provided by a context requester and is called with the value satisfying the request.\n * This callback can be called multiple times by context providers as the requested value is changed.\n */\nexport type ContextCallback<ValueType> = (\n  value: ValueType,\n  unsubscribe?: () => void\n) => void;\n\n/**\n * An event fired by a context requester to signal it desires a named context.\n *\n * A provider should inspect the `context` property of the event to determine if it has a value that can\n * satisfy the request, calling the `callback` with the requested value if so.\n *\n * If the requested context event contains a truthy `subscribe` value, then a provider can call the callback\n * multiple times if the value is changed, if this is the case the provider should pass an `unsubscribe`\n * function to the callback which requesters can invoke to indicate they no longer wish to receive these updates.\n */\nexport class ContextEvent<T extends UnknownContext> extends Event {\n  public constructor(\n    public readonly context: T,\n    public readonly callback: ContextCallback<ContextType<T>>,\n    public readonly subscribe?: boolean\n  ) {\n    super('context-request', { bubbles: true, composed: true });\n  }\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    /**\n     * A 'context-request' event can be emitted by any element which desires\n     * a context value to be injected by an external provider.\n     */\n    'context-request': ContextEvent<UnknownContext>;\n  }\n}\n\nexport type ContextConsumerSubscription = {\n  unsubscribe: () => void;\n};\n\nexport function useContextConsumer<\n  T extends HTMLElement,\n  C extends UnknownContext,\n>(\n  hostElement: T,\n  context: C,\n  onContextReceived: (\n    context: ContextType<C>,\n    unsubscribe?: () => void\n  ) => void,\n  subscribe?: boolean\n): ContextConsumerSubscription {\n  let _unsubscribe: (() => void) | undefined;\n  hostElement.dispatchEvent(\n    new ContextEvent(\n      context,\n      (ctx, unSub) => {\n        onContextReceived(ctx, unSub);\n        _unsubscribe = unSub;\n      },\n      subscribe\n    )\n  );\n\n  return {\n    unsubscribe: () => {\n      if (_unsubscribe) {\n        _unsubscribe();\n      }\n    },\n  };\n}\nexport type ContextProvider<C extends Context<{}> = Context<any>> = {\n  emit: (context: ContextType<C>) => void;\n};\n\nexport function useContextProvider<\n  X extends {},\n  C extends Context<X>,\n  T extends HTMLElement = HTMLElement,\n>(\n  hostElement: T,\n  context: C,\n  contextPayload?: ContextType<C>\n): ContextProvider<C> {\n  const requestContext = new TypedEvent<ContextEvent<C>>();\n  const updateContext = new TypedEvent<ContextType<C>>();\n\n  const requests = new Set<ContextEvent<UnknownContext>>();\n\n  hostElement.addEventListener('context-request', (event: Event) => {\n    const requestContextEvent = event as ContextEvent<C>;\n    if (requestContextEvent?.context.name !== context.name) {\n      return;\n    }\n\n    requestContextEvent.stopPropagation();\n\n    if (requestContextEvent.subscribe) {\n      requests.add(requestContextEvent);\n    }\n    requestContext.emit(requestContextEvent);\n\n    if (contextPayload) {\n      requestContextEvent.callback(contextPayload, () => {\n        requests.delete(requestContextEvent);\n      });\n    }\n  });\n\n  updateContext.on((context: ContextType<C>) => {\n    requests.forEach((r) =>\n      r.callback(context, () => {\n        requests.delete(r);\n      })\n    );\n  });\n\n  return {\n    emit: (context: ContextType<C>) => {\n      updateContext.emit(context);\n    },\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { createContext } from '../context';\nimport { type LiteralStringUnion } from '../type-helper';\n\nexport const closestIxMenu = (element: Element) => {\n  const menuElement = element.closest('ix-menu');\n  return menuElement;\n};\n\nexport type AppSwitchConfigurationTarget = LiteralStringUnion<\n  '_self' | '_blank' | '_parent' | '_top'\n>;\n\nexport type AppSwitchConfiguration = {\n  currentAppId: string;\n  apps: {\n    id: string;\n    name: string;\n    description: string;\n    url: string;\n    target: AppSwitchConfigurationTarget;\n    iconSrc: string;\n  }[];\n  i18nAppSwitch?: string;\n  i18nLoadingApps?: string;\n};\n\nexport const ApplicationLayoutContext = createContext<{\n  hideHeader: boolean;\n  host: 'basic-navigation' | 'map-navigation' | null;\n  appSwitchConfig?: AppSwitchConfiguration;\n  sidebar?: boolean;\n}>('application-layout-context', {\n  hideHeader: false,\n  host: null,\n  sidebar: false,\n});\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Breakpoint, matchBreakpoint } from '../breakpoints';\nimport { debounce } from '../debounce';\nimport { TypedEvent } from '../typed-event';\n\nclass ApplicationLayoutService {\n  // Keep order of breakpoints\n  #supportedBreakpoints: Breakpoint[] = ['sm', 'md', 'lg'];\n  #breakpointChangeListener = new TypedEvent<Breakpoint>();\n  #breakpoint: Breakpoint = 'lg';\n\n  #isDetectionEnabled = true;\n  debouncedOnResize = debounce(this.onResize.bind(this), 50);\n\n  constructor() {\n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', this.debouncedOnResize.bind(this));\n      this.debouncedOnResize();\n    }\n  }\n\n  get breakpoint() {\n    return this.#breakpoint;\n  }\n\n  get onChange() {\n    return this.#breakpointChangeListener;\n  }\n\n  get isDetectionEnabled() {\n    return this.#isDetectionEnabled;\n  }\n\n  private onResize() {\n    if (!this.#isDetectionEnabled) {\n      return;\n    }\n    if (!this.#supportedBreakpoints) {\n      return;\n    }\n    const matchBreakpoints: [Breakpoint, boolean][] = [];\n\n    const breakpoints = this.#supportedBreakpoints;\n\n    breakpoints.forEach((breakpoint) => {\n      const match = matchBreakpoint(breakpoint);\n      matchBreakpoints.push([breakpoint, match]);\n    });\n\n    if (matchBreakpoints.every(([_, match]) => match === false)) {\n      let breakPointIndex = 0;\n      if (!this.#supportedBreakpoints.includes('lg')) {\n        breakPointIndex = matchBreakpoints.length - 1;\n      }\n\n      const [breakpoint, _] = matchBreakpoints[breakPointIndex];\n      requestAnimationFrame(() =>\n        this.#breakpointChangeListener.emit(breakpoint)\n      );\n      this.#breakpoint = breakpoint;\n      return;\n    }\n\n    for (const [breakpoint, match] of matchBreakpoints.reverse()) {\n      if (match) {\n        requestAnimationFrame(() =>\n          this.#breakpointChangeListener.emit(breakpoint)\n        );\n        this.#breakpoint = breakpoint;\n        break;\n      }\n    }\n  }\n\n  public disableBreakpointDetection() {\n    this.#isDetectionEnabled = false;\n  }\n\n  public enableBreakpointDetection() {\n    this.#isDetectionEnabled = true;\n  }\n\n  public setBreakpoint(breakpoint: Breakpoint) {\n    this.#breakpoint = breakpoint;\n    this.#breakpointChangeListener.emit(breakpoint);\n  }\n\n  public setBreakpoints(breakpoints: Breakpoint[]) {\n    this.#supportedBreakpoints = breakpoints;\n    this.onResize();\n  }\n}\n\nexport const applicationLayoutService = new ApplicationLayoutService();\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\ntype AnyFunction = (...args: any[]) => any;\n\nexport function debounce<T extends AnyFunction>(\n  func: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let timeoutId: ReturnType<typeof setTimeout>;\n\n  return function debounced(...args: Parameters<T>): void {\n    clearTimeout(timeoutId);\n\n    timeoutId = setTimeout(() => {\n      func(...args);\n    }, delay);\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TypedEvent } from '../typed-event';\n\nclass MenuService {\n  #menuElement: HTMLIxMenuElement | null = null;\n  #menuExpandChange = new TypedEvent<boolean>();\n  #isPinned = false;\n\n  register(menuElement: HTMLIxMenuElement) {\n    if (this.#menuElement) {\n      console.warn('Menu already defined');\n      return;\n    }\n    this.#menuElement = menuElement;\n    this.#menuElement.addEventListener(\n      'expandChange',\n      (event: CustomEvent<boolean>) => {\n        this.#menuExpandChange.emit(event.detail);\n      }\n    );\n  }\n\n  public setIsPinned(pinned: boolean) {\n    this.#isPinned = pinned;\n  }\n\n  public async open() {\n    if (this.#menuElement) {\n      this.#menuElement.toggleMenu(true);\n      return true;\n    }\n\n    return false;\n  }\n\n  public async close() {\n    if (this.#menuElement) {\n      this.#menuElement.toggleMenu(false);\n      return true;\n    }\n\n    return false;\n  }\n\n  public async toggle() {\n    if (this.#menuElement) {\n      this.#menuElement.toggleMenu();\n      return true;\n    }\n\n    return false;\n  }\n\n  get nativeElement() {\n    return this.#menuElement;\n  }\n\n  get expandChange() {\n    return this.#menuExpandChange;\n  }\n\n  get isPinned() {\n    return this.#isPinned;\n  }\n}\n\nexport const menuController = new MenuService();\n"],"names":["mediaQueries","sm","md","lg","matchBreakpoint","breakpoint","window","matchMedia","mediaQuery","matches","async","showAppSwitch","config","modal","document","createElement","appSwitchElement","showModal","content","size","closeOnBackdropClick","htmlElement","querySelector","updateAppSwitchConfig","console","warn","closestElement","selector","el","closest","getRootNode","host","getSlottedElements","slot","assignedElements","flatten","hasSlottedElements","length","closestPassShadow","node","ShadowRoot","HTMLElement","parentNode","ApplicationHeader","constructor","hostRef","showMenu","menuExpanded","suppressResponsive","contentBackground","this","hostElement","shadowRoot","componentWillLoad","useContextConsumer","ApplicationLayoutContext","ctx","applicationLayoutService","applicationLayoutContext","tryUpdateAppSwitch","menuDisposable","menuController","expandChange","on","show","modeDisposable","onChange","mode","updateIsSlottedContent","componentDidLoad","attachSiemensLogoIfLoaded","disconnectedCallback","_a","dispose","_b","watchApplicationLayoutContext","watchSuppressResponsive","isLogoSlotted","assignedNodes","logoElement","appendChild","onMenuClick","toggle","menuToggle","emit","resolveContextMenuButton","Promise","resolve","readTask","callbackUpdateAppSwitchModal","appSwitchConfig","defaultPrevented","openAppSwitch","slotElement","onContentBgClick","e","target","preventDefault","render","hasApplicationContextAvailable","showMenuByApplicationFrame","showApplicationSwitch","h","Host","key","class","concat","onClick","expanded","icon","iconApps","ghost","logo","name","format","Fragment","iconMoreMenu","discoverAllSubmenus","trigger","onSlotchange","ContextEvent","Event","context","callback","subscribe","super","bubbles","composed","onContextReceived","_unsubscribe","dispatchEvent","unSub","unsubscribe","useContextProvider","contextPayload","requestContext","TypedEvent","updateContext","requests","Set","addEventListener","event","requestContextEvent","stopPropagation","add","delete","forEach","r","closestIxMenu","element","initialValue","hideHeader","sidebar","_ApplicationLayoutService_supportedBreakpoints","set","_ApplicationLayoutService_breakpointChangeListener","_ApplicationLayoutService_breakpoint","_ApplicationLayoutService_isDetectionEnabled","debouncedOnResize","func","delay","timeoutId","_len","arguments","args","Array","_key","clearTimeout","setTimeout","debounce","onResize","bind","__classPrivateFieldGet","isDetectionEnabled","matchBreakpoints","match","push","every","_ref","_","breakPointIndex","includes","requestAnimationFrame","__classPrivateFieldSet","reverse","disableBreakpointDetection","enableBreakpointDetection","setBreakpoint","setBreakpoints","breakpoints","_MenuService_menuElement","_MenuService_menuExpandChange","_MenuService_isPinned","register","menuElement","detail","setIsPinned","pinned","open","toggleMenu","close","nativeElement","isPinned"],"sourceRoot":""}