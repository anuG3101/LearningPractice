{"version":3,"file":"static/js/4629.627df6cd.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/mutation-observer.ts","../node_modules/@siemens/ix/dist/esm/src/components/dropdown/dropdown-controller.ts","../node_modules/@siemens/ix/dist/esm/src/components/input/input.fc.tsx","../node_modules/@siemens/ix/dist/esm/src/components/input/input.util.ts","../node_modules/@siemens/ix/dist/esm/src/components/input/input.animation.ts","../node_modules/@siemens/ix/dist/esm/src/components/date-input/date-input.tsx","../node_modules/@siemens/ix/dist/esm/src/components/date-input/date-input.scss?tag=ix-date-input&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/utils/condition-checks.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/a11y.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/make-ref.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/input/validation.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/rwd.util.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const createMutationObserver = (callback: MutationCallback) =>\n  new MutationObserver(callback);\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { IxComponent } from '../utils/internal';\nexport type CloseBehavior = 'inside' | 'outside' | 'both' | boolean;\n\nexport interface DropdownInterface extends IxComponent {\n  closeBehavior: CloseBehavior;\n  discoverAllSubmenus: boolean;\n\n  getAssignedSubmenuIds(): string[];\n  getId(): string;\n\n  discoverSubmenu(): void;\n\n  isPresent(): boolean;\n\n  willPresent?(): boolean;\n  willDismiss?(): boolean;\n\n  present(): void;\n  dismiss(): void;\n}\n\nexport function hasDropdownItemWrapperImplemented(\n  item: unknown\n): item is DropdownItemWrapper {\n  return (\n    item !== null &&\n    (item as DropdownItemWrapper).getDropdownItemElement !== undefined &&\n    typeof (item as DropdownItemWrapper).getDropdownItemElement === 'function'\n  );\n}\n\nexport interface DropdownItemWrapper {\n  getDropdownItemElement(): Promise<HTMLIxDropdownItemElement>;\n}\n\ntype SubmenuIds = Record<string, string[]>;\n\nclass DropdownController {\n  private readonly dropdowns: Map<string, DropdownInterface> = new Map<\n    string,\n    DropdownInterface\n  >();\n  private submenuIds: SubmenuIds = {};\n\n  private isWindowListenerActive = false;\n\n  connected(dropdown: DropdownInterface) {\n    if (!this.isWindowListenerActive) {\n      this.addOverlayListeners();\n    }\n    this.dropdowns.set(dropdown.getId(), dropdown);\n\n    if (dropdown.discoverAllSubmenus) {\n      this.discoverSubmenus();\n    }\n  }\n\n  disconnected(dropdown: DropdownInterface) {\n    const id = dropdown.getId();\n    this.removeFromSubmenuIds(id);\n    this.dropdowns.delete(id);\n  }\n\n  removeFromSubmenuIds(id: string) {\n    this.dropdowns.forEach((dropdown) => {\n      const submenuIds = this.submenuIds[dropdown.getId()];\n      if (submenuIds) {\n        const index = submenuIds.indexOf(id);\n        if (index > -1) {\n          submenuIds.splice(index, 1);\n        }\n      }\n    });\n\n    delete this.submenuIds[id];\n  }\n\n  getDropdownById(id: string) {\n    return this.dropdowns.get(id);\n  }\n\n  discoverSubmenus() {\n    this.dropdowns.forEach((dropdown) => {\n      dropdown.discoverSubmenu();\n    });\n  }\n\n  present(dropdown: DropdownInterface) {\n    if (!dropdown.isPresent() && dropdown.willPresent?.()) {\n      this.submenuIds[dropdown.getId()] = dropdown.getAssignedSubmenuIds();\n      dropdown.present();\n    }\n  }\n\n  dismissChildren(uid: string) {\n    const childIds = this.submenuIds[uid] || [];\n    for (const id of childIds) {\n      const dropdown = this.dropdowns.get(id);\n      if (dropdown) {\n        this.dismiss(dropdown);\n      }\n    }\n  }\n\n  dismiss(dropdown: DropdownInterface) {\n    if (dropdown.isPresent() && dropdown.willDismiss?.()) {\n      this.dismissChildren(dropdown.getId());\n      dropdown.dismiss();\n      delete this.submenuIds[dropdown.getId()];\n    }\n  }\n\n  dismissAll(\n    ignoreBehaviorForIds: string[] = [],\n    ignoreRelatedDropdowns = false\n  ) {\n    this.dropdowns.forEach((dropdown) => {\n      const preventClosing =\n        dropdown.closeBehavior === 'inside' || dropdown.closeBehavior === false;\n\n      const shouldIgnore = ignoreBehaviorForIds.includes(dropdown.getId());\n      const path = this.buildComposedPath(dropdown.getId(), new Set<string>());\n\n      if (ignoreBehaviorForIds.length > 0 && ignoreRelatedDropdowns) {\n        let skipRelatedDropdown = false;\n\n        ignoreBehaviorForIds.forEach((id) => {\n          if (path.has(id)) {\n            skipRelatedDropdown = true;\n            return;\n          }\n        });\n\n        if (!skipRelatedDropdown) {\n          return;\n        }\n      }\n\n      if (!shouldIgnore && preventClosing) {\n        return;\n      }\n\n      this.dismiss(dropdown);\n    });\n  }\n\n  dismissOthers(uid: string) {\n    let path = this.buildComposedPath(uid, new Set<string>());\n    path.add(uid);\n\n    this.dropdowns.forEach((dropdown) => {\n      if (\n        dropdown.closeBehavior !== 'inside' &&\n        dropdown.closeBehavior !== false &&\n        !path.has(dropdown.getId())\n      ) {\n        this.dismiss(dropdown);\n      }\n    });\n  }\n\n  pathIncludesTrigger(eventTargets: EventTarget[]) {\n    for (let eventTarget of eventTargets) {\n      if (eventTarget instanceof HTMLElement) {\n        if (eventTarget.hasAttribute('data-ix-dropdown-trigger')) {\n          return eventTarget;\n        }\n      }\n    }\n\n    return;\n  }\n\n  private pathIncludesDropdown(eventTargets: EventTarget[]) {\n    return !!eventTargets.find(\n      (element: EventTarget) =>\n        (element as HTMLElement).tagName === 'IX-DROPDOWN'\n    );\n  }\n\n  private buildComposedPath(id: string, path: Set<string>): Set<string> {\n    if (this.submenuIds[id]) {\n      path.add(id);\n    }\n\n    for (const ruleKey of Object.keys(this.submenuIds)) {\n      if (this.submenuIds[ruleKey].includes(id)) {\n        this.buildComposedPath(ruleKey, path).forEach((key) => path.add(key));\n      }\n    }\n\n    return path;\n  }\n\n  private addOverlayListeners() {\n    this.isWindowListenerActive = true;\n\n    window.addEventListener('click', (event: MouseEvent) => {\n      const hasTrigger = this.pathIncludesTrigger(event.composedPath());\n      const hasDropdown = this.pathIncludesDropdown(event.composedPath());\n\n      if (!hasTrigger && !hasDropdown) {\n        this.dismissAll();\n      }\n    });\n\n    window.addEventListener('keydown', (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        this.dismissAll([...this.dropdowns.keys()]);\n      }\n    });\n  }\n}\n\nexport const dropdownController = new DropdownController();\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { h, FunctionalComponent } from '@stencil/core';\nimport { MakeRef } from '../utils/make-ref';\nimport { A11yAttributes } from '../utils/a11y';\n\nexport function TextareaElement(\n  props: Readonly<{\n    resizeBehavior: 'both' | 'horizontal' | 'vertical' | 'none';\n    textareaHeight?: string;\n    textareaWidth?: string;\n    textareaRows?: number;\n    textareaCols?: number;\n    disabled: boolean;\n    readonly: boolean;\n    maxLength?: number;\n    minLength?: number;\n    isInvalid: boolean;\n    required: boolean;\n    value: string;\n    placeholder?: string;\n    textAreaRef: (el: HTMLTextAreaElement | undefined) => void;\n    valueChange: (value: string) => void;\n    updateFormInternalValue: (value: string) => void;\n    onBlur: () => void;\n    ariaAttributes?: A11yAttributes;\n  }>\n) {\n  return (\n    <textarea\n      readOnly={props.readonly}\n      disabled={props.disabled}\n      maxLength={props.maxLength}\n      minLength={props.minLength}\n      cols={props.textareaCols}\n      rows={props.textareaRows}\n      ref={props.textAreaRef}\n      class={{\n        'is-invalid': props.isInvalid,\n      }}\n      required={props.required}\n      value={props.value}\n      placeholder={props.placeholder}\n      onInput={(inputEvent) => {\n        const target = inputEvent.target as HTMLInputElement;\n        props.updateFormInternalValue(target.value);\n        props.valueChange(target.value);\n      }}\n      onBlur={() => props.onBlur()}\n      style={{\n        resize: props.resizeBehavior,\n        height: props.textareaHeight,\n        width: props.textareaWidth,\n      }}\n      {...props.ariaAttributes}\n    ></textarea>\n  );\n}\n\nexport function InputElement(\n  props: Readonly<{\n    id: string;\n    disabled: boolean;\n    readonly: boolean;\n    maxLength?: string | number;\n    minLength?: string | number;\n    max?: string | number;\n    min?: string | number;\n    step?: string | number;\n    pattern?: string;\n    type: string;\n    isInvalid: boolean;\n    required: boolean;\n    value: string | number;\n    placeholder?: string;\n    inputRef: (el: HTMLInputElement | undefined) => void;\n    onKeyPress: (event: KeyboardEvent) => void;\n    valueChange: (value: string) => void;\n    updateFormInternalValue: (value: string) => void;\n    onBlur: () => void;\n    ariaAttributes?: A11yAttributes;\n  }>\n) {\n  return (\n    <input\n      id={props.id}\n      autoComplete=\"off\"\n      readOnly={props.readonly}\n      disabled={props.disabled}\n      step={props.step}\n      min={props.min}\n      max={props.max}\n      maxLength={props.maxLength ? Number(props.maxLength) : undefined}\n      minLength={props.minLength ? Number(props.minLength) : undefined}\n      ref={props.inputRef}\n      pattern={props.pattern}\n      type={props.type}\n      class={{\n        'is-invalid': props.isInvalid,\n      }}\n      required={props.required}\n      value={props.value}\n      placeholder={props.placeholder}\n      onKeyPress={(event) => props.onKeyPress(event)}\n      onInput={(inputEvent) => {\n        const target = inputEvent.target as HTMLInputElement;\n        props.updateFormInternalValue(target.value);\n        props.valueChange(target.value);\n      }}\n      onBlur={() => props.onBlur()}\n      {...props.ariaAttributes}\n    ></input>\n  );\n}\n\nexport const SlotEnd: FunctionalComponent<{\n  slotEndRef: MakeRef<HTMLDivElement>;\n  onSlotChange?: (e: Event) => void;\n}> = (props, children) => {\n  return (\n    <div class=\"end-container\" ref={props.slotEndRef}>\n      <slot name=\"end\" onSlotchange={props.onSlotChange}></slot>\n      {children}\n    </div>\n  );\n};\n\nexport const SlotStart: FunctionalComponent<{\n  slotStartRef: MakeRef<HTMLDivElement>;\n  onSlotChange?: (e: Event) => void;\n}> = (props) => {\n  return (\n    <div class=\"start-container\" ref={props.slotStartRef}>\n      <slot name=\"start\" onSlotchange={props.onSlotChange}></slot>\n    </div>\n  );\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { A11yAttributes, a11yBoolean } from '../utils/a11y';\nimport {\n  IxFormComponent,\n  IxInputFieldComponent,\n  ValidationResults,\n  shouldSuppressInternalValidation,\n} from '../utils/input';\nimport { createMutationObserver } from '../utils/mutation-observer';\nimport { convertToRemString } from '../utils/rwd.util';\nimport { generateUUID } from '../utils/uuid';\nimport { shakeInput } from './input.animation';\n\nexport function createIdIfNotExists(\n  element: IxFormComponent,\n  idPrefix: string = 'input'\n) {\n  return element.hasAttribute('id')\n    ? element.getAttribute('id')\n    : `${idPrefix}-${generateUUID()}`;\n}\n\nexport function mapValidationResult<T>(\n  ref: IxInputFieldComponent<T>,\n  result: ValidationResults\n) {\n  ref.isInvalid = result.isInvalid || result.isInvalidByRequired;\n  ref.isValid = result.isValid;\n  ref.isInfo = result.isInfo;\n  ref.isWarning = result.isWarning;\n}\n\nexport function checkAllowedKeys<T>(\n  comp: IxInputFieldComponent<T>,\n  event: KeyboardEvent\n) {\n  if (comp.allowedCharactersPattern) {\n    const regex = new RegExp(comp.allowedCharactersPattern);\n    if (!regex.test(event.key)) {\n      event.preventDefault();\n      shakeInput(comp.inputRef.current);\n    }\n  }\n}\n\nexport async function checkInternalValidity<T>(\n  comp: IxFormComponent<T>,\n  input: HTMLInputElement | HTMLTextAreaElement\n) {\n  const validityState = input.validity;\n\n  const eventResult = comp.validityStateChange.emit(validityState);\n\n  if (eventResult.defaultPrevented) {\n    return;\n  }\n\n  if (!comp.value) {\n    return;\n  }\n\n  const skipValidation = await shouldSuppressInternalValidation(comp);\n  if (skipValidation) {\n    return;\n  }\n\n  const { valid } = validityState;\n  comp.hostElement.classList.toggle('ix-invalid--validity-invalid', !valid);\n}\n\nexport function onInputBlur<T>(\n  comp: IxFormComponent<T>,\n  input?: HTMLInputElement | HTMLTextAreaElement | null\n) {\n  comp.ixBlur.emit();\n\n  if (!input) {\n    throw new Error('Input element is not available');\n  }\n\n  input.setAttribute('data-ix-touched', 'true');\n  checkInternalValidity(comp, input);\n}\n\nexport function applyPaddingEnd(\n  inputElement: HTMLElement | null,\n  width: number,\n  options: {\n    slotEnd: boolean;\n    additionalPaddingRight?: string;\n  }\n) {\n  if (!inputElement) {\n    return;\n  }\n\n  const remInPixels = 16;\n  const padding = convertToRemString(width + remInPixels / 2);\n\n  if (options.slotEnd) {\n    inputElement.style.paddingRight = `calc(${padding} + ${\n      options.additionalPaddingRight ?? '0rem'\n    })`;\n  } else {\n    inputElement.style.paddingLeft = padding;\n  }\n}\n\nexport function adjustPaddingForStartAndEnd(\n  startElement: HTMLElement | null,\n  endElement: HTMLElement | null,\n  inputElement: HTMLElement | null\n) {\n  requestAnimationFrame(() => {\n    requestAnimationFrame(() => {\n      if (startElement) {\n        const startBoundingRect = startElement.getBoundingClientRect();\n        if (startBoundingRect) {\n          applyPaddingEnd(inputElement, startBoundingRect.width, {\n            slotEnd: false,\n          });\n        }\n      }\n\n      if (endElement) {\n        const endBoundingRect = endElement.getBoundingClientRect();\n        if (endBoundingRect) {\n          applyPaddingEnd(inputElement, endBoundingRect.width, {\n            slotEnd: true,\n          });\n        }\n      }\n    });\n  });\n}\n\nexport function getAriaAttributesForInput(\n  component: IxInputFieldComponent\n): A11yAttributes {\n  const inputAria: A11yAttributes = {\n    'aria-invalid': `${a11yBoolean(component.isInvalid)}`,\n    'aria-required': `${a11yBoolean(component.required)}`,\n  };\n\n  if (component.isInvalid && component.invalidText) {\n    inputAria['aria-errormessage'] = component.invalidText;\n  }\n  return inputAria;\n}\n\nexport type DisposableChangesAndVisibilityObservers = () => void;\n\nexport const addDisposableChangesAndVisibilityObservers = (\n  element: HTMLElement,\n  callback: () => void\n): DisposableChangesAndVisibilityObservers => {\n  const intersectionObserver = observeElementUntilVisible(element, callback);\n  const mutationObserver = createMutationObserver(callback);\n\n  mutationObserver.observe(element, {\n    subtree: true,\n    attributes: true,\n  });\n\n  return () => {\n    intersectionObserver.disconnect();\n    mutationObserver.disconnect();\n  };\n};\n\nfunction observeElementUntilVisible(\n  hostElement: HTMLElement,\n  updateCallback: () => void\n): IntersectionObserver {\n  const intersectionObserver = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        updateCallback();\n      }\n    });\n  });\n\n  intersectionObserver.observe(hostElement);\n  return intersectionObserver;\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport anime from 'animejs';\n\nexport function shakeInput(input: HTMLInputElement) {\n  const xMax = 5;\n  anime({\n    targets: input,\n    duration: 200,\n    easing: 'easeInOutSine',\n    loop: 2,\n    translateX: [\n      {\n        value: xMax * -1,\n      },\n      {\n        value: xMax,\n      },\n      {\n        value: xMax / -2,\n      },\n      {\n        value: xMax / 2,\n      },\n      {\n        value: 0,\n      },\n    ],\n  });\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { iconCalendar } from '@siemens/ix-icons/icons';\nimport {\n  AttachInternals,\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Host,\n  Method,\n  Prop,\n  State,\n  Watch,\n  h,\n} from '@stencil/core';\nimport { DateTime } from 'luxon';\nimport { dropdownController } from '../dropdown/dropdown-controller';\nimport { SlotEnd, SlotStart } from '../input/input.fc';\nimport {\n  DisposableChangesAndVisibilityObservers,\n  addDisposableChangesAndVisibilityObservers,\n  adjustPaddingForStartAndEnd,\n} from '../input/input.util';\nimport {\n  ClassMutationObserver,\n  HookValidationLifecycle,\n  IxInputFieldComponent,\n  ValidationResults,\n  createClassMutationObserver,\n} from '../utils/input';\nimport { makeRef } from '../utils/make-ref';\n\nexport type DateInputValidityState = {\n  patternMismatch: boolean;\n  invalidReason?: string;\n};\n\n/**\n * @form-ready\n *\n * @slot start - Element will be displayed at the start of the input\n * @slot end - Element will be displayed at the end of the input\n */\n@Component({\n  tag: 'ix-date-input',\n  styleUrl: 'date-input.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class DateInput implements IxInputFieldComponent<string | undefined> {\n  @Element() hostElement!: HTMLIxDateInputElement;\n  @AttachInternals() formInternals!: ElementInternals;\n\n  /**\n   * name of the input element\n   */\n  @Prop({ reflect: true }) name?: string;\n\n  /**\n   * placeholder of the input element\n   */\n  @Prop({ reflect: true }) placeholder?: string;\n\n  /**\n   * value of the input element\n   */\n  @Prop({ reflect: true, mutable: true }) value?: string = '';\n\n  /**\n   * Locale identifier (e.g. 'en' or 'de').\n   */\n  @Prop() locale?: string;\n\n  /**\n   * Date format string.\n   * See {@link \"https://moment.github.io/luxon/#/formatting?id=table-of-tokens\"} for all available tokens.\n   */\n  @Prop() format: string = 'yyyy/LL/dd';\n\n  /**\n   * required attribute\n   */\n  @Prop() required?: boolean;\n\n  /**\n   * helper text below the input field\n   */\n  @Prop() helperText?: string;\n\n  /**\n   * label of the input field\n   */\n  @Prop() label?: string;\n\n  /**\n   * error text below the input field\n   */\n  @Prop({ reflect: true }) invalidText?: string;\n\n  /**\n   * readonly attribute\n   */\n  @Prop() readonly: boolean = false;\n\n  /**\n   * disabled attribute\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * info text below the input field\n   */\n  @Prop() infoText?: string;\n\n  /**\n   * warning text below the input field\n   */\n  @Prop() warningText?: string;\n\n  /**\n   * valid text below the input field\n   */\n  @Prop() validText?: string;\n\n  /**\n   * show text as tooltip\n   */\n  @Prop() showTextAsTooltip?: boolean;\n\n  /**\n   * i18n string for the error message when the date is not parsable\n   */\n  @Prop({ attribute: 'i18n-error-date-unparsable' }) i18nErrorDateUnparsable =\n    'Date is not valid';\n\n  /**\n   * Shows week numbers displayed on the left side of the date picker\n   *\n   * @since 3.0.0\n   */\n  @Prop() showWeekNumbers = false;\n\n  /**\n   * Input change event.\n   */\n  @Event({ cancelable: false }) valueChange!: EventEmitter<string | undefined>;\n\n  /**\n   * Validation state change event.\n   */\n  @Event() validityStateChange!: EventEmitter<DateInputValidityState>;\n\n  /** @internal */\n  @Event() ixFocus!: EventEmitter<void>;\n\n  /** @internal */\n  @Event() ixBlur!: EventEmitter<void>;\n\n  @State() show = false;\n  @State() from: string | null = null;\n  @State() isInputInvalid = false;\n  @State() isInvalid = false;\n  @State() isValid = false;\n  @State() isInfo = false;\n  @State() isWarning = false;\n  @State() focus = false;\n\n  private readonly slotStartRef = makeRef<HTMLDivElement>();\n  private readonly slotEndRef = makeRef<HTMLDivElement>();\n\n  private readonly datepickerRef = makeRef<HTMLIxDatePickerElement>();\n\n  private readonly inputElementRef = makeRef<HTMLInputElement>();\n  private readonly dropdownElementRef = makeRef<HTMLIxDropdownElement>();\n  private classObserver?: ClassMutationObserver;\n  private invalidReason?: string;\n  private touched = false;\n\n  private disposableChangesAndVisibilityObservers?: DisposableChangesAndVisibilityObservers;\n\n  updateFormInternalValue(value: string | undefined): void {\n    this.formInternals.setFormValue(value);\n    this.value = value;\n  }\n\n  connectedCallback(): void {\n    this.classObserver = createClassMutationObserver(this.hostElement, () =>\n      this.checkClassList()\n    );\n\n    this.disposableChangesAndVisibilityObservers =\n      addDisposableChangesAndVisibilityObservers(\n        this.hostElement,\n        this.updatePaddings.bind(this)\n      );\n  }\n\n  componentWillLoad(): void {\n    this.onInput(this.value);\n    if (this.isInputInvalid) {\n      this.from = null;\n    } else {\n      this.watchValue();\n    }\n\n    this.checkClassList();\n    this.updateFormInternalValue(this.value);\n  }\n\n  private updatePaddings() {\n    adjustPaddingForStartAndEnd(\n      this.slotStartRef.current,\n      this.slotEndRef.current,\n      this.inputElementRef.current\n    );\n  }\n\n  disconnectedCallback(): void {\n    this.classObserver?.destroy();\n    this.disposableChangesAndVisibilityObservers?.();\n  }\n\n  @Watch('value')\n  watchValue() {\n    this.from = this.value;\n  }\n\n  /** @internal */\n  @Method()\n  hasValidValue(): Promise<boolean> {\n    return Promise.resolve(!!this.value);\n  }\n\n  /** @internal */\n  @Method()\n  getAssociatedFormElement(): Promise<HTMLFormElement | null> {\n    return Promise.resolve(this.formInternals.form);\n  }\n\n  async onInput(value: string | undefined) {\n    this.value = value;\n    if (!value) {\n      this.valueChange.emit(value);\n      return;\n    }\n\n    if (!this.format) {\n      return;\n    }\n\n    const date = DateTime.fromFormat(value, this.format);\n    if (date.isValid) {\n      this.isInputInvalid = false;\n\n      this.updateFormInternalValue(value);\n      this.closeDropdown();\n    } else {\n      this.isInputInvalid = true;\n      this.invalidReason = date.invalidReason;\n    }\n\n    this.valueChange.emit(value);\n  }\n\n  onCalenderClick(event: Event) {\n    if (!this.show) {\n      event.stopPropagation();\n      event.preventDefault();\n      this.openDropdown();\n    }\n\n    if (this.inputElementRef.current) {\n      this.inputElementRef.current.focus();\n    }\n  }\n\n  async openDropdown() {\n    const dropdownElement = await this.dropdownElementRef.waitForCurrent();\n    const id = dropdownElement.getAttribute('data-ix-dropdown');\n\n    dropdownController.dismissAll();\n    if (!id) {\n      return;\n    }\n\n    const dropdown = dropdownController.getDropdownById(id);\n    if (!dropdown) {\n      return;\n    }\n    dropdownController.present(dropdown);\n  }\n\n  async closeDropdown() {\n    const dropdownElement = await this.dropdownElementRef.waitForCurrent();\n    const id = dropdownElement.getAttribute('data-ix-dropdown');\n\n    if (!id) {\n      return;\n    }\n\n    const dropdown = dropdownController.getDropdownById(id);\n    if (!dropdown) {\n      return;\n    }\n    dropdownController.dismiss(dropdown);\n  }\n\n  private checkClassList() {\n    this.isInvalid = this.hostElement.classList.contains('ix-invalid');\n  }\n\n  private renderInput() {\n    return (\n      <div class=\"input-wrapper\">\n        <SlotStart\n          slotStartRef={this.slotStartRef}\n          onSlotChange={() => this.updatePaddings()}\n        ></SlotStart>\n        <input\n          autoComplete=\"off\"\n          class={{\n            'is-invalid': this.isInputInvalid,\n          }}\n          disabled={this.disabled}\n          readOnly={this.readonly}\n          readonly={this.readonly}\n          required={this.required}\n          ref={this.inputElementRef}\n          type=\"text\"\n          value={this.value ?? ''}\n          onInput={(event) => {\n            const target = event.target as HTMLInputElement;\n            this.onInput(target.value);\n          }}\n          onClick={(event) => {\n            if (this.show) {\n              event.stopPropagation();\n              event.preventDefault();\n            }\n          }}\n          onFocus={async () => {\n            this.openDropdown();\n            this.ixFocus.emit();\n          }}\n          onBlur={() => {\n            this.ixBlur.emit();\n            this.touched = true;\n          }}\n        ></input>\n        <SlotEnd\n          slotEndRef={this.slotEndRef}\n          onSlotChange={() => this.updatePaddings()}\n        >\n          <ix-icon-button\n            data-testid=\"open-calendar\"\n            class={{ 'calendar-hidden': this.disabled || this.readonly }}\n            ghost\n            icon={iconCalendar}\n            onClick={(event) => this.onCalenderClick(event)}\n          ></ix-icon-button>\n        </SlotEnd>\n      </div>\n    );\n  }\n\n  @HookValidationLifecycle()\n  hookValidationLifecycle({\n    isInfo,\n    isInvalid,\n    isInvalidByRequired,\n    isValid,\n    isWarning,\n  }: ValidationResults) {\n    this.isInvalid = isInvalid || isInvalidByRequired || this.isInputInvalid;\n    this.isInfo = isInfo;\n    this.isValid = isValid;\n    this.isWarning = isWarning;\n  }\n\n  @Watch('isInputInvalid')\n  async onInputValidationChange() {\n    const state = await this.getValidityState();\n    this.validityStateChange.emit({\n      patternMismatch: state.patternMismatch,\n      invalidReason: this.invalidReason,\n    });\n  }\n\n  /** @internal */\n  @Method()\n  getValidityState(): Promise<ValidityState> {\n    return Promise.resolve({\n      badInput: false,\n      customError: false,\n      patternMismatch: this.isInputInvalid,\n      rangeOverflow: false,\n      rangeUnderflow: false,\n      stepMismatch: false,\n      tooLong: false,\n      tooShort: false,\n      typeMismatch: false,\n      valid: !this.isInputInvalid,\n      valueMissing: !!this.required && !this.value,\n    });\n  }\n\n  /**\n   * Get the native input element\n   */\n  @Method()\n  getNativeInputElement(): Promise<HTMLInputElement> {\n    return this.inputElementRef.waitForCurrent();\n  }\n\n  /**\n   * Focuses the input field\n   */\n  @Method()\n  async focusInput(): Promise<void> {\n    return (await this.getNativeInputElement()).focus();\n  }\n\n  /**\n   * Returns whether the text field has been touched.\n   * @internal\n   */\n  @Method()\n  isTouched(): Promise<boolean> {\n    return Promise.resolve(this.touched);\n  }\n\n  render() {\n    const invalidText = this.isInputInvalid\n      ? this.i18nErrorDateUnparsable\n      : this.invalidText;\n\n    return (\n      <Host\n        class={{\n          disabled: this.disabled,\n          readonly: this.readonly,\n        }}\n      >\n        <ix-field-wrapper\n          label={this.label}\n          helperText={this.helperText}\n          isInvalid={this.isInvalid}\n          invalidText={invalidText}\n          infoText={this.infoText}\n          isInfo={this.isInfo}\n          isWarning={this.isWarning}\n          warningText={this.warningText}\n          isValid={this.isValid}\n          validText={this.validText}\n          showTextAsTooltip={this.showTextAsTooltip}\n          required={this.required}\n          controlRef={this.inputElementRef}\n        >\n          {this.renderInput()}\n        </ix-field-wrapper>\n        <ix-dropdown\n          data-testid=\"date-dropdown\"\n          trigger={this.inputElementRef.waitForCurrent()}\n          ref={this.dropdownElementRef}\n          closeBehavior=\"outside\"\n          suppressOverflowBehavior={true}\n          show={this.show}\n          onShowChanged={(event) => {\n            this.show = event.detail;\n          }}\n        >\n          <ix-date-picker\n            ref={this.datepickerRef}\n            format={this.format}\n            locale={this.locale}\n            range={false}\n            from={this.from ?? ''}\n            onDateChange={(event) => {\n              const { from } = event.detail;\n              this.onInput(from);\n            }}\n            showWeekNumbers={this.showWeekNumbers}\n          ></ix-date-picker>\n        </ix-dropdown>\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'mixins/shadow-dom/component';\n@import 'mixins/input';\n@import './../input/input.mixins.scss';\n\n@include input-field;\n\n:host {\n  @include ix-component;\n\n  display: inline-block;\n  position: relative;\n\n  input {\n    width: 100%;\n    height: 100%;\n  }\n\n  .calendar-hidden {\n    display: none;\n  }\n}\n\n:host(.readonly) {\n  input {\n    pointer-events: none;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport const isHttpUrl = (link: string) => {\n  if (!link) {\n    return false;\n  }\n\n  let url: URL;\n\n  try {\n    url = new URL(link);\n  } catch (e) {\n    return false;\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:';\n};\n\nexport const isSvgDataUrl = (url: string) => {\n  if (!url) {\n    return false;\n  }\n\n  if (typeof url !== 'string') {\n    return false;\n  }\n\n  return url.startsWith('data:image/svg+xml');\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { isHttpUrl, isSvgDataUrl } from './condition-checks';\n\nexport const a11yBoolean = (value: boolean | undefined) =>\n  value ? 'true' : 'false';\n\nconst kebabCaseToUpperCaseSentence = (kebabCase: string) => {\n  const withoutFilledSuffix = kebabCase.replace('-filled', '');\n  const words = withoutFilledSuffix.split('-');\n  const sentence = words\n    .map((word) => {\n      const trimWord = word.trim();\n      const digitLessWord = trimWord.replace(/\\d+/g, '');\n\n      if (digitLessWord.length === 0) {\n        return trimWord;\n      }\n\n      return digitLessWord;\n    })\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n\n  return sentence;\n};\n\nexport const getFallbackLabelFromIconName = (iconName?: string) => {\n  if (!iconName) {\n    return 'Unknown';\n  }\n\n  if (isHttpUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  if (isSvgDataUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  const label = kebabCaseToUpperCaseSentence(iconName);\n\n  if (label.length === 0) {\n    return 'Unknown';\n  }\n\n  return label;\n};\n\nexport const a11yHostAttributes = (\n  hostElement: HTMLElement,\n  ignoreAttributes: A11yAttributeName[] = []\n): Record<A11yAttributeName, string> => {\n  const attributeObject: Record<string, string> = {};\n  a11yAttributes.forEach((attr) => {\n    if (hostElement.hasAttribute(attr)) {\n      const value = hostElement.getAttribute(attr);\n      if (value !== null && !ignoreAttributes.includes(attr)) {\n        attributeObject[attr] = hostElement.getAttribute(attr) ?? '';\n        hostElement.removeAttribute(attr);\n      }\n    }\n  });\n\n  return attributeObject;\n};\n\nexport type A11yAttributeName =\n  | 'role'\n  | 'aria-activedescendant'\n  | 'aria-atomic'\n  | 'aria-autocomplete'\n  | 'aria-braillelabel'\n  | 'aria-brailleroledescription'\n  | 'aria-busy'\n  | 'aria-checked'\n  | 'aria-colcount'\n  | 'aria-colindex'\n  | 'aria-colindextext'\n  | 'aria-colspan'\n  | 'aria-controls'\n  | 'aria-current'\n  | 'aria-describedby'\n  | 'aria-description'\n  | 'aria-details'\n  | 'aria-disabled'\n  | 'aria-errormessage'\n  | 'aria-expanded'\n  | 'aria-flowto'\n  | 'aria-haspopup'\n  | 'aria-hidden'\n  | 'aria-invalid'\n  | 'aria-keyshortcuts'\n  | 'aria-label'\n  | 'aria-labelledby'\n  | 'aria-level'\n  | 'aria-live'\n  | 'aria-multiline'\n  | 'aria-multiselectable'\n  | 'aria-orientation'\n  | 'aria-owns'\n  | 'aria-placeholder'\n  | 'aria-posinset'\n  | 'aria-pressed'\n  | 'aria-readonly'\n  | 'aria-relevant'\n  | 'aria-required'\n  | 'aria-roledescription'\n  | 'aria-rowcount'\n  | 'aria-rowindex'\n  | 'aria-rowindextext'\n  | 'aria-rowspan'\n  | 'aria-selected'\n  | 'aria-setsize'\n  | 'aria-sort'\n  | 'aria-valuemax'\n  | 'aria-valuemin'\n  | 'aria-valuenow'\n  | 'aria-valuetext';\n\nconst a11yAttributes: A11yAttributeName[] = [\n  'role',\n  'aria-activedescendant',\n  'aria-atomic',\n  'aria-autocomplete',\n  'aria-braillelabel',\n  'aria-brailleroledescription',\n  'aria-busy',\n  'aria-checked',\n  'aria-colcount',\n  'aria-colindex',\n  'aria-colindextext',\n  'aria-colspan',\n  'aria-controls',\n  'aria-current',\n  'aria-describedby',\n  'aria-description',\n  'aria-details',\n  'aria-disabled',\n  'aria-errormessage',\n  'aria-expanded',\n  'aria-flowto',\n  'aria-haspopup',\n  'aria-hidden',\n  'aria-invalid',\n  'aria-keyshortcuts',\n  'aria-label',\n  'aria-labelledby',\n  'aria-level',\n  'aria-live',\n  'aria-multiline',\n  'aria-multiselectable',\n  'aria-orientation',\n  'aria-owns',\n  'aria-placeholder',\n  'aria-posinset',\n  'aria-pressed',\n  'aria-readonly',\n  'aria-relevant',\n  'aria-required',\n  'aria-roledescription',\n  'aria-rowcount',\n  'aria-rowindex',\n  'aria-rowindextext',\n  'aria-rowspan',\n  'aria-selected',\n  'aria-setsize',\n  'aria-sort',\n  'aria-valuemax',\n  'aria-valuemin',\n  'aria-valuenow',\n  'aria-valuetext',\n];\n\ntype PartialRecord<K extends A11yAttributeName, T> = {\n  [P in K]?: T;\n};\nexport type A11yAttributes = PartialRecord<A11yAttributeName, string>;\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport type MakeRef<T> = {\n  (ref: T | undefined | null): void;\n  current: T | null;\n  waitForCurrent(): Promise<T>;\n};\n\ntype Resolve<T> = (value: T) => void;\n\nexport function makeRef<T>(\n  currentChangedCallback?: (element: T) => void\n): MakeRef<T> {\n  let resolve: Resolve<T> | undefined = undefined;\n  let currentPromise = new Promise<T>((res) => (resolve = res));\n  let current: T | undefined = undefined;\n\n  const setRefFunction = (ref: T | undefined) => {\n    if (ref === undefined) {\n      return;\n    }\n    current = (setRefFunction as MakeRef<T>).current = ref;\n    currentChangedCallback?.(ref);\n    resolve?.(ref);\n  };\n\n  setRefFunction.current = current as T | null;\n\n  setRefFunction.waitForCurrent = async () => {\n    await currentPromise;\n    return current;\n  };\n\n  return setRefFunction as MakeRef<T>;\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getElement } from '@stencil/core';\nimport { HTMLIxFormComponentElement, IxFormComponent } from '.';\nimport { IxComponent } from '../internal';\n\nexport type ClassMutationObserver = {\n  destroy: () => void;\n};\n\nexport async function isTouched<T>(host: IxFormComponent<T>) {\n  if (typeof host.isTouched === 'function') {\n    return host.isTouched();\n  }\n}\n\nexport async function shouldSuppressInternalValidation<T>(\n  host: IxFormComponent<T>\n) {\n  if (\n    host.getAssociatedFormElement &&\n    typeof host.getAssociatedFormElement === 'function'\n  ) {\n    const form = await host.getAssociatedFormElement();\n\n    if (!form) {\n      return false;\n    }\n\n    return form.noValidate;\n  }\n\n  return false;\n}\n\nexport function createClassMutationObserver(\n  element: HTMLElement,\n  callback: () => void,\n  options?: {\n    includeChildren?: boolean;\n  }\n): ClassMutationObserver {\n  const observer = new MutationObserver(callback);\n  observer.observe(element, {\n    subtree: options?.includeChildren,\n    childList: options?.includeChildren,\n    attributes: true,\n    attributeFilter: ['class'],\n  });\n\n  return {\n    destroy() {\n      observer.disconnect();\n    },\n  };\n}\n\nexport type ValidationResultProperty =\n  | 'isInvalid'\n  | 'isInvalidByRequired'\n  | 'isValid'\n  | 'isInfo'\n  | 'isWarning';\nexport type ValidationResults = Record<ValidationResultProperty, boolean>;\n\nfunction containsClass(\n  hostElement: HTMLIxFormComponentElement<unknown>,\n  className: string,\n  includeChildren: boolean\n) {\n  return (\n    hostElement.classList.contains(`${className}`) ||\n    (includeChildren ? !!hostElement.querySelector(`.${className}`) : false)\n  );\n}\n\nexport function checkFieldClasses(\n  hostElement: HTMLIxFormComponentElement<unknown>,\n  includeChildren = false\n): ValidationResults {\n  return {\n    isInvalid: containsClass(hostElement, 'ix-invalid', includeChildren),\n    isInvalidByRequired: containsClass(\n      hostElement,\n      'ix-invalid--required',\n      includeChildren\n    ),\n    isValid: containsClass(hostElement, 'ix-valid', includeChildren),\n    isInfo: containsClass(hostElement, 'ix-info', includeChildren),\n    isWarning: containsClass(hostElement, 'ix-warning', includeChildren),\n  };\n}\n\nexport function HookValidationLifecycle(options?: {\n  includeChildren?: boolean;\n}) {\n  return (proto: IxComponent, methodName: string) => {\n    let checkIfRequiredFunction: (() => Promise<void>) | null;\n    let classMutationObserver: ClassMutationObserver | null;\n    const { componentWillLoad, disconnectedCallback, connectedCallback } =\n      proto;\n\n    proto.connectedCallback = function () {\n      const host = getElement(\n        this\n      ) as unknown as HTMLIxFormComponentElement<unknown>;\n\n      checkIfRequiredFunction = async () => {\n        const skipValidation = await shouldSuppressInternalValidation(host);\n        if (skipValidation) {\n          return;\n        }\n\n        if (host.hasValidValue && typeof host.hasValidValue === 'function') {\n          const hasValue = await host.hasValidValue();\n          const touched = await isTouched(host);\n\n          if (host.required) {\n            host.classList.toggle('ix-invalid--required', !hasValue && touched);\n          } else {\n            host.classList.remove('ix-invalid--required');\n          }\n        }\n\n        if (\n          host.getValidityState &&\n          typeof host.getValidityState === 'function'\n        ) {\n          const validityState = await host.getValidityState();\n\n          host.classList.toggle(\n            `ix-invalid--validity-patternMismatch`,\n            validityState.patternMismatch\n          );\n        }\n      };\n\n      host.addEventListener('checkedChange', checkIfRequiredFunction);\n      host.addEventListener('valueChange', checkIfRequiredFunction);\n      host.addEventListener('ixBlur', checkIfRequiredFunction);\n      setTimeout(checkIfRequiredFunction);\n      return connectedCallback?.call(this);\n    };\n\n    proto.componentWillLoad = function () {\n      const host = getElement(\n        this\n      ) as unknown as HTMLIxFormComponentElement<unknown>;\n      classMutationObserver = createClassMutationObserver(\n        host,\n        () => {\n          const result = checkFieldClasses(host, options?.includeChildren);\n          proto[methodName].call(this, result);\n        },\n        options\n      );\n      const result = checkFieldClasses(host, options?.includeChildren);\n      proto[methodName].call(this, result);\n      return componentWillLoad?.call(this);\n    };\n\n    proto.disconnectedCallback = function () {\n      const host = getElement(this);\n\n      if (host && classMutationObserver) {\n        classMutationObserver.destroy();\n        classMutationObserver = null;\n      }\n\n      if (host && checkIfRequiredFunction) {\n        host.removeEventListener('checkedChange', checkIfRequiredFunction);\n        host.removeEventListener('valueChange', checkIfRequiredFunction);\n        host.removeEventListener('ixBlur', checkIfRequiredFunction);\n        checkIfRequiredFunction = null;\n      }\n\n      return disconnectedCallback?.call(this);\n    };\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const convertToRemString = (value: number) => {\n  const valueRem = value / 16;\n  return `${valueRem}rem`;\n};\n\nexport const convertToAbbreviationString = (num: number) => {\n  if (isNaN(num) || num === null || num === undefined) {\n    return '';\n  }\n\n  let unit = '';\n\n  // Metric Units\n  const units = [\n    { unit: 'q', value: Math.pow(10, 15) },\n    { unit: 't', value: Math.pow(10, 12) },\n    { unit: 'B', value: Math.pow(10, 9) },\n    { unit: 'M', value: Math.pow(10, 6) },\n    { unit: 'K', value: Math.pow(10, 3) },\n  ];\n\n  units.some((pow) => {\n    let formattedNum = Math.abs(num);\n    if (formattedNum >= pow.value) {\n      formattedNum /= pow.value;\n      num = Math.round(formattedNum * 10) / 10;\n      unit = pow.unit;\n      return true;\n    }\n\n    return false;\n  });\n\n  return num + unit;\n};\n"],"names":["createMutationObserver","callback","MutationObserver","hasDropdownItemWrapperImplemented","item","undefined","getDropdownItemElement","dropdownController","constructor","dropdowns","Map","submenuIds","isWindowListenerActive","connected","dropdown","this","addOverlayListeners","set","getId","discoverAllSubmenus","discoverSubmenus","disconnected","id","removeFromSubmenuIds","delete","forEach","index","indexOf","splice","getDropdownById","get","discoverSubmenu","present","isPresent","_a","willPresent","call","getAssignedSubmenuIds","dismissChildren","uid","childIds","dismiss","willDismiss","dismissAll","ignoreBehaviorForIds","arguments","length","ignoreRelatedDropdowns","preventClosing","closeBehavior","shouldIgnore","includes","path","buildComposedPath","Set","skipRelatedDropdown","has","dismissOthers","add","pathIncludesTrigger","eventTargets","eventTarget","HTMLElement","hasAttribute","pathIncludesDropdown","find","element","tagName","ruleKey","Object","keys","key","window","addEventListener","event","hasTrigger","composedPath","hasDropdown","TextareaElement","props","h","assign","readOnly","readonly","disabled","maxLength","minLength","cols","textareaCols","rows","textareaRows","ref","textAreaRef","class","isInvalid","required","value","placeholder","onInput","inputEvent","target","updateFormInternalValue","valueChange","onBlur","style","resize","resizeBehavior","height","textareaHeight","width","textareaWidth","ariaAttributes","InputElement","autoComplete","step","min","max","Number","inputRef","pattern","type","onKeyPress","SlotEnd","children","slotEndRef","name","onSlotchange","onSlotChange","SlotStart","slotStartRef","mapValidationResult","result","isInvalidByRequired","isValid","isInfo","isWarning","checkAllowedKeys","comp","allowedCharactersPattern","RegExp","test","preventDefault","input","current","anime","targets","duration","easing","loop","translateX","xMax","async","checkInternalValidity","validityState","validity","validityStateChange","emit","defaultPrevented","shouldSuppressInternalValidation","valid","hostElement","classList","toggle","onInputBlur","ixBlur","Error","setAttribute","applyPaddingEnd","inputElement","options","padding","convertToRemString","remInPixels","slotEnd","paddingRight","concat","additionalPaddingRight","paddingLeft","adjustPaddingForStartAndEnd","startElement","endElement","requestAnimationFrame","startBoundingRect","getBoundingClientRect","endBoundingRect","getAriaAttributesForInput","component","inputAria","a11yBoolean","invalidText","addDisposableChangesAndVisibilityObservers","intersectionObserver","updateCallback","IntersectionObserver","entries","entry","isIntersecting","observe","observeElementUntilVisible","mutationObserver","subtree","attributes","disconnect","DateInput","hostRef","format","i18nErrorDateUnparsable","showWeekNumbers","show","from","isInputInvalid","focus","makeRef","datepickerRef","inputElementRef","dropdownElementRef","touched","formInternals","setFormValue","connectedCallback","classObserver","createClassMutationObserver","checkClassList","disposableChangesAndVisibilityObservers","updatePaddings","bind","componentWillLoad","watchValue","disconnectedCallback","destroy","_b","hasValidValue","Promise","resolve","getAssociatedFormElement","form","date","DateTime","fromFormat","closeDropdown","invalidReason","onCalenderClick","stopPropagation","openDropdown","waitForCurrent","getAttribute","contains","renderInput","onClick","onFocus","ixFocus","ghost","icon","iconCalendar","hookValidationLifecycle","_ref","onInputValidationChange","state","getValidityState","patternMismatch","badInput","customError","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","getNativeInputElement","focusInput","isTouched","render","Host","label","helperText","infoText","warningText","validText","showTextAsTooltip","controlRef","trigger","suppressOverflowBehavior","onShowChanged","detail","locale","range","onDateChange","__decorate","HookValidationLifecycle","prototype","getFallbackLabelFromIconName","iconName","link","url","URL","e","protocol","isHttpUrl","startsWith","replace","split","map","word","trimWord","trim","digitLessWord","charAt","toUpperCase","slice","join","a11yHostAttributes","ignoreAttributes","attributeObject","a11yAttributes","attr","removeAttribute","currentChangedCallback","currentPromise","res","setRefFunction","host","noValidate","observer","includeChildren","childList","attributeFilter","containsClass","className","querySelector","checkFieldClasses","proto","methodName","checkIfRequiredFunction","classMutationObserver","getElement","hasValue","remove","setTimeout","removeEventListener"],"sourceRoot":""}