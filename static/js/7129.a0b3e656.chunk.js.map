{"version":3,"file":"static/js/7129.a0b3e656.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/button/base-button.tsx","../node_modules/@siemens/ix/dist/esm/src/components/utils/condition-checks.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/a11y.ts","../node_modules/@siemens/ix/dist/esm/src/components/toggle-button/toggle-button.scss?tag=ix-toggle-button&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/toggle-button/toggle-button.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { FunctionalComponent, h } from '@stencil/core';\nimport { A11yAttributes } from '../utils/a11y';\nimport { ButtonVariant } from './button';\n\nexport type ButtonAlignment = 'center' | 'start';\n\nconst isDanger = (variant: string) => {\n  return variant.toUpperCase() === 'Danger'.toUpperCase();\n};\n\nconst isPrimary = (variant: string) => {\n  return variant.toUpperCase() === 'Primary'.toUpperCase();\n};\n\nconst isSecondary = (variant: string) => {\n  return variant.toUpperCase() === 'Secondary'.toUpperCase();\n};\n\nexport const getButtonClasses = (\n  variant: ButtonVariant,\n  outline: boolean,\n  ghost: boolean,\n  iconOnly = false,\n  iconOval = false,\n  selected: boolean,\n  disabled: boolean\n) => {\n  return {\n    btn: true,\n    'btn-danger': isDanger(variant) && !outline && !ghost,\n    'btn-outline-danger': isDanger(variant) && outline && !ghost,\n    'btn-invisible-danger': isDanger(variant) && !outline && ghost,\n    'btn-primary': isPrimary(variant) && !outline && !ghost,\n    'btn-outline-primary': isPrimary(variant) && outline && !ghost,\n    'btn-invisible-primary': isPrimary(variant) && !outline && ghost,\n    'btn-secondary': isSecondary(variant) && !outline && !ghost,\n    'btn-outline-secondary': isSecondary(variant) && outline && !ghost,\n    'btn-invisible-secondary': isSecondary(variant) && !outline && ghost,\n    'btn-icon': iconOnly,\n    'btn-oval': iconOval,\n    selected: selected,\n    disabled: disabled,\n  };\n};\n\nexport type BaseButtonProps = {\n  type: string;\n  variant: ButtonVariant;\n  outline: boolean;\n  ghost: boolean;\n  iconOnly: boolean;\n  iconOval: boolean;\n  selected: boolean;\n  disabled: boolean;\n  loading: boolean;\n  icon?: string;\n  onClick?: Function;\n  ariaAttributes?: A11yAttributes;\n  extraClasses?: { [key: string]: boolean };\n  iconSize?: string;\n  iconColor?: string;\n  alignment?: ButtonAlignment;\n  tabIndex?: number;\n  afterContent?: any;\n};\n\nconst getSpinnerSize = (btnProps: BaseButtonProps) => {\n  if (!btnProps.icon) {\n    return 'small';\n  }\n\n  switch (btnProps.iconSize) {\n    case '12':\n      return 'xx-small';\n    case '16':\n      return 'x-small';\n    default:\n      return 'small';\n  }\n};\n\nexport const BaseButton: FunctionalComponent<BaseButtonProps> = (\n  props: BaseButtonProps,\n  children\n) => {\n  const extraClasses = props.extraClasses ?? {};\n\n  const ariaAttributes = props.ariaAttributes ?? {};\n  if (!ariaAttributes['aria-disabled'] && props.disabled) {\n    ariaAttributes['aria-disabled'] = 'true';\n  }\n\n  return (\n    <button\n      {...ariaAttributes}\n      onClick={(e: Event) => (props.onClick ? props.onClick(e) : undefined)}\n      tabindex={props.disabled ? -1 : (props.tabIndex ?? 0)}\n      type={props.type}\n      class={{\n        ...getButtonClasses(\n          props.variant,\n          props.outline,\n          props.ghost,\n          props.iconOnly,\n          props.iconOval,\n          props.selected,\n          props.disabled || props.loading\n        ),\n        ...extraClasses,\n      }}\n    >\n      {props.loading ? (\n        <ix-spinner size={getSpinnerSize(props)} hideTrack></ix-spinner>\n      ) : null}\n      {props.icon && !props.loading ? (\n        <ix-icon\n          class=\"icon\"\n          name={props.icon}\n          size={props.iconSize as any}\n          color={props.iconColor}\n        ></ix-icon>\n      ) : null}\n      <div\n        class={{\n          content: true,\n          [`content-${props.alignment}`]: !!props.alignment,\n        }}\n      >\n        {children}\n      </div>\n      {props.afterContent ? props.afterContent : null}\n    </button>\n  );\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport const isHttpUrl = (link: string) => {\n  if (!link) {\n    return false;\n  }\n\n  let url: URL;\n\n  try {\n    url = new URL(link);\n  } catch (e) {\n    return false;\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:';\n};\n\nexport const isSvgDataUrl = (url: string) => {\n  if (!url) {\n    return false;\n  }\n\n  if (typeof url !== 'string') {\n    return false;\n  }\n\n  return url.startsWith('data:image/svg+xml');\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { isHttpUrl, isSvgDataUrl } from './condition-checks';\n\nexport const a11yBoolean = (value: boolean | undefined) =>\n  value ? 'true' : 'false';\n\nconst kebabCaseToUpperCaseSentence = (kebabCase: string) => {\n  const withoutFilledSuffix = kebabCase.replace('-filled', '');\n  const words = withoutFilledSuffix.split('-');\n  const sentence = words\n    .map((word) => {\n      const trimWord = word.trim();\n      const digitLessWord = trimWord.replace(/\\d+/g, '');\n\n      if (digitLessWord.length === 0) {\n        return trimWord;\n      }\n\n      return digitLessWord;\n    })\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n\n  return sentence;\n};\n\nexport const getFallbackLabelFromIconName = (iconName?: string) => {\n  if (!iconName) {\n    return 'Unknown';\n  }\n\n  if (isHttpUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  if (isSvgDataUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  const label = kebabCaseToUpperCaseSentence(iconName);\n\n  if (label.length === 0) {\n    return 'Unknown';\n  }\n\n  return label;\n};\n\nexport const a11yHostAttributes = (\n  hostElement: HTMLElement,\n  ignoreAttributes: A11yAttributeName[] = []\n): Record<A11yAttributeName, string> => {\n  const attributeObject: Record<string, string> = {};\n  a11yAttributes.forEach((attr) => {\n    if (hostElement.hasAttribute(attr)) {\n      const value = hostElement.getAttribute(attr);\n      if (value !== null && !ignoreAttributes.includes(attr)) {\n        attributeObject[attr] = hostElement.getAttribute(attr) ?? '';\n        hostElement.removeAttribute(attr);\n      }\n    }\n  });\n\n  return attributeObject;\n};\n\nexport type A11yAttributeName =\n  | 'role'\n  | 'aria-activedescendant'\n  | 'aria-atomic'\n  | 'aria-autocomplete'\n  | 'aria-braillelabel'\n  | 'aria-brailleroledescription'\n  | 'aria-busy'\n  | 'aria-checked'\n  | 'aria-colcount'\n  | 'aria-colindex'\n  | 'aria-colindextext'\n  | 'aria-colspan'\n  | 'aria-controls'\n  | 'aria-current'\n  | 'aria-describedby'\n  | 'aria-description'\n  | 'aria-details'\n  | 'aria-disabled'\n  | 'aria-errormessage'\n  | 'aria-expanded'\n  | 'aria-flowto'\n  | 'aria-haspopup'\n  | 'aria-hidden'\n  | 'aria-invalid'\n  | 'aria-keyshortcuts'\n  | 'aria-label'\n  | 'aria-labelledby'\n  | 'aria-level'\n  | 'aria-live'\n  | 'aria-multiline'\n  | 'aria-multiselectable'\n  | 'aria-orientation'\n  | 'aria-owns'\n  | 'aria-placeholder'\n  | 'aria-posinset'\n  | 'aria-pressed'\n  | 'aria-readonly'\n  | 'aria-relevant'\n  | 'aria-required'\n  | 'aria-roledescription'\n  | 'aria-rowcount'\n  | 'aria-rowindex'\n  | 'aria-rowindextext'\n  | 'aria-rowspan'\n  | 'aria-selected'\n  | 'aria-setsize'\n  | 'aria-sort'\n  | 'aria-valuemax'\n  | 'aria-valuemin'\n  | 'aria-valuenow'\n  | 'aria-valuetext';\n\nconst a11yAttributes: A11yAttributeName[] = [\n  'role',\n  'aria-activedescendant',\n  'aria-atomic',\n  'aria-autocomplete',\n  'aria-braillelabel',\n  'aria-brailleroledescription',\n  'aria-busy',\n  'aria-checked',\n  'aria-colcount',\n  'aria-colindex',\n  'aria-colindextext',\n  'aria-colspan',\n  'aria-controls',\n  'aria-current',\n  'aria-describedby',\n  'aria-description',\n  'aria-details',\n  'aria-disabled',\n  'aria-errormessage',\n  'aria-expanded',\n  'aria-flowto',\n  'aria-haspopup',\n  'aria-hidden',\n  'aria-invalid',\n  'aria-keyshortcuts',\n  'aria-label',\n  'aria-labelledby',\n  'aria-level',\n  'aria-live',\n  'aria-multiline',\n  'aria-multiselectable',\n  'aria-orientation',\n  'aria-owns',\n  'aria-placeholder',\n  'aria-posinset',\n  'aria-pressed',\n  'aria-readonly',\n  'aria-relevant',\n  'aria-required',\n  'aria-roledescription',\n  'aria-rowcount',\n  'aria-rowindex',\n  'aria-rowindextext',\n  'aria-rowspan',\n  'aria-selected',\n  'aria-setsize',\n  'aria-sort',\n  'aria-valuemax',\n  'aria-valuemin',\n  'aria-valuenow',\n  'aria-valuetext',\n];\n\ntype PartialRecord<K extends A11yAttributeName, T> = {\n  [P in K]?: T;\n};\nexport type A11yAttributes = PartialRecord<A11yAttributeName, string>;\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'legacy/components/buttons';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n  display: inline-block;\n  width: auto;\n  height: $x-large-space;\n  vertical-align: middle;\n\n  .btn {\n    width: 100%;\n    height: 100%;\n  }\n\n  /**\n  * Overwrite the default button styles because toggle button looks different as primary variant\n  */\n  .btn.selected.btn-primary {\n    background: var(--theme-color-dynamic);\n    color: var(--theme-color-primary--contrast);\n  }\n\n  .btn.selected.btn-primary:hover {\n    background: var(--theme-color-dynamic--hover);\n    color: var(--theme-color-primary--contrast);\n  }\n\n  .btn.selected.btn-primary:active {\n    background: var(--theme-color-dynamic--active);\n    color: var(--theme-color-primary--contrast);\n  }\n\n  button:not(:disabled) {\n    cursor: pointer;\n  }\n}\n\n:host(.disabled) {\n  pointer-events: none;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  Watch,\n} from '@stencil/core';\nimport { BaseButton, BaseButtonProps } from '../button/base-button';\nimport { ButtonVariant } from '../button/button';\nimport { a11yBoolean } from '../utils/a11y';\n\n@Component({\n  tag: 'ix-toggle-button',\n  shadow: true,\n  styleUrl: './toggle-button.scss',\n})\nexport class ToggleButton {\n  /**\n   * Button variant.\n   * Important: Variant 'primary' can only be combined with either outline or ghost.\n   */\n  @Prop() variant: ButtonVariant = 'secondary';\n\n  /**\n   * Outline button\n   */\n  @Prop() outline = false;\n\n  /**\n   * Button with no background or outline\n   */\n  @Prop() ghost = false;\n\n  /**\n   * Disable the button\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Loading button\n   */\n  @Prop() loading: boolean = false;\n\n  /**\n   * Icon name\n   */\n  @Prop() icon?: string;\n\n  /**\n   * Show button as pressed\n   */\n  @Prop() pressed = false;\n\n  /**\n   * Pressed change event\n   */\n  @Event() pressedChange!: EventEmitter<boolean>;\n\n  private isIllegalToggleButtonConfig() {\n    return this.variant === 'primary' && (this.outline || this.ghost);\n  }\n\n  private logIllegalConfig() {\n    console.warn(\n      'iX toggle button with illegal configuration detected. Variant \"primary\" can only be combined with \"outline\" or \"ghost\".'\n    );\n  }\n\n  @Watch('variant')\n  onVariantChange() {\n    if (this.isIllegalToggleButtonConfig()) {\n      this.logIllegalConfig();\n    }\n  }\n\n  @Watch('ghost')\n  onGhostChange() {\n    this.onVariantChange();\n  }\n\n  @Watch('outline')\n  onOutlineChange() {\n    this.onVariantChange();\n  }\n\n  componentDidLoad() {\n    this.onVariantChange();\n  }\n\n  private dispatchPressedChange() {\n    this.pressedChange.emit(!this.pressed);\n  }\n\n  render() {\n    const baseButtonProps: BaseButtonProps = {\n      variant: this.variant,\n      outline: this.outline,\n      ghost: this.ghost,\n      iconOnly: false,\n      iconOval: false,\n      selected: this.pressed,\n      disabled: this.disabled || this.loading,\n      icon: this.icon,\n      loading: this.loading,\n      onClick: () => this.dispatchPressedChange(),\n      type: 'button',\n      ariaAttributes: {\n        'aria-pressed': a11yBoolean(this.pressed),\n      },\n    };\n\n    return (\n      <Host\n        class={{\n          disabled: this.disabled || this.loading,\n        }}\n      >\n        <BaseButton {...baseButtonProps}>\n          <slot></slot>\n        </BaseButton>\n      </Host>\n    );\n  }\n}\n"],"names":["isDanger","variant","toUpperCase","isPrimary","isSecondary","getButtonClasses","outline","ghost","iconOnly","arguments","length","undefined","iconOval","selected","disabled","btn","getSpinnerSize","btnProps","icon","iconSize","BaseButton","props","children","extraClasses","_a","ariaAttributes","_b","h","Object","assign","onClick","e","tabindex","_c","tabIndex","type","class","loading","size","hideTrack","name","color","iconColor","content","concat","alignment","afterContent","a11yBoolean","value","getFallbackLabelFromIconName","iconName","link","url","URL","protocol","isHttpUrl","startsWith","label","replace","split","map","word","trimWord","trim","digitLessWord","charAt","slice","join","a11yHostAttributes","hostElement","ignoreAttributes","attributeObject","a11yAttributes","forEach","attr","hasAttribute","getAttribute","includes","removeAttribute","ToggleButton","constructor","hostRef","pressed","isIllegalToggleButtonConfig","this","logIllegalConfig","console","warn","onVariantChange","onGhostChange","onOutlineChange","componentDidLoad","dispatchPressedChange","pressedChange","emit","render","baseButtonProps","Host","key"],"sourceRoot":""}