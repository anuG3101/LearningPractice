{"version":3,"file":"static/js/4371.6801f9f5.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/icon-button/base-icon-button.tsx","../node_modules/@siemens/ix/dist/esm/src/components/button/base-button.tsx","../node_modules/@siemens/ix/dist/esm/src/components/icon-button/icon-button.scss?tag=ix-icon-button&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/icon-button/icon-button.tsx","../node_modules/@siemens/ix/dist/esm/src/components/spinner/spinner.scss?tag=ix-spinner&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/spinner/spinner.tsx","../node_modules/@siemens/ix/dist/esm/src/components/utils/condition-checks.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/a11y.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { h } from '@stencil/core';\nimport { BaseButton, BaseButtonProps } from '../button/base-button';\n\nexport function BaseIconButton(props: Omit<BaseButtonProps, 'type'>) {\n  return <BaseButton {...props} type=\"button\"></BaseButton>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { FunctionalComponent, h } from '@stencil/core';\nimport { A11yAttributes } from '../utils/a11y';\nimport { ButtonVariant } from './button';\n\nexport type ButtonAlignment = 'center' | 'start';\n\nconst isDanger = (variant: string) => {\n  return variant.toUpperCase() === 'Danger'.toUpperCase();\n};\n\nconst isPrimary = (variant: string) => {\n  return variant.toUpperCase() === 'Primary'.toUpperCase();\n};\n\nconst isSecondary = (variant: string) => {\n  return variant.toUpperCase() === 'Secondary'.toUpperCase();\n};\n\nexport const getButtonClasses = (\n  variant: ButtonVariant,\n  outline: boolean,\n  ghost: boolean,\n  iconOnly = false,\n  iconOval = false,\n  selected: boolean,\n  disabled: boolean\n) => {\n  return {\n    btn: true,\n    'btn-danger': isDanger(variant) && !outline && !ghost,\n    'btn-outline-danger': isDanger(variant) && outline && !ghost,\n    'btn-invisible-danger': isDanger(variant) && !outline && ghost,\n    'btn-primary': isPrimary(variant) && !outline && !ghost,\n    'btn-outline-primary': isPrimary(variant) && outline && !ghost,\n    'btn-invisible-primary': isPrimary(variant) && !outline && ghost,\n    'btn-secondary': isSecondary(variant) && !outline && !ghost,\n    'btn-outline-secondary': isSecondary(variant) && outline && !ghost,\n    'btn-invisible-secondary': isSecondary(variant) && !outline && ghost,\n    'btn-icon': iconOnly,\n    'btn-oval': iconOval,\n    selected: selected,\n    disabled: disabled,\n  };\n};\n\nexport type BaseButtonProps = {\n  type: string;\n  variant: ButtonVariant;\n  outline: boolean;\n  ghost: boolean;\n  iconOnly: boolean;\n  iconOval: boolean;\n  selected: boolean;\n  disabled: boolean;\n  loading: boolean;\n  icon?: string;\n  onClick?: Function;\n  ariaAttributes?: A11yAttributes;\n  extraClasses?: { [key: string]: boolean };\n  iconSize?: string;\n  iconColor?: string;\n  alignment?: ButtonAlignment;\n  tabIndex?: number;\n  afterContent?: any;\n};\n\nconst getSpinnerSize = (btnProps: BaseButtonProps) => {\n  if (!btnProps.icon) {\n    return 'small';\n  }\n\n  switch (btnProps.iconSize) {\n    case '12':\n      return 'xx-small';\n    case '16':\n      return 'x-small';\n    default:\n      return 'small';\n  }\n};\n\nexport const BaseButton: FunctionalComponent<BaseButtonProps> = (\n  props: BaseButtonProps,\n  children\n) => {\n  const extraClasses = props.extraClasses ?? {};\n\n  const ariaAttributes = props.ariaAttributes ?? {};\n  if (!ariaAttributes['aria-disabled'] && props.disabled) {\n    ariaAttributes['aria-disabled'] = 'true';\n  }\n\n  return (\n    <button\n      {...ariaAttributes}\n      onClick={(e: Event) => (props.onClick ? props.onClick(e) : undefined)}\n      tabindex={props.disabled ? -1 : (props.tabIndex ?? 0)}\n      type={props.type}\n      class={{\n        ...getButtonClasses(\n          props.variant,\n          props.outline,\n          props.ghost,\n          props.iconOnly,\n          props.iconOval,\n          props.selected,\n          props.disabled || props.loading\n        ),\n        ...extraClasses,\n      }}\n    >\n      {props.loading ? (\n        <ix-spinner size={getSpinnerSize(props)} hideTrack></ix-spinner>\n      ) : null}\n      {props.icon && !props.loading ? (\n        <ix-icon\n          class=\"icon\"\n          name={props.icon}\n          size={props.iconSize as any}\n          color={props.iconColor}\n        ></ix-icon>\n      ) : null}\n      <div\n        class={{\n          content: true,\n          [`content-${props.alignment}`]: !!props.alignment,\n        }}\n      >\n        {children}\n      </div>\n      {props.afterContent ? props.afterContent : null}\n    </button>\n  );\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import './icon-button-mixin.scss';\n\n@include base-icon-button;\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Element, h, Host, Prop } from '@stencil/core';\nimport { BaseButtonProps } from '../button/base-button';\nimport { ButtonVariant } from '../button/button';\nimport { BaseIconButton } from '../icon-button/base-icon-button';\nimport { getFallbackLabelFromIconName } from '../utils/a11y';\n\nexport type IconButtonVariant = ButtonVariant;\n\n@Component({\n  tag: 'ix-icon-button',\n  styleUrl: 'icon-button.scss',\n  shadow: true,\n})\nexport class IconButton {\n  @Element() hostElement!: HTMLIxIconButtonElement;\n\n  /**\n   * Accessibility label for the icon button\n   * Will be set as aria-label on the nested HTML button element\n   */\n  @Prop({ attribute: 'a11y-label' }) a11yLabel?: string;\n\n  /**\n   * Variant of button\n   */\n  @Prop() variant: IconButtonVariant = 'secondary';\n\n  /**\n   * Button outline\n   */\n  @Prop() outline: boolean = false;\n\n  /**\n   * Button invisible\n   */\n  @Prop() ghost: boolean = false;\n\n  /**\n   * Button in oval shape\n   */\n  @Prop() oval: boolean = false;\n\n  /**\n   * Icon name\n   */\n  @Prop() icon?: string;\n\n  /**\n   * Size of icon in button\n   *\n   */\n  @Prop() size: '24' | '16' | '12' = '24';\n\n  /**\n   * Color of icon in  button\n   */\n  @Prop() iconColor?: string;\n\n  /**\n   * Disabled\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Type of the button\n   */\n  @Prop() type: 'button' | 'submit' = 'button';\n\n  /**\n   * Loading button\n   */\n  @Prop() loading = false;\n\n  /**\n   * Temp. workaround until stencil issue is fixed (https://github.com/ionic-team/stencil/issues/2284)\n   */\n  submitButtonElement!: HTMLButtonElement;\n\n  componentDidLoad() {\n    if (this.type === 'submit') {\n      const submitButton = document.createElement('button');\n      submitButton.style.display = 'none';\n      submitButton.type = 'submit';\n      submitButton.tabIndex = -1;\n      this.hostElement.appendChild(submitButton);\n\n      this.submitButtonElement = submitButton;\n    }\n  }\n\n  dispatchFormEvents() {\n    if (this.type === 'submit' && this.submitButtonElement) {\n      this.submitButtonElement.click();\n    }\n  }\n\n  private getIconSizeClass() {\n    return {\n      'btn-icon-12': this.size === '12',\n      'btn-icon-16': this.size === '16',\n      'btn-icon-32': this.size === '24' || !this.size,\n    };\n  }\n\n  render() {\n    const baseButtonProps: BaseButtonProps = {\n      ariaAttributes: {\n        'aria-label': this.a11yLabel\n          ? this.a11yLabel\n          : getFallbackLabelFromIconName(this.icon),\n      },\n      variant: this.variant,\n      outline: this.outline,\n      ghost: this.ghost,\n      iconOnly: true,\n      iconOval: this.oval,\n      selected: false,\n      disabled: this.disabled || this.loading,\n      icon: this.icon,\n      iconColor: this.iconColor,\n      iconSize: this.size,\n      loading: this.loading,\n      onClick: () => this.dispatchFormEvents(),\n      type: this.type,\n      extraClasses: this.getIconSizeClass(),\n    };\n\n    return (\n      <Host\n        class={{\n          ...this.getIconSizeClass(),\n          disabled: this.disabled || this.loading,\n        }}\n      >\n        <BaseIconButton {...baseButtonProps}></BaseIconButton>\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'mixins/shadow-dom/component';\n\n@mixin ix-spinner($size-name: 'medium', $size: 2rem, $track-size: 4px) {\n  :host {\n    @include ix-component;\n    display: block;\n    position: relative;\n  }\n\n  .#{$size-name} {\n    width: $size;\n    height: $size;\n    min-width: $size;\n    min-height: $size;\n    max-width: $size;\n    max-height: $size;\n    border-radius: 100%;\n    position: relative;\n    animation: rotate 2s linear infinite;\n\n    @keyframes rotate {\n      100% {\n        transform: rotate(360deg);\n      }\n    }\n\n    @keyframes clipMask {\n      0% {\n        clip-path: polygon(50% 50%, 0 0, 0 0, 0 0, 0 0, 0 0);\n      }\n      12.5% {\n        clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 0, 100% 0, 100% 0);\n      }\n      25% {\n        clip-path: polygon(\n          50% 50%,\n          0 0,\n          100% 0,\n          100% 100%,\n          100% 100%,\n          100% 100%\n        );\n      }\n      37.5% {\n        clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 0 100%, 0 100%);\n      }\n      50% {\n        clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 0 100%, 0 0);\n      }\n      62.5% {\n        clip-path: polygon(50% 50%, 100% 0, 100% 0, 100% 100%, 0 100%, 0 0);\n      }\n      75% {\n        clip-path: polygon(\n          50% 50%,\n          100% 100%,\n          100% 100%,\n          100% 100%,\n          0 100%,\n          0 0\n        );\n      }\n      87.5% {\n        clip-path: polygon(50% 50%, 0 100%, 0 100%, 0 100%, 0 100%, 0 0);\n      }\n      100% {\n        clip-path: polygon(50% 50%, 0 0, 0 0, 0 0, 0 0, 0 0);\n      }\n    }\n  }\n\n  .#{$size-name}::after {\n    content: '';\n    box-sizing: border-box;\n    position: absolute;\n    inset: 8.33%;\n    border-radius: 100%;\n    border: $track-size solid\n      var(--ix-button-color, var(--theme-color-soft-text));\n    animation: clipMask 3s linear infinite;\n  }\n\n  .#{$size-name}:not(.hide-track)::before {\n    content: '';\n    box-sizing: border-box;\n    position: absolute;\n    inset: 8.33%;\n    border-radius: 100%;\n    border: $track-size solid var(--theme-color-ghost--hover);\n  }\n\n  .primary::after {\n    border-color: var(--theme-color-dynamic);\n  }\n\n  .primary::before {\n    border-color: var(--theme-color-ghost--hover);\n  }\n}\n\n@include ix-spinner($size-name: 'xx-small', $size: 0.75rem, $track-size: 1px);\n@include ix-spinner($size-name: 'x-small', $size: 1.25rem, $track-size: 2px);\n@include ix-spinner($size-name: 'small', $size: 1.5rem, $track-size: 2px);\n@include ix-spinner($size-name: 'medium', $size: 2rem, $track-size: 2px);\n@include ix-spinner($size-name: 'large', $size: 6rem, $track-size: 4px);\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Element, h, Host, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'ix-spinner',\n  styleUrl: 'spinner.scss',\n  shadow: true,\n})\nexport class Spinner {\n  @Element() hostElement!: HTMLIxSpinnerElement;\n\n  /**\n   * Variant of spinner\n   */\n  @Prop() variant: 'primary' | 'secondary' = 'secondary';\n\n  /**\n   * Size of spinner\n   */\n  @Prop() size: 'xx-small' | 'x-small' | 'small' | 'medium' | 'large' =\n    'medium';\n\n  /**\n   * @internal\n   */\n  @Prop() hideTrack = false;\n\n  render() {\n    return (\n      <Host>\n        <div\n          class={{\n            primary: this.variant === 'primary',\n            [this.size]: true,\n            'hide-track': this.hideTrack,\n          }}\n        ></div>\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport const isHttpUrl = (link: string) => {\n  if (!link) {\n    return false;\n  }\n\n  let url: URL;\n\n  try {\n    url = new URL(link);\n  } catch (e) {\n    return false;\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:';\n};\n\nexport const isSvgDataUrl = (url: string) => {\n  if (!url) {\n    return false;\n  }\n\n  if (typeof url !== 'string') {\n    return false;\n  }\n\n  return url.startsWith('data:image/svg+xml');\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { isHttpUrl, isSvgDataUrl } from './condition-checks';\n\nexport const a11yBoolean = (value: boolean | undefined) =>\n  value ? 'true' : 'false';\n\nconst kebabCaseToUpperCaseSentence = (kebabCase: string) => {\n  const withoutFilledSuffix = kebabCase.replace('-filled', '');\n  const words = withoutFilledSuffix.split('-');\n  const sentence = words\n    .map((word) => {\n      const trimWord = word.trim();\n      const digitLessWord = trimWord.replace(/\\d+/g, '');\n\n      if (digitLessWord.length === 0) {\n        return trimWord;\n      }\n\n      return digitLessWord;\n    })\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n\n  return sentence;\n};\n\nexport const getFallbackLabelFromIconName = (iconName?: string) => {\n  if (!iconName) {\n    return 'Unknown';\n  }\n\n  if (isHttpUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  if (isSvgDataUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  const label = kebabCaseToUpperCaseSentence(iconName);\n\n  if (label.length === 0) {\n    return 'Unknown';\n  }\n\n  return label;\n};\n\nexport const a11yHostAttributes = (\n  hostElement: HTMLElement,\n  ignoreAttributes: A11yAttributeName[] = []\n): Record<A11yAttributeName, string> => {\n  const attributeObject: Record<string, string> = {};\n  a11yAttributes.forEach((attr) => {\n    if (hostElement.hasAttribute(attr)) {\n      const value = hostElement.getAttribute(attr);\n      if (value !== null && !ignoreAttributes.includes(attr)) {\n        attributeObject[attr] = hostElement.getAttribute(attr) ?? '';\n        hostElement.removeAttribute(attr);\n      }\n    }\n  });\n\n  return attributeObject;\n};\n\nexport type A11yAttributeName =\n  | 'role'\n  | 'aria-activedescendant'\n  | 'aria-atomic'\n  | 'aria-autocomplete'\n  | 'aria-braillelabel'\n  | 'aria-brailleroledescription'\n  | 'aria-busy'\n  | 'aria-checked'\n  | 'aria-colcount'\n  | 'aria-colindex'\n  | 'aria-colindextext'\n  | 'aria-colspan'\n  | 'aria-controls'\n  | 'aria-current'\n  | 'aria-describedby'\n  | 'aria-description'\n  | 'aria-details'\n  | 'aria-disabled'\n  | 'aria-errormessage'\n  | 'aria-expanded'\n  | 'aria-flowto'\n  | 'aria-haspopup'\n  | 'aria-hidden'\n  | 'aria-invalid'\n  | 'aria-keyshortcuts'\n  | 'aria-label'\n  | 'aria-labelledby'\n  | 'aria-level'\n  | 'aria-live'\n  | 'aria-multiline'\n  | 'aria-multiselectable'\n  | 'aria-orientation'\n  | 'aria-owns'\n  | 'aria-placeholder'\n  | 'aria-posinset'\n  | 'aria-pressed'\n  | 'aria-readonly'\n  | 'aria-relevant'\n  | 'aria-required'\n  | 'aria-roledescription'\n  | 'aria-rowcount'\n  | 'aria-rowindex'\n  | 'aria-rowindextext'\n  | 'aria-rowspan'\n  | 'aria-selected'\n  | 'aria-setsize'\n  | 'aria-sort'\n  | 'aria-valuemax'\n  | 'aria-valuemin'\n  | 'aria-valuenow'\n  | 'aria-valuetext';\n\nconst a11yAttributes: A11yAttributeName[] = [\n  'role',\n  'aria-activedescendant',\n  'aria-atomic',\n  'aria-autocomplete',\n  'aria-braillelabel',\n  'aria-brailleroledescription',\n  'aria-busy',\n  'aria-checked',\n  'aria-colcount',\n  'aria-colindex',\n  'aria-colindextext',\n  'aria-colspan',\n  'aria-controls',\n  'aria-current',\n  'aria-describedby',\n  'aria-description',\n  'aria-details',\n  'aria-disabled',\n  'aria-errormessage',\n  'aria-expanded',\n  'aria-flowto',\n  'aria-haspopup',\n  'aria-hidden',\n  'aria-invalid',\n  'aria-keyshortcuts',\n  'aria-label',\n  'aria-labelledby',\n  'aria-level',\n  'aria-live',\n  'aria-multiline',\n  'aria-multiselectable',\n  'aria-orientation',\n  'aria-owns',\n  'aria-placeholder',\n  'aria-posinset',\n  'aria-pressed',\n  'aria-readonly',\n  'aria-relevant',\n  'aria-required',\n  'aria-roledescription',\n  'aria-rowcount',\n  'aria-rowindex',\n  'aria-rowindextext',\n  'aria-rowspan',\n  'aria-selected',\n  'aria-setsize',\n  'aria-sort',\n  'aria-valuemax',\n  'aria-valuemin',\n  'aria-valuenow',\n  'aria-valuetext',\n];\n\ntype PartialRecord<K extends A11yAttributeName, T> = {\n  [P in K]?: T;\n};\nexport type A11yAttributes = PartialRecord<A11yAttributeName, string>;\n"],"names":["BaseIconButton","props","h","BaseButton","Object","assign","type","isDanger","variant","toUpperCase","isPrimary","isSecondary","getButtonClasses","outline","ghost","iconOnly","arguments","length","undefined","iconOval","selected","disabled","btn","getSpinnerSize","btnProps","icon","iconSize","children","extraClasses","_a","ariaAttributes","_b","onClick","e","tabindex","_c","tabIndex","class","loading","size","hideTrack","name","color","iconColor","content","concat","alignment","afterContent","IconButton","constructor","hostRef","oval","componentDidLoad","this","submitButton","document","createElement","style","display","hostElement","appendChild","submitButtonElement","dispatchFormEvents","click","getIconSizeClass","render","baseButtonProps","a11yLabel","getFallbackLabelFromIconName","Host","key","Spinner","primary","a11yBoolean","value","iconName","link","url","URL","protocol","isHttpUrl","startsWith","label","replace","split","map","word","trimWord","trim","digitLessWord","charAt","slice","join","a11yHostAttributes","ignoreAttributes","attributeObject","a11yAttributes","forEach","attr","hasAttribute","getAttribute","includes","removeAttribute"],"sourceRoot":""}