{"version":3,"file":"static/js/8917.166f5b19.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/focus.ts","../node_modules/@siemens/ix/dist/esm/src/components/dropdown/dropdown-controller.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/find-element.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/disposable-event-listener.ts","../node_modules/@siemens/ix/dist/esm/src/components/dropdown/dropdown.tsx","../node_modules/@siemens/ix/dist/esm/src/components/dropdown/dropdown.scss?tag=ix-dropdown&encapsulation=shadow"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { addDisposableEventListener } from './disposable-event-listener';\n\nexport class ArrowFocusController {\n  public items: Element[];\n\n  container?: HTMLElement;\n  wrap = false;\n  callback: any;\n\n  private readonly keyListener: () => void;\n\n  constructor(\n    items: any[],\n    container: HTMLElement,\n    callback?: (index: number) => void\n  ) {\n    this.items = items;\n    this.container = container;\n    this.callback = callback;\n    this.keyListener = addDisposableEventListener(\n      container,\n      'keydown',\n      (e: Event) => this.onKeyDown(e as KeyboardEvent)\n    );\n  }\n\n  private getActiveIndex() {\n    if (!document.activeElement) {\n      return -1;\n    }\n    return this.items.indexOf(document.activeElement);\n  }\n\n  private onKeyDown(e: KeyboardEvent) {\n    const activeIndex = this.getActiveIndex();\n\n    if (activeIndex < 0) {\n      return;\n    }\n\n    switch (e.key) {\n      case 'ArrowDown':\n        if (activeIndex < this.items.length - 1) {\n          e.preventDefault();\n          this.callback?.(activeIndex + 1);\n        } else if (this.wrap) {\n          e.preventDefault();\n          this.callback?.(0);\n        }\n        break;\n\n      case 'ArrowUp':\n        {\n          if (activeIndex > 0) {\n            e.preventDefault();\n            this.callback?.(activeIndex - 1);\n          } else if (this.wrap && activeIndex === 0) {\n            e.preventDefault();\n            this.callback?.(this.items.length - 1);\n          }\n        }\n        break;\n    }\n  }\n\n  disconnect() {\n    if (this.keyListener) {\n      this.keyListener();\n    }\n\n    this.container = undefined;\n    this.callback = undefined;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { IxComponent } from '../utils/internal';\nexport type CloseBehavior = 'inside' | 'outside' | 'both' | boolean;\n\nexport interface DropdownInterface extends IxComponent {\n  closeBehavior: CloseBehavior;\n  discoverAllSubmenus: boolean;\n\n  getAssignedSubmenuIds(): string[];\n  getId(): string;\n\n  discoverSubmenu(): void;\n\n  isPresent(): boolean;\n\n  willPresent?(): boolean;\n  willDismiss?(): boolean;\n\n  present(): void;\n  dismiss(): void;\n}\n\nexport function hasDropdownItemWrapperImplemented(\n  item: unknown\n): item is DropdownItemWrapper {\n  return (\n    item !== null &&\n    (item as DropdownItemWrapper).getDropdownItemElement !== undefined &&\n    typeof (item as DropdownItemWrapper).getDropdownItemElement === 'function'\n  );\n}\n\nexport interface DropdownItemWrapper {\n  getDropdownItemElement(): Promise<HTMLIxDropdownItemElement>;\n}\n\ntype SubmenuIds = Record<string, string[]>;\n\nclass DropdownController {\n  private readonly dropdowns: Map<string, DropdownInterface> = new Map<\n    string,\n    DropdownInterface\n  >();\n  private submenuIds: SubmenuIds = {};\n\n  private isWindowListenerActive = false;\n\n  connected(dropdown: DropdownInterface) {\n    if (!this.isWindowListenerActive) {\n      this.addOverlayListeners();\n    }\n    this.dropdowns.set(dropdown.getId(), dropdown);\n\n    if (dropdown.discoverAllSubmenus) {\n      this.discoverSubmenus();\n    }\n  }\n\n  disconnected(dropdown: DropdownInterface) {\n    const id = dropdown.getId();\n    this.removeFromSubmenuIds(id);\n    this.dropdowns.delete(id);\n  }\n\n  removeFromSubmenuIds(id: string) {\n    this.dropdowns.forEach((dropdown) => {\n      const submenuIds = this.submenuIds[dropdown.getId()];\n      if (submenuIds) {\n        const index = submenuIds.indexOf(id);\n        if (index > -1) {\n          submenuIds.splice(index, 1);\n        }\n      }\n    });\n\n    delete this.submenuIds[id];\n  }\n\n  getDropdownById(id: string) {\n    return this.dropdowns.get(id);\n  }\n\n  discoverSubmenus() {\n    this.dropdowns.forEach((dropdown) => {\n      dropdown.discoverSubmenu();\n    });\n  }\n\n  present(dropdown: DropdownInterface) {\n    if (!dropdown.isPresent() && dropdown.willPresent?.()) {\n      this.submenuIds[dropdown.getId()] = dropdown.getAssignedSubmenuIds();\n      dropdown.present();\n    }\n  }\n\n  dismissChildren(uid: string) {\n    const childIds = this.submenuIds[uid] || [];\n    for (const id of childIds) {\n      const dropdown = this.dropdowns.get(id);\n      if (dropdown) {\n        this.dismiss(dropdown);\n      }\n    }\n  }\n\n  dismiss(dropdown: DropdownInterface) {\n    if (dropdown.isPresent() && dropdown.willDismiss?.()) {\n      this.dismissChildren(dropdown.getId());\n      dropdown.dismiss();\n      delete this.submenuIds[dropdown.getId()];\n    }\n  }\n\n  dismissAll(\n    ignoreBehaviorForIds: string[] = [],\n    ignoreRelatedDropdowns = false\n  ) {\n    this.dropdowns.forEach((dropdown) => {\n      const preventClosing =\n        dropdown.closeBehavior === 'inside' || dropdown.closeBehavior === false;\n\n      const shouldIgnore = ignoreBehaviorForIds.includes(dropdown.getId());\n      const path = this.buildComposedPath(dropdown.getId(), new Set<string>());\n\n      if (ignoreBehaviorForIds.length > 0 && ignoreRelatedDropdowns) {\n        let skipRelatedDropdown = false;\n\n        ignoreBehaviorForIds.forEach((id) => {\n          if (path.has(id)) {\n            skipRelatedDropdown = true;\n            return;\n          }\n        });\n\n        if (!skipRelatedDropdown) {\n          return;\n        }\n      }\n\n      if (!shouldIgnore && preventClosing) {\n        return;\n      }\n\n      this.dismiss(dropdown);\n    });\n  }\n\n  dismissOthers(uid: string) {\n    let path = this.buildComposedPath(uid, new Set<string>());\n    path.add(uid);\n\n    this.dropdowns.forEach((dropdown) => {\n      if (\n        dropdown.closeBehavior !== 'inside' &&\n        dropdown.closeBehavior !== false &&\n        !path.has(dropdown.getId())\n      ) {\n        this.dismiss(dropdown);\n      }\n    });\n  }\n\n  pathIncludesTrigger(eventTargets: EventTarget[]) {\n    for (let eventTarget of eventTargets) {\n      if (eventTarget instanceof HTMLElement) {\n        if (eventTarget.hasAttribute('data-ix-dropdown-trigger')) {\n          return eventTarget;\n        }\n      }\n    }\n\n    return;\n  }\n\n  private pathIncludesDropdown(eventTargets: EventTarget[]) {\n    return !!eventTargets.find(\n      (element: EventTarget) =>\n        (element as HTMLElement).tagName === 'IX-DROPDOWN'\n    );\n  }\n\n  private buildComposedPath(id: string, path: Set<string>): Set<string> {\n    if (this.submenuIds[id]) {\n      path.add(id);\n    }\n\n    for (const ruleKey of Object.keys(this.submenuIds)) {\n      if (this.submenuIds[ruleKey].includes(id)) {\n        this.buildComposedPath(ruleKey, path).forEach((key) => path.add(key));\n      }\n    }\n\n    return path;\n  }\n\n  private addOverlayListeners() {\n    this.isWindowListenerActive = true;\n\n    window.addEventListener('click', (event: MouseEvent) => {\n      const hasTrigger = this.pathIncludesTrigger(event.composedPath());\n      const hasDropdown = this.pathIncludesDropdown(event.composedPath());\n\n      if (!hasTrigger && !hasDropdown) {\n        this.dismissAll();\n      }\n    });\n\n    window.addEventListener('keydown', (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        this.dismissAll([...this.dropdowns.keys()]);\n      }\n    });\n  }\n}\n\nexport const dropdownController = new DropdownController();\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Will try to resolve the selector in the light dom, shadow dom or slot\n * @param selector The selector to resolve\n * @param hostElement The element to start the search from\n * @returns Promise with the resolved elements or undefined if not found\n */\nexport async function resolveSelector(\n  selector: string,\n  hostElement?: HTMLElement\n): Promise<HTMLElement[] | undefined> {\n  const elements: HTMLElement[] = Array.from(\n    document.querySelectorAll(selector)\n  );\n\n  if (elements.length > 0) {\n    return Promise.resolve(elements);\n  }\n\n  if (hostElement === undefined) {\n    return Promise.resolve(undefined);\n  }\n\n  const shadowRoot = getRootFor(hostElement);\n\n  if (shadowRoot === undefined || !(shadowRoot instanceof ShadowRoot)) {\n    return Promise.resolve(undefined);\n  }\n\n  const elementsInShadowRoot: HTMLElement[] = Array.from(\n    shadowRoot.querySelectorAll(selector)\n  );\n\n  const elementsInHost: HTMLElement[] = Array.from(\n    shadowRoot.host.querySelectorAll(selector)\n  );\n\n  const elementsInComponent: HTMLElement[] = [\n    ...elementsInHost,\n    ...elementsInShadowRoot,\n  ];\n\n  if (elementsInComponent.length > 0) {\n    return Promise.resolve(elementsInComponent);\n  }\n\n  return Promise.resolve(undefined);\n}\n\n/**\n * Walk up the DOM to find the nearest shadow root\n * @param element The element to get the root for\n * @param parent This will determine how far up the DOM to travel to find the root\n * @returns The root element\n */\nexport function getRootFor(element: HTMLElement, parent = document.body) {\n  if (!element.parentElement && !element.parentNode) {\n    return undefined;\n  }\n\n  if (element.parentNode instanceof ShadowRoot) {\n    return element.parentNode;\n  }\n\n  let currentNode = element.parentElement;\n\n  while (currentNode) {\n    if (currentNode.shadowRoot) {\n      return currentNode.shadowRoot;\n    } else if (currentNode.parentNode instanceof ShadowRoot) {\n      return currentNode.parentNode;\n    }\n\n    currentNode = currentNode.parentElement;\n  }\n\n  return parent;\n}\n\nexport function waitForSelector(\n  selector: string,\n  node = document,\n  hostElement?: HTMLElement\n): Promise<Element> {\n  return new Promise((resolve) => {\n    const waitForElements = () => {\n      resolveSelector(selector, hostElement).then((elements) => {\n        if (elements && elements.length > 0) {\n          resolve(elements[0]);\n          observer?.disconnect();\n        }\n      });\n    };\n\n    waitForElements();\n\n    const observer = new MutationObserver(() => {\n      waitForElements();\n    });\n\n    observer.observe(node.body, {\n      childList: true,\n      subtree: true,\n    });\n  });\n}\n\n/**\n * Find an element by ID or reference\n * @param element The element to find\n * @param hostElement The element to start the search from\n * @returns A promise that will resolve to the element\n */\nexport function findElement(\n  element: string | HTMLElement | Promise<HTMLElement>,\n  hostElement?: HTMLElement\n): Promise<Element> {\n  if (element instanceof Promise) {\n    return element;\n  }\n\n  if (typeof element === 'object') {\n    return Promise.resolve(element);\n  }\n\n  const selector = `#${element}`;\n  return waitForSelector(selector, document, hostElement);\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport type DisposableEventListener = () => void;\n\nexport const addDisposableEventListener = (\n  element: Element | Window | Document,\n  eventType: string,\n  callback: EventListenerOrEventListenerObject\n): DisposableEventListener => {\n  element.addEventListener(eventType, callback);\n\n  return () => {\n    element.removeEventListener(eventType, callback);\n  };\n};\n\nexport const addDisposableEventListenerAsArray = (\n  listener: {\n    element: Element | Window | Document;\n    eventType: string;\n    callback: EventListenerOrEventListenerObject;\n  }[]\n): DisposableEventListener => {\n  const disposables = listener.map(({ callback, element, eventType }) =>\n    addDisposableEventListener(element, eventType, callback)\n  );\n\n  return () => disposables.forEach((dispose) => dispose());\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  autoUpdate,\n  computePosition,\n  ComputePositionConfig,\n  flip,\n  inline,\n  offset,\n  shift,\n} from '@floating-ui/dom';\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  Watch,\n} from '@stencil/core';\nimport { ComponentInterface } from '@stencil/core/internal';\nimport { ArrowFocusController } from '../utils/focus';\nimport {\n  CloseBehavior,\n  dropdownController,\n  DropdownInterface,\n  hasDropdownItemWrapperImplemented,\n} from './dropdown-controller';\nimport { AlignedPlacement } from './placement';\nimport { findElement } from '../utils/find-element';\nimport {\n  addDisposableEventListener,\n  DisposableEventListener,\n} from '../utils/disposable-event-listener';\nimport { ElementReference } from '../utils/element-reference';\n\nlet sequenceId = 0;\n\n@Component({\n  tag: 'ix-dropdown',\n  styleUrl: 'dropdown.scss',\n  shadow: true,\n})\nexport class Dropdown implements ComponentInterface, DropdownInterface {\n  @Element() hostElement!: HTMLIxDropdownElement;\n\n  /**\n   * Suppress the automatic placement of the dropdown.\n   */\n  @Prop() suppressAutomaticPlacement = false;\n\n  /**\n   * Show dropdown\n   */\n  @Prop({ mutable: true, reflect: true }) show = false;\n\n  /**\n   * Define an element that triggers the dropdown.\n   * A trigger can either be a string that will be interpreted as id attribute or a DOM element.\n   */\n  @Prop() trigger?: ElementReference;\n\n  /**\n   * Define an anchor element\n   */\n  @Prop() anchor?: ElementReference;\n\n  /**\n   * Controls if the dropdown will be closed in response to a click event depending on the position of the event relative to the dropdown.\n   * If the dropdown is a child of another one, it will be closed with the parent, regardless of its own close behavior.\n   */\n  @Prop() closeBehavior: CloseBehavior = 'both';\n\n  /**\n   * Placement of the dropdown\n   */\n  @Prop() placement: AlignedPlacement = 'bottom-start';\n\n  /**\n   * Position strategy\n   */\n  @Prop() positioningStrategy: 'absolute' | 'fixed' = 'fixed';\n\n  /**\n   * An optional header shown at the top of the dropdown\n   */\n  @Prop() header?: string;\n\n  /**\n   * Move dropdown along main axis of alignment\n   *\n   * @internal\n   */\n  @Prop() offset?: {\n    mainAxis?: number;\n    crossAxis?: number;\n    alignmentAxis?: number;\n  };\n\n  /**\n   * @internal\n   */\n  @Prop() overwriteDropdownStyle?: (delegate: {\n    dropdownRef: HTMLElement;\n    triggerRef?: HTMLElement;\n  }) => Promise<Partial<CSSStyleDeclaration>>;\n\n  /**\n   * @internal\n   * If initialization of this dropdown is expected to be deferred submenu discovery will have to be re-run globally by the controller.\n   * This property indicates the need for that to the controller.\n   */\n  @Prop() discoverAllSubmenus = false;\n\n  /** @internal */\n  @Prop() ignoreRelatedSubmenu = false;\n\n  /** @internal */\n  @Prop() suppressOverflowBehavior = false;\n\n  /**\n   * Fire event after visibility of dropdown has changed\n   */\n  @Event() showChanged!: EventEmitter<boolean>;\n\n  private autoUpdateCleanup?: () => void;\n\n  private triggerElement?: Element;\n  private anchorElement?: Element;\n  private arrowFocusController?: ArrowFocusController;\n\n  private localUId = `dropdown-${sequenceId++}`;\n  private assignedSubmenu: string[] = [];\n\n  private itemObserver? = new MutationObserver(() => {\n    if (this.arrowFocusController) {\n      this.arrowFocusController.items = this.dropdownItems;\n    }\n  });\n\n  connectedCallback(): void {\n    dropdownController.connected(this);\n\n    if (this.trigger != undefined) {\n      this.registerListener(this.trigger);\n    }\n  }\n\n  @Listen('ix-assign-sub-menu')\n  cacheSubmenuId(event: CustomEvent<string>) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const { detail } = event;\n\n    if (this.assignedSubmenu.indexOf(detail) === -1) {\n      this.assignedSubmenu.push(detail);\n    }\n  }\n\n  disconnectedCallback() {\n    dropdownController.dismiss(this);\n    dropdownController.disconnected(this);\n\n    if (this.arrowFocusController) {\n      this.arrowFocusController?.disconnect();\n      this.arrowFocusController = undefined;\n    }\n\n    if (this.itemObserver) {\n      this.itemObserver.disconnect();\n      this.itemObserver = undefined;\n    }\n\n    if (this.disposeClickListener) {\n      this.disposeClickListener();\n      this.disposeClickListener = undefined;\n    }\n\n    if (this.disposeKeyListener) {\n      this.disposeKeyListener();\n      this.disposeKeyListener = undefined;\n    }\n\n    if (this.autoUpdateCleanup) {\n      this.autoUpdateCleanup();\n      this.autoUpdateCleanup = undefined;\n    }\n  }\n\n  getAssignedSubmenuIds() {\n    return this.assignedSubmenu;\n  }\n\n  isPresent() {\n    return this.show;\n  }\n\n  present() {\n    this.show = true;\n  }\n\n  dismiss() {\n    this.show = false;\n  }\n\n  getId() {\n    return this.localUId;\n  }\n\n  willDismiss() {\n    const { defaultPrevented } = this.showChanged.emit(false);\n    return !defaultPrevented;\n  }\n\n  willPresent() {\n    const { defaultPrevented } = this.showChanged.emit(true);\n    return !defaultPrevented;\n  }\n\n  get dropdownItems() {\n    return Array.from(this.hostElement.querySelectorAll('ix-dropdown-item'));\n  }\n\n  get slotElement() {\n    return this.hostElement.shadowRoot!.querySelector('slot');\n  }\n\n  private disposeClickListener?: DisposableEventListener;\n  private disposeKeyListener?: DisposableEventListener;\n\n  private addEventListenersFor() {\n    this.disposeClickListener?.();\n    this.disposeKeyListener?.();\n\n    const toggleController = () => {\n      if (!this.isPresent()) {\n        dropdownController.present(this);\n      } else {\n        dropdownController.dismiss(this);\n      }\n\n      dropdownController.dismissOthers(this.getId());\n    };\n\n    if (!this.triggerElement) {\n      return;\n    }\n\n    this.disposeClickListener = addDisposableEventListener(\n      this.triggerElement,\n      'click',\n      (event: Event) => {\n        if (!event.defaultPrevented) {\n          toggleController();\n        }\n      }\n    );\n\n    this.triggerElement?.setAttribute(\n      'data-ix-dropdown-trigger',\n      this.localUId\n    );\n  }\n\n  /** @internal */\n  @Method()\n  async discoverSubmenu() {\n    this.triggerElement?.dispatchEvent(\n      new CustomEvent('ix-assign-sub-menu', {\n        bubbles: true,\n        composed: true,\n        cancelable: true,\n        detail: this.localUId,\n      })\n    );\n  }\n\n  private registerKeyListener() {\n    if (!this.triggerElement) {\n      return;\n    }\n\n    this.disposeKeyListener = addDisposableEventListener(\n      this.triggerElement,\n      'keydown',\n      ((event: KeyboardEvent) => {\n        if (event.key !== 'ArrowDown') {\n          return;\n        }\n\n        if (document.activeElement !== this.triggerElement) {\n          return;\n        }\n\n        dropdownController.present(this);\n\n        setTimeout(() => {\n          this.focusDropdownItem(0);\n        });\n      }) as EventListener\n    );\n  }\n\n  private async registerListener(element: ElementReference) {\n    this.triggerElement = await this.resolveElement(element);\n    if (this.triggerElement) {\n      this.addEventListenersFor();\n      this.discoverSubmenu();\n    }\n  }\n\n  private async resolveElement(element: ElementReference) {\n    const el = await findElement(element);\n\n    return this.checkForSubmenuAnchor(el);\n  }\n\n  private async checkForSubmenuAnchor(element?: Element) {\n    if (!element) {\n      return undefined;\n    }\n\n    if (hasDropdownItemWrapperImplemented(element)) {\n      const dropdownItem = await element.getDropdownItemElement();\n      dropdownItem.isSubMenu = true;\n      this.hostElement.style.zIndex = `var(--theme-z-index-dropdown)`;\n    }\n\n    if (element.tagName === 'IX-DROPDOWN-ITEM') {\n      (element as HTMLIxDropdownItemElement).isSubMenu = true;\n      this.hostElement.style.zIndex = `var(--theme-z-index-dropdown)`;\n    }\n\n    return element;\n  }\n\n  private async resolveAnchorElement() {\n    if (this.anchor) {\n      this.anchorElement = await this.resolveElement(this.anchor);\n    } else if (this.trigger) {\n      this.anchorElement = await this.resolveElement(this.trigger);\n    }\n  }\n\n  @Watch('show')\n  async changedShow(newShow: boolean) {\n    if (newShow) {\n      await this.resolveAnchorElement();\n\n      if (this.anchorElement) {\n        this.applyDropdownPosition();\n      }\n\n      this.arrowFocusController = new ArrowFocusController(\n        this.dropdownItems,\n        this.hostElement,\n        (index) => this.focusDropdownItem(index)\n      );\n\n      this.itemObserver?.observe(this.hostElement, {\n        childList: true,\n        subtree: true,\n      });\n\n      this.registerKeyListener();\n    } else {\n      this.destroyAutoUpdate();\n      this.arrowFocusController?.disconnect();\n      this.itemObserver?.disconnect();\n      this.disposeKeyListener?.();\n    }\n  }\n\n  @Watch('trigger')\n  changedTrigger(newTriggerValue: ElementReference) {\n    this.registerListener(newTriggerValue);\n  }\n\n  private destroyAutoUpdate() {\n    if (this.autoUpdateCleanup) {\n      this.autoUpdateCleanup();\n      this.autoUpdateCleanup = undefined;\n    }\n  }\n\n  private isAnchorSubmenu(): boolean {\n    if (!hasDropdownItemWrapperImplemented(this.anchorElement)) {\n      // Is no official dropdown-item, but check if any dropdown-item\n      // is placed somewhere up the DOM\n      return !!this.anchorElement?.closest('ix-dropdown-item');\n    }\n\n    return true;\n  }\n\n  private async applyDropdownPosition() {\n    if (!this.show) {\n      return;\n    }\n    if (!this.anchorElement) {\n      return;\n    }\n    const isSubmenu = this.isAnchorSubmenu();\n\n    let positionConfig: Partial<ComputePositionConfig> = {\n      strategy: this.positioningStrategy,\n      middleware: [],\n    };\n\n    if (!this.suppressAutomaticPlacement) {\n      positionConfig.middleware?.push(\n        flip({ fallbackStrategy: 'initialPlacement' })\n      );\n    }\n\n    positionConfig.placement = isSubmenu ? 'right-start' : this.placement;\n\n    positionConfig.middleware = [\n      ...(positionConfig.middleware?.filter(Boolean) || []),\n      inline(),\n      shift(),\n    ];\n\n    if (this.offset) {\n      positionConfig.middleware.push(offset(this.offset));\n    }\n\n    this.destroyAutoUpdate();\n\n    if (!this.anchorElement) {\n      return;\n    }\n\n    this.autoUpdateCleanup = autoUpdate(\n      this.anchorElement,\n      this.hostElement,\n      async () => {\n        if (this.anchorElement) {\n          const computeResponse = await computePosition(\n            this.anchorElement,\n            this.hostElement,\n            positionConfig\n          );\n          Object.assign(this.hostElement.style, {\n            top: '0',\n            left: '0',\n            transform: `translate(${Math.round(\n              computeResponse.x\n            )}px,${Math.round(computeResponse.y)}px)`,\n          });\n        }\n        if (this.overwriteDropdownStyle) {\n          const overwriteStyle = await this.overwriteDropdownStyle({\n            dropdownRef: this.hostElement,\n            triggerRef: this.triggerElement as HTMLElement,\n          });\n\n          Object.assign(this.hostElement.style, overwriteStyle);\n        }\n      },\n      {\n        ancestorResize: true,\n        ancestorScroll: true,\n        elementResize: true,\n      }\n    );\n  }\n\n  private focusDropdownItem(index: number) {\n    requestAnimationFrame(() => {\n      const button =\n        this.dropdownItems[index]?.shadowRoot?.querySelector('button');\n\n      if (button) {\n        button.focus();\n      }\n    });\n  }\n\n  async componentDidLoad() {\n    if (!this.trigger) {\n      return;\n    }\n\n    this.changedTrigger(this.trigger);\n  }\n\n  async componentDidRender() {\n    await this.applyDropdownPosition();\n    await this.resolveAnchorElement();\n  }\n\n  private isTriggerElement(element: HTMLElement) {\n    const trigger = !!element.hasAttribute('data-ix-dropdown-trigger');\n\n    return trigger;\n  }\n\n  private onDropdownClick(event: PointerEvent) {\n    const target = dropdownController.pathIncludesTrigger(event.composedPath());\n    if (target) {\n      if (target !== this.triggerElement) {\n        event.preventDefault();\n      }\n\n      if (this.isTriggerElement(target)) {\n        if (this.closeBehavior === 'outside') {\n          event.preventDefault();\n        }\n        return;\n      }\n    }\n\n    if (\n      !event.defaultPrevented &&\n      (this.closeBehavior === 'inside' || this.closeBehavior === 'both')\n    ) {\n      dropdownController.dismissAll([this.getId()], this.ignoreRelatedSubmenu);\n      return;\n    }\n\n    dropdownController.dismissOthers(this.getId());\n  }\n\n  /**\n   * Update position of dropdown\n   */\n  @Method()\n  async updatePosition() {\n    this.applyDropdownPosition();\n  }\n\n  render() {\n    return (\n      <Host\n        data-ix-dropdown={this.localUId}\n        class={{\n          'dropdown-menu': true,\n          show: this.show,\n          overflow: !this.suppressOverflowBehavior,\n        }}\n        style={{\n          margin: '0',\n          minWidth: '0px',\n          position: this.positioningStrategy,\n        }}\n        role=\"list\"\n        onClick={(event: PointerEvent) => this.onDropdownClick(event)}\n      >\n        <div style={{ display: 'contents' }}>\n          {this.header && <div class=\"dropdown-header\">{this.header}</div>}\n          {this.show && <slot></slot>}\n        </div>\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n\n@import 'legacy/mixins/fonts';\n@import 'mixins/text-truncation';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  background-color: var(--theme-color-2);\n  border-radius: var(--theme-default-border-radius);\n  @include ix-component;\n  min-width: 0px;\n  z-index: var(--theme-z-index-dropdown);\n  box-shadow: var(--theme-shadow-4);\n\n  padding: 0.25rem 0px;\n\n  .dropdown-header {\n    display: flex;\n    align-items: center;\n    height: $large-control-height;\n    color: var(--theme-menu-header--color);\n    padding: 0 $default-space;\n  }\n}\n\n:host(.overflow) {\n  max-height: 50vh;\n  overflow-y: auto;\n}\n\n:host(:not(.show)) {\n  display: none;\n}\n"],"names":["ArrowFocusController","constructor","items","container","callback","wrap","this","keyListener","addDisposableEventListener","e","onKeyDown","getActiveIndex","document","activeElement","indexOf","activeIndex","key","length","preventDefault","_a","call","_b","_c","_d","disconnect","undefined","hasDropdownItemWrapperImplemented","item","getDropdownItemElement","dropdownController","dropdowns","Map","submenuIds","isWindowListenerActive","connected","dropdown","addOverlayListeners","set","getId","discoverAllSubmenus","discoverSubmenus","disconnected","id","removeFromSubmenuIds","delete","forEach","index","splice","getDropdownById","get","discoverSubmenu","present","isPresent","willPresent","getAssignedSubmenuIds","dismissChildren","uid","childIds","dismiss","willDismiss","dismissAll","ignoreBehaviorForIds","arguments","ignoreRelatedDropdowns","preventClosing","closeBehavior","shouldIgnore","includes","path","buildComposedPath","Set","skipRelatedDropdown","has","dismissOthers","add","pathIncludesTrigger","eventTargets","eventTarget","HTMLElement","hasAttribute","pathIncludesDropdown","find","element","tagName","ruleKey","Object","keys","window","addEventListener","event","hasTrigger","composedPath","hasDropdown","async","resolveSelector","selector","hostElement","elements","Array","from","querySelectorAll","Promise","resolve","shadowRoot","parent","body","parentElement","parentNode","ShadowRoot","currentNode","getRootFor","elementsInShadowRoot","elementsInComponent","host","findElement","node","waitForElements","then","observer","MutationObserver","observe","childList","subtree","waitForSelector","concat","eventType","removeEventListener","addDisposableEventListenerAsArray","listener","disposables","map","_ref","dispose","sequenceId","Dropdown","hostRef","suppressAutomaticPlacement","show","placement","positioningStrategy","ignoreRelatedSubmenu","suppressOverflowBehavior","localUId","assignedSubmenu","itemObserver","arrowFocusController","dropdownItems","connectedCallback","trigger","registerListener","cacheSubmenuId","stopImmediatePropagation","detail","push","disconnectedCallback","disposeClickListener","disposeKeyListener","autoUpdateCleanup","defaultPrevented","showChanged","emit","slotElement","querySelector","addEventListenersFor","toggleController","triggerElement","setAttribute","dispatchEvent","CustomEvent","bubbles","composed","cancelable","registerKeyListener","setTimeout","focusDropdownItem","resolveElement","el","checkForSubmenuAnchor","isSubMenu","style","zIndex","resolveAnchorElement","anchor","anchorElement","changedShow","newShow","applyDropdownPosition","destroyAutoUpdate","changedTrigger","newTriggerValue","isAnchorSubmenu","closest","isSubmenu","positionConfig","strategy","middleware","flip","fallbackStrategy","filter","Boolean","inline","shift","offset","autoUpdate","computeResponse","computePosition","assign","top","left","transform","Math","round","x","y","overwriteDropdownStyle","overwriteStyle","dropdownRef","triggerRef","ancestorResize","ancestorScroll","elementResize","requestAnimationFrame","button","focus","componentDidLoad","componentDidRender","isTriggerElement","onDropdownClick","target","updatePosition","render","h","Host","class","overflow","margin","minWidth","position","role","onClick","display","header"],"sourceRoot":""}