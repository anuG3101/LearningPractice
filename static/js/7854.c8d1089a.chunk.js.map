{"version":3,"file":"static/js/7854.c8d1089a.chunk.js","mappings":"4GAgBM,SAAUA,EACdC,GAEA,IAAIC,EAEAC,EADAC,EAAiB,IAAIC,SAAYC,GAASJ,EAAUI,IAGxD,MAAMC,EAAkBC,SACVC,IAARD,IAGJL,EAAWI,EAA8BJ,QAAUK,EAC7B,OAAtBP,QAAsB,IAAtBA,GAAAA,EAAyBO,GAClB,OAAPN,QAAO,IAAPA,GAAAA,EAAUM,KAUZ,OAPAD,EAAeJ,QAAUA,EAEzBI,EAAeG,eAAiBC,gBACxBP,EACCD,GAGFI,CACT,C,2GCxCA,MCsBaK,EAAc,MAL3BC,WAAAA,CAAAC,I,eAWU,KAAOC,QAA0B,UAKjC,KAAOC,SAAG,EAKV,KAAKC,OAAG,EAKR,KAAQC,UAAG,EAeX,KAAaC,cAA4C,OAOhD,KAAcC,gBAAGpB,EAAAA,EAAAA,IAwEnC,CAtESqB,WAAAA,GACN,OACEC,EAAAA,EAAAA,GACE,OAAAC,MAAO,CACLC,UAAU,EACVC,KAAqB,KAAfC,KAAKC,MACXC,QAA0B,YAAjBF,KAAKX,QACdc,UAA4B,cAAjBH,KAAKX,QAChBE,MAAOS,KAAKT,MACZD,QAASU,KAAKV,QACdE,SAAUQ,KAAKR,W,CAMvBY,MAAAA,GACE,OACER,EAAAA,EAAAA,GAACS,EAAAA,EAAI,CAAAC,IAAA,2CACHT,MAAO,CACLL,SAAUQ,KAAKR,UAEjBV,IAAKkB,KAAKN,iBAEVE,EAAAA,EAAAA,GAAA,OAAAU,IAAA,2CAAKT,MAAM,mBACRG,KAAKC,OACJL,EAAAA,EAAAA,GACE,aAAAP,QAASW,KAAKX,QACdC,QAASU,KAAKV,QACdC,MAAOS,KAAKT,MACZC,SAAUQ,KAAKR,SACfe,UAAU,UAEVX,EAAAA,EAAAA,GAAK,OAAAC,MAAO,WACTG,KAAKQ,MACJZ,EAAAA,EAAAA,GACE,WAAAa,KAAMT,KAAKQ,KACXE,KAAK,KACLb,MAAO,kBAEP,MACJD,EAAAA,EAAAA,GAAA,OAAKC,MAAO,gBAAiBG,KAAKC,QAClCL,EAAAA,EAAAA,GAAA,WAASa,KAAME,EAAAA,EAAsBD,KAAK,UAI9Cd,EAAAA,EAAAA,GAAA,YACEA,EAAAA,EAAAA,GAAA,kBACEY,KAAMR,KAAKQ,KACXnB,QAASW,KAAKX,QACdC,QAASU,KAAKV,QACdC,MAAOS,KAAKT,MACZC,SAAUQ,KAAKR,WAEhBQ,KAAKL,iBAKZC,EAAAA,EAAAA,GACE,eAAAU,IAAA,2CAAAT,MAAM,WACNe,QAASZ,KAAKN,eAAeV,iBAC7B6B,UAAWb,KAAKa,UAChBpB,cAAeO,KAAKP,gBAEpBG,EAAAA,EAAAA,GAAa,QAAAU,IAAA,8C,iDDpIG,21E","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/make-ref.ts","../node_modules/@siemens/ix/dist/esm/src/components/dropdown-button/dropdown-button.scss?tag=ix-dropdown-button&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/dropdown-button/dropdown-button.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport type MakeRef<T> = {\n  (ref: T | undefined | null): void;\n  current: T | null;\n  waitForCurrent(): Promise<T>;\n};\n\ntype Resolve<T> = (value: T) => void;\n\nexport function makeRef<T>(\n  currentChangedCallback?: (element: T) => void\n): MakeRef<T> {\n  let resolve: Resolve<T> | undefined = undefined;\n  let currentPromise = new Promise<T>((res) => (resolve = res));\n  let current: T | undefined = undefined;\n\n  const setRefFunction = (ref: T | undefined) => {\n    if (ref === undefined) {\n      return;\n    }\n    current = (setRefFunction as MakeRef<T>).current = ref;\n    currentChangedCallback?.(ref);\n    resolve?.(ref);\n  };\n\n  setRefFunction.current = current as T | null;\n\n  setRefFunction.waitForCurrent = async () => {\n    await currentPromise;\n    return current;\n  };\n\n  return setRefFunction as MakeRef<T>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'common-variables';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  display: inline-block;\n  position: relative;\n  height: $x-large-space;\n  width: auto;\n\n  .hide {\n    display: none;\n  }\n\n  .dropdown-button {\n    display: block;\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .dropdown-button > ix-button {\n    width: 100%;\n    height: 100%;\n  }\n\n  .dropdown-button .button-label {\n    margin-right: auto;\n    min-width: 0px;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  .dropdown-button .dropdown-icon {\n    margin-right: 0.25rem;\n  }\n\n  .triangle {\n    position: absolute;\n    margin-inline-start: 1.5625rem;\n    margin-block-start: -0.4375rem;\n    border-right: 0 solid transparent;\n    border-left: 4px solid transparent;\n    border-top: 0 solid transparent;\n    border-bottom: 4px solid;\n    color: var(--theme-btn-primary--color);\n  }\n\n  .triangle.primary {\n    &.ghost {\n      color: var(--theme-btn-invisible-primary--color);\n    }\n\n    &.outline {\n      color: var(--theme-btn-outline-primary--color);\n    }\n\n    &.ghost.disabled {\n      color: var(--theme-btn-invisible-primary--color--disabled);\n    }\n\n    &.outline.disabled {\n      color: var(--theme-btn-outline-primary--color--disabled);\n    }\n\n    &.disabled {\n      color: var(--theme-btn-primary--color--disabled);\n    }\n  }\n\n  .triangle.secondary {\n    &.ghost {\n      color: var(--theme-btn-invisible-secondary--color);\n    }\n\n    &.outline {\n      color: var(--theme-btn-outline-secondary--color);\n    }\n\n    &.ghost.disabled {\n      color: var(--theme-btn-invisible-secondary--color--disabled);\n    }\n\n    &.outline.disabled {\n      color: var(--theme-btn-outline-secondary--color--disabled);\n    }\n\n    &.disabled {\n      color: var(--theme-btn-secondary--color--disabled);\n    }\n  }\n\n  .content {\n    display: flex;\n    align-items: center;\n  }\n}\n\n:host(.disabled) {\n  pointer-events: none;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Element, h, Host, Prop } from '@stencil/core';\nimport { ButtonVariant } from '../button/button';\nimport { AlignedPlacement } from '../dropdown/placement';\nimport { iconChevronDownSmall } from '@siemens/ix-icons/icons';\nimport { makeRef } from '../utils/make-ref';\n\nexport type DropdownButtonVariant = ButtonVariant;\n\n@Component({\n  tag: 'ix-dropdown-button',\n  styleUrl: 'dropdown-button.scss',\n  shadow: true,\n})\nexport class DropdownButton {\n  @Element() hostElement!: HTMLIxDropdownButtonElement;\n\n  /**\n   * Button variant\n   */\n  @Prop() variant: DropdownButtonVariant = 'primary';\n\n  /**\n   * Outline button\n   */\n  @Prop() outline = false;\n\n  /**\n   * Button with no background or outline\n   */\n  @Prop() ghost = false;\n\n  /**\n   * Disable button\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Set label\n   */\n  @Prop() label?: string;\n\n  /**\n   * Button icon\n   */\n  @Prop() icon?: string;\n\n  /**\n   * Controls if the dropdown will be closed in response to a click event depending on the position of the event relative to the dropdown.\n   */\n  @Prop() closeBehavior: 'inside' | 'outside' | 'both' | boolean = 'both';\n\n  /**\n   * Placement of the dropdown\n   */\n  @Prop() placement?: AlignedPlacement;\n\n  private readonly dropdownAnchor = makeRef<HTMLElement>();\n\n  private getTriangle() {\n    return (\n      <div\n        class={{\n          triangle: true,\n          hide: this.label !== '',\n          primary: this.variant === 'primary',\n          secondary: this.variant === 'secondary',\n          ghost: this.ghost,\n          outline: this.outline,\n          disabled: this.disabled,\n        }}\n      ></div>\n    );\n  }\n\n  render() {\n    return (\n      <Host\n        class={{\n          disabled: this.disabled,\n        }}\n        ref={this.dropdownAnchor}\n      >\n        <div class=\"dropdown-button\">\n          {this.label ? (\n            <ix-button\n              variant={this.variant}\n              outline={this.outline}\n              ghost={this.ghost}\n              disabled={this.disabled}\n              alignment=\"start\"\n            >\n              <div class={'content'}>\n                {this.icon ? (\n                  <ix-icon\n                    name={this.icon}\n                    size=\"24\"\n                    class={'dropdown-icon'}\n                  ></ix-icon>\n                ) : null}\n                <div class={'button-label'}>{this.label}</div>\n                <ix-icon name={iconChevronDownSmall} size=\"24\"></ix-icon>\n              </div>\n            </ix-button>\n          ) : (\n            <div>\n              <ix-icon-button\n                icon={this.icon}\n                variant={this.variant}\n                outline={this.outline}\n                ghost={this.ghost}\n                disabled={this.disabled}\n              ></ix-icon-button>\n              {this.getTriangle()}\n            </div>\n          )}\n        </div>\n\n        <ix-dropdown\n          class=\"dropdown\"\n          trigger={this.dropdownAnchor.waitForCurrent()}\n          placement={this.placement}\n          closeBehavior={this.closeBehavior}\n        >\n          <slot></slot>\n        </ix-dropdown>\n      </Host>\n    );\n  }\n}\n"],"names":["makeRef","currentChangedCallback","resolve","current","currentPromise","Promise","res","setRefFunction","ref","undefined","waitForCurrent","async","DropdownButton","constructor","hostRef","variant","outline","ghost","disabled","closeBehavior","dropdownAnchor","getTriangle","h","class","triangle","hide","this","label","primary","secondary","render","Host","key","alignment","icon","name","size","iconChevronDownSmall","trigger","placement"],"sourceRoot":""}