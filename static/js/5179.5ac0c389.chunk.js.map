{"version":3,"file":"static/js/5179.5ac0c389.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/context.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/application-layout/context.ts","../node_modules/@siemens/ix/dist/esm/src/components/map-navigation/map-navigation.scss?tag=ix-map-navigation&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/map-navigation/map-navigation.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TypedEvent } from './typed-event';\n\n/**\n * A Context object defines an optional initial value for a Context, as well as a name identifier for debugging purposes.\n */\nexport type Context<T> = {\n  name: string;\n  initialValue?: T;\n};\n\n/**\n * An unknown context type\n */\nexport type UnknownContext = Context<unknown>;\n\n/**\n * A helper type which can extract a Context value type from a Context type\n */\nexport type ContextType<T extends UnknownContext> =\n  T extends Context<infer Y> ? Y : never;\n\n/**\n * A function which creates a Context value object\n */\nexport function createContext<T>(\n  name: string,\n  initialValue?: T\n): Readonly<Context<T>> {\n  return {\n    name,\n    initialValue,\n  };\n}\n\n/**\n * A callback which is provided by a context requester and is called with the value satisfying the request.\n * This callback can be called multiple times by context providers as the requested value is changed.\n */\nexport type ContextCallback<ValueType> = (\n  value: ValueType,\n  unsubscribe?: () => void\n) => void;\n\n/**\n * An event fired by a context requester to signal it desires a named context.\n *\n * A provider should inspect the `context` property of the event to determine if it has a value that can\n * satisfy the request, calling the `callback` with the requested value if so.\n *\n * If the requested context event contains a truthy `subscribe` value, then a provider can call the callback\n * multiple times if the value is changed, if this is the case the provider should pass an `unsubscribe`\n * function to the callback which requesters can invoke to indicate they no longer wish to receive these updates.\n */\nexport class ContextEvent<T extends UnknownContext> extends Event {\n  public constructor(\n    public readonly context: T,\n    public readonly callback: ContextCallback<ContextType<T>>,\n    public readonly subscribe?: boolean\n  ) {\n    super('context-request', { bubbles: true, composed: true });\n  }\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    /**\n     * A 'context-request' event can be emitted by any element which desires\n     * a context value to be injected by an external provider.\n     */\n    'context-request': ContextEvent<UnknownContext>;\n  }\n}\n\nexport type ContextConsumerSubscription = {\n  unsubscribe: () => void;\n};\n\nexport function useContextConsumer<\n  T extends HTMLElement,\n  C extends UnknownContext,\n>(\n  hostElement: T,\n  context: C,\n  onContextReceived: (\n    context: ContextType<C>,\n    unsubscribe?: () => void\n  ) => void,\n  subscribe?: boolean\n): ContextConsumerSubscription {\n  let _unsubscribe: (() => void) | undefined;\n  hostElement.dispatchEvent(\n    new ContextEvent(\n      context,\n      (ctx, unSub) => {\n        onContextReceived(ctx, unSub);\n        _unsubscribe = unSub;\n      },\n      subscribe\n    )\n  );\n\n  return {\n    unsubscribe: () => {\n      if (_unsubscribe) {\n        _unsubscribe();\n      }\n    },\n  };\n}\nexport type ContextProvider<C extends Context<{}> = Context<any>> = {\n  emit: (context: ContextType<C>) => void;\n};\n\nexport function useContextProvider<\n  X extends {},\n  C extends Context<X>,\n  T extends HTMLElement = HTMLElement,\n>(\n  hostElement: T,\n  context: C,\n  contextPayload?: ContextType<C>\n): ContextProvider<C> {\n  const requestContext = new TypedEvent<ContextEvent<C>>();\n  const updateContext = new TypedEvent<ContextType<C>>();\n\n  const requests = new Set<ContextEvent<UnknownContext>>();\n\n  hostElement.addEventListener('context-request', (event: Event) => {\n    const requestContextEvent = event as ContextEvent<C>;\n    if (requestContextEvent?.context.name !== context.name) {\n      return;\n    }\n\n    requestContextEvent.stopPropagation();\n\n    if (requestContextEvent.subscribe) {\n      requests.add(requestContextEvent);\n    }\n    requestContext.emit(requestContextEvent);\n\n    if (contextPayload) {\n      requestContextEvent.callback(contextPayload, () => {\n        requests.delete(requestContextEvent);\n      });\n    }\n  });\n\n  updateContext.on((context: ContextType<C>) => {\n    requests.forEach((r) =>\n      r.callback(context, () => {\n        requests.delete(r);\n      })\n    );\n  });\n\n  return {\n    emit: (context: ContextType<C>) => {\n      updateContext.emit(context);\n    },\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { createContext } from '../context';\nimport { type LiteralStringUnion } from '../type-helper';\n\nexport const closestIxMenu = (element: Element) => {\n  const menuElement = element.closest('ix-menu');\n  return menuElement;\n};\n\nexport type AppSwitchConfigurationTarget = LiteralStringUnion<\n  '_self' | '_blank' | '_parent' | '_top'\n>;\n\nexport type AppSwitchConfiguration = {\n  currentAppId: string;\n  apps: {\n    id: string;\n    name: string;\n    description: string;\n    url: string;\n    target: AppSwitchConfigurationTarget;\n    iconSrc: string;\n  }[];\n  i18nAppSwitch?: string;\n  i18nLoadingApps?: string;\n};\n\nexport const ApplicationLayoutContext = createContext<{\n  hideHeader: boolean;\n  host: 'basic-navigation' | 'map-navigation' | null;\n  appSwitchConfig?: AppSwitchConfiguration;\n  sidebar?: boolean;\n}>('application-layout-context', {\n  hideHeader: false,\n  host: null,\n  sidebar: false,\n});\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'legacy/mixins/fonts';\n@import 'mixins/text-truncation';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  $appHeaderHeight: 3.5rem;\n  $appHeaderGradientHeight: 4rem;\n  $navHeaderHeight: 11.5rem;\n  $sidebarWidth: 29.75rem;\n\n  display: flex;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  .map-nav {\n    display: flex;\n    margin-left: 3.25rem;\n    position: relative;\n    height: 100%;\n    flex-grow: 1;\n    overflow: hidden;\n  }\n\n  .map-nav-sidebar {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: $sidebarWidth;\n    max-width: $sidebarWidth;\n    min-width: $sidebarWidth;\n    height: 100%;\n    left: 4rem;\n    background-color: var(--theme-map-navigation--background);\n    border-inline-end: 0.125rem solid\n      var(--theme-map-navigation-separator--background);\n    z-index: 99;\n\n    &.display-none {\n      display: none;\n    }\n  }\n\n  .map-nav-sidebar-content {\n    align-items: center;\n    position: relative;\n    overflow: auto;\n    height: 100%;\n    width: 100%;\n\n    .map-nav-sidebar-static-content {\n      @include text-h2;\n      display: flex;\n      justify-content: space-between;\n      margin-top: 0.437rem;\n      margin-bottom: 0.812rem;\n      margin-left: $default-space;\n      margin-right: $default-space;\n    }\n  }\n\n  .map-nav-header {\n    display: flex;\n    position: relative;\n    align-items: center;\n    height: $appHeaderHeight;\n    min-height: $appHeaderHeight;\n    width: 100%;\n\n    .map-nav-header-brand {\n      background-color: var(--theme-map-navigation-background);\n\n      padding-left: $default-space;\n      padding-right: $default-space;\n      padding-bottom: 0.625rem;\n      height: 100%;\n      width: 100%;\n      --theme-app-header--color: var(--theme-map-navigation-header--color);\n      --theme-app-header-logo--color: var(--theme-map-navigation-logo--color);\n\n      button {\n        margin-left: $default-space;\n      }\n    }\n  }\n\n  .map-nav-header-content {\n    display: flex;\n    height: $appHeaderHeight;\n    align-items: center;\n    overflow: hidden;\n    padding: 0 $default-space;\n\n    &.empty {\n      height: 0;\n    }\n  }\n\n  .map-nav-title {\n    @include text-h2();\n\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n  }\n\n  .content {\n    display: block;\n    flex-grow: 1;\n    position: relative;\n    height: 100%;\n    overflow: hidden;\n    z-index: calc(var(--theme-z-index-sticky) - 1);\n  }\n\n  ::slotted(ix-menu) {\n    position: absolute;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core';\nimport anime from 'animejs';\nimport { ApplicationLayoutContext } from '../utils/application-layout/context';\nimport { useContextProvider } from '../utils/context';\nimport { iconContextMenu } from '@siemens/ix-icons/icons';\n\n@Component({\n  tag: 'ix-map-navigation',\n  styleUrl: 'map-navigation.scss',\n  shadow: true,\n})\nexport class MapNavigation {\n  private static readonly defaultTime = 150;\n  private static readonly slowTime = 500;\n\n  @Element() hostElement!: HTMLIxMapNavigationElement;\n\n  /**\n   * Application name\n   */\n  @Prop() applicationName?: string;\n\n  /**\n   * Navigation title\n   */\n  @Prop() navigationTitle?: string;\n\n  /**\n   * Hide the sidebar context menu button when set to true\n   */\n  @Prop() hideContextMenu = true;\n\n  /**\n   * Navigation toggled\n   */\n  @Event() navigationToggled!: EventEmitter<boolean>;\n\n  /**\n   * Context menu clicked\n   */\n  @Event() contextMenuClick!: EventEmitter<void>;\n\n  @State() isSidebarOpen = true;\n  @State() hasContentHeader = false;\n\n  get menu() {\n    return this.hostElement.querySelector('ix-menu')!;\n  }\n\n  get menuOverlay() {\n    return this.hostElement.querySelector('ix-menu-overlay')!;\n  }\n\n  get mapNavMenu() {\n    return this.hostElement.shadowRoot!.querySelector('.map-nav-menu')!;\n  }\n\n  get sidebar() {\n    return this.hostElement.shadowRoot!.querySelector('.map-nav-sidebar')!;\n  }\n\n  get overlay() {\n    return this.hostElement.shadowRoot!.querySelector('#overlay')!;\n  }\n\n  componentDidRender() {\n    this.appendMenu();\n    this.closeOverlay();\n  }\n\n  componentWillLoad() {\n    useContextProvider(this.hostElement, ApplicationLayoutContext, {\n      hideHeader: false,\n      host: 'map-navigation',\n    });\n  }\n\n  private appendMenu() {\n    this.menu.addEventListener(\n      'mapExpandChange',\n      (event: CustomEvent<boolean>) => {\n        const state = !event.detail;\n        this.toggleSidebar(state);\n      }\n    );\n    this.menu.enableMapExpand = true;\n  }\n\n  /**\n   * Change the visibility of the sidebar\n   *\n   * @param show new visibility state\n   */\n  @Method()\n  async toggleSidebar(show?: boolean) {\n    if (show !== undefined) {\n      this.isSidebarOpen = show;\n    } else {\n      this.isSidebarOpen = !this.isSidebarOpen;\n    }\n\n    if (this.isSidebarOpen) {\n      this.openSidebar();\n    } else {\n      this.closeSidebar();\n    }\n\n    this.navigationToggled.emit(this.isSidebarOpen);\n    this.menu.toggleMapExpand(this.isSidebarOpen);\n  }\n\n  private closeSidebar() {\n    anime({\n      targets: this.sidebar,\n      duration: MapNavigation.defaultTime,\n      marginLeft: [0, '-29.75rem'],\n      opacity: [1, 0],\n      easing: 'easeInSine',\n      complete: () => {\n        this.sidebar.classList.add('display-none');\n      },\n    });\n  }\n\n  private openSidebar() {\n    anime({\n      targets: this.sidebar,\n      duration: MapNavigation.defaultTime,\n      marginLeft: ['-29.75rem', 0],\n      opacity: [0, 1],\n      easing: 'easeOutSine',\n      begin: () => {\n        this.sidebar.classList.remove('display-none');\n      },\n    });\n  }\n\n  /**\n   * Open a overlay inside content area\n   * @deprecated Will be removed in 2.0.0. Use slot based approach\n   *\n   * @param name\n   * @param component\n   * @param icon\n   * @param color\n   */\n  @Method()\n  async openOverlay(\n    name: string,\n    component: HTMLElement,\n    icon?: string,\n    color?: string\n  ) {\n    anime({\n      targets: this.overlay,\n      duration: MapNavigation.slowTime,\n      backdropFilter: [0, 'blur(1rem)'],\n      translateX: ['-4rem', 0],\n      opacity: [0, 1],\n      easing: 'easeOutSine',\n      begin: () => {\n        this.overlay.classList.remove('display-none');\n      },\n    });\n\n    const overlayInstance = document.createElement('ix-map-navigation-overlay');\n    overlayInstance.setAttribute('color', color ?? '');\n    overlayInstance.setAttribute('name', name);\n    overlayInstance.setAttribute('icon', icon ?? '');\n    overlayInstance.setAttribute('slot', 'overlay');\n    overlayInstance.addEventListener('closeClick', () => this.closeOverlay());\n    overlayInstance.appendChild(component);\n    this.hostElement.appendChild(overlayInstance);\n  }\n\n  /**\n   * Close current shown overlay\n   * @deprecated Will be removed in 2.0.0. Use slot based approach\n   */\n  @Method()\n  async closeOverlay() {\n    anime({\n      targets: this.overlay,\n      duration: MapNavigation.slowTime,\n      backdropFilter: ['blur(1rem)', 0],\n      translateX: [0, '-4rem'],\n      opacity: [1, 0],\n      easing: 'easeInSine',\n      complete: () => {\n        if (!this.overlay) {\n          return;\n        }\n        this.overlay.firstChild?.remove();\n        this.overlay.classList.add('display-none');\n      },\n    });\n  }\n\n  private checkHasContentHeader(e: Event) {\n    const nodes = (e.currentTarget as HTMLSlotElement).assignedNodes({\n      flatten: true,\n    });\n\n    this.hasContentHeader = nodes?.length !== 0;\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot name=\"menu\"></slot>\n        <div class=\"map-nav\">\n          <div class=\"map-nav-sidebar\">\n            <div class=\"map-nav-header\">\n              <ix-application-header\n                name={this.applicationName}\n                class=\"map-nav-header-brand\"\n              >\n                <slot slot=\"logo\" name=\"logo\"></slot>\n              </ix-application-header>\n            </div>\n            <div class=\"map-nav-sidebar-content\">\n              <div class=\"map-nav-sidebar-static-content\">\n                <div class=\"map-nav-title\">{this.navigationTitle}</div>\n                {this.hideContextMenu ? (\n                  ''\n                ) : (\n                  <ix-icon-button\n                    icon={iconContextMenu}\n                    ghost\n                    size=\"24\"\n                    variant=\"secondary\"\n                    onClick={(_) => this.contextMenuClick.emit()}\n                  ></ix-icon-button>\n                )}\n              </div>\n              <div class=\"map-nav-sidebar-user-content\">\n                <slot name=\"sidebar-content\"></slot>\n              </div>\n            </div>\n          </div>\n          <div class=\"content\">\n            <div\n              class={{\n                'map-nav-header-content': true,\n                'bg-2': true,\n                empty: !this.hasContentHeader,\n              }}\n            >\n              <slot\n                name=\"content-header\"\n                onSlotchange={(e) => this.checkHasContentHeader(e)}\n              ></slot>\n            </div>\n            <main>\n              <slot></slot>\n              <slot name=\"overlay\"></slot>\n            </main>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"names":["ContextEvent","Event","constructor","context","callback","subscribe","super","bubbles","composed","useContextConsumer","hostElement","onContextReceived","_unsubscribe","dispatchEvent","ctx","unSub","unsubscribe","useContextProvider","contextPayload","requestContext","TypedEvent","updateContext","requests","Set","addEventListener","event","requestContextEvent","name","stopPropagation","add","emit","delete","on","forEach","r","closestIxMenu","element","closest","ApplicationLayoutContext","initialValue","hideHeader","host","sidebar","MapNavigation","hostRef","hideContextMenu","isSidebarOpen","hasContentHeader","menu","this","querySelector","menuOverlay","mapNavMenu","shadowRoot","overlay","componentDidRender","appendMenu","closeOverlay","componentWillLoad","state","detail","toggleSidebar","enableMapExpand","show","undefined","openSidebar","closeSidebar","navigationToggled","toggleMapExpand","anime","targets","duration","defaultTime","marginLeft","opacity","easing","complete","classList","begin","remove","openOverlay","component","icon","color","slowTime","backdropFilter","translateX","overlayInstance","document","createElement","setAttribute","appendChild","_a","firstChild","checkHasContentHeader","e","nodes","currentTarget","assignedNodes","flatten","length","render","h","Host","key","class","applicationName","slot","navigationTitle","iconContextMenu","ghost","size","variant","onClick","_","contextMenuClick","empty","onSlotchange"],"sourceRoot":""}