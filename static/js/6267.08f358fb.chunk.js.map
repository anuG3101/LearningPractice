{"version":3,"file":"static/js/6267.08f358fb.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/button/base-button.tsx","../node_modules/@siemens/ix/dist/esm/src/components/utils/condition-checks.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/a11y.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/make-ref.ts","../node_modules/@siemens/ix/dist/esm/src/components/category-filter/category-filter.scss?tag=ix-category-filter&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/category-filter/category-filter.tsx","../node_modules/@siemens/ix/dist/esm/src/components/utils/disposable-event-listener.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { FunctionalComponent, h } from '@stencil/core';\nimport { A11yAttributes } from '../utils/a11y';\nimport { ButtonVariant } from './button';\n\nexport type ButtonAlignment = 'center' | 'start';\n\nconst isDanger = (variant: string) => {\n  return variant.toUpperCase() === 'Danger'.toUpperCase();\n};\n\nconst isPrimary = (variant: string) => {\n  return variant.toUpperCase() === 'Primary'.toUpperCase();\n};\n\nconst isSecondary = (variant: string) => {\n  return variant.toUpperCase() === 'Secondary'.toUpperCase();\n};\n\nexport const getButtonClasses = (\n  variant: ButtonVariant,\n  outline: boolean,\n  ghost: boolean,\n  iconOnly = false,\n  iconOval = false,\n  selected: boolean,\n  disabled: boolean\n) => {\n  return {\n    btn: true,\n    'btn-danger': isDanger(variant) && !outline && !ghost,\n    'btn-outline-danger': isDanger(variant) && outline && !ghost,\n    'btn-invisible-danger': isDanger(variant) && !outline && ghost,\n    'btn-primary': isPrimary(variant) && !outline && !ghost,\n    'btn-outline-primary': isPrimary(variant) && outline && !ghost,\n    'btn-invisible-primary': isPrimary(variant) && !outline && ghost,\n    'btn-secondary': isSecondary(variant) && !outline && !ghost,\n    'btn-outline-secondary': isSecondary(variant) && outline && !ghost,\n    'btn-invisible-secondary': isSecondary(variant) && !outline && ghost,\n    'btn-icon': iconOnly,\n    'btn-oval': iconOval,\n    selected: selected,\n    disabled: disabled,\n  };\n};\n\nexport type BaseButtonProps = {\n  type: string;\n  variant: ButtonVariant;\n  outline: boolean;\n  ghost: boolean;\n  iconOnly: boolean;\n  iconOval: boolean;\n  selected: boolean;\n  disabled: boolean;\n  loading: boolean;\n  icon?: string;\n  onClick?: Function;\n  ariaAttributes?: A11yAttributes;\n  extraClasses?: { [key: string]: boolean };\n  iconSize?: string;\n  iconColor?: string;\n  alignment?: ButtonAlignment;\n  tabIndex?: number;\n  afterContent?: any;\n};\n\nconst getSpinnerSize = (btnProps: BaseButtonProps) => {\n  if (!btnProps.icon) {\n    return 'small';\n  }\n\n  switch (btnProps.iconSize) {\n    case '12':\n      return 'xx-small';\n    case '16':\n      return 'x-small';\n    default:\n      return 'small';\n  }\n};\n\nexport const BaseButton: FunctionalComponent<BaseButtonProps> = (\n  props: BaseButtonProps,\n  children\n) => {\n  const extraClasses = props.extraClasses ?? {};\n\n  const ariaAttributes = props.ariaAttributes ?? {};\n  if (!ariaAttributes['aria-disabled'] && props.disabled) {\n    ariaAttributes['aria-disabled'] = 'true';\n  }\n\n  return (\n    <button\n      {...ariaAttributes}\n      onClick={(e: Event) => (props.onClick ? props.onClick(e) : undefined)}\n      tabindex={props.disabled ? -1 : (props.tabIndex ?? 0)}\n      type={props.type}\n      class={{\n        ...getButtonClasses(\n          props.variant,\n          props.outline,\n          props.ghost,\n          props.iconOnly,\n          props.iconOval,\n          props.selected,\n          props.disabled || props.loading\n        ),\n        ...extraClasses,\n      }}\n    >\n      {props.loading ? (\n        <ix-spinner size={getSpinnerSize(props)} hideTrack></ix-spinner>\n      ) : null}\n      {props.icon && !props.loading ? (\n        <ix-icon\n          class=\"icon\"\n          name={props.icon}\n          size={props.iconSize as any}\n          color={props.iconColor}\n        ></ix-icon>\n      ) : null}\n      <div\n        class={{\n          content: true,\n          [`content-${props.alignment}`]: !!props.alignment,\n        }}\n      >\n        {children}\n      </div>\n      {props.afterContent ? props.afterContent : null}\n    </button>\n  );\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport const isHttpUrl = (link: string) => {\n  if (!link) {\n    return false;\n  }\n\n  let url: URL;\n\n  try {\n    url = new URL(link);\n  } catch (e) {\n    return false;\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:';\n};\n\nexport const isSvgDataUrl = (url: string) => {\n  if (!url) {\n    return false;\n  }\n\n  if (typeof url !== 'string') {\n    return false;\n  }\n\n  return url.startsWith('data:image/svg+xml');\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { isHttpUrl, isSvgDataUrl } from './condition-checks';\n\nexport const a11yBoolean = (value: boolean | undefined) =>\n  value ? 'true' : 'false';\n\nconst kebabCaseToUpperCaseSentence = (kebabCase: string) => {\n  const withoutFilledSuffix = kebabCase.replace('-filled', '');\n  const words = withoutFilledSuffix.split('-');\n  const sentence = words\n    .map((word) => {\n      const trimWord = word.trim();\n      const digitLessWord = trimWord.replace(/\\d+/g, '');\n\n      if (digitLessWord.length === 0) {\n        return trimWord;\n      }\n\n      return digitLessWord;\n    })\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n\n  return sentence;\n};\n\nexport const getFallbackLabelFromIconName = (iconName?: string) => {\n  if (!iconName) {\n    return 'Unknown';\n  }\n\n  if (isHttpUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  if (isSvgDataUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  const label = kebabCaseToUpperCaseSentence(iconName);\n\n  if (label.length === 0) {\n    return 'Unknown';\n  }\n\n  return label;\n};\n\nexport const a11yHostAttributes = (\n  hostElement: HTMLElement,\n  ignoreAttributes: A11yAttributeName[] = []\n): Record<A11yAttributeName, string> => {\n  const attributeObject: Record<string, string> = {};\n  a11yAttributes.forEach((attr) => {\n    if (hostElement.hasAttribute(attr)) {\n      const value = hostElement.getAttribute(attr);\n      if (value !== null && !ignoreAttributes.includes(attr)) {\n        attributeObject[attr] = hostElement.getAttribute(attr) ?? '';\n        hostElement.removeAttribute(attr);\n      }\n    }\n  });\n\n  return attributeObject;\n};\n\nexport type A11yAttributeName =\n  | 'role'\n  | 'aria-activedescendant'\n  | 'aria-atomic'\n  | 'aria-autocomplete'\n  | 'aria-braillelabel'\n  | 'aria-brailleroledescription'\n  | 'aria-busy'\n  | 'aria-checked'\n  | 'aria-colcount'\n  | 'aria-colindex'\n  | 'aria-colindextext'\n  | 'aria-colspan'\n  | 'aria-controls'\n  | 'aria-current'\n  | 'aria-describedby'\n  | 'aria-description'\n  | 'aria-details'\n  | 'aria-disabled'\n  | 'aria-errormessage'\n  | 'aria-expanded'\n  | 'aria-flowto'\n  | 'aria-haspopup'\n  | 'aria-hidden'\n  | 'aria-invalid'\n  | 'aria-keyshortcuts'\n  | 'aria-label'\n  | 'aria-labelledby'\n  | 'aria-level'\n  | 'aria-live'\n  | 'aria-multiline'\n  | 'aria-multiselectable'\n  | 'aria-orientation'\n  | 'aria-owns'\n  | 'aria-placeholder'\n  | 'aria-posinset'\n  | 'aria-pressed'\n  | 'aria-readonly'\n  | 'aria-relevant'\n  | 'aria-required'\n  | 'aria-roledescription'\n  | 'aria-rowcount'\n  | 'aria-rowindex'\n  | 'aria-rowindextext'\n  | 'aria-rowspan'\n  | 'aria-selected'\n  | 'aria-setsize'\n  | 'aria-sort'\n  | 'aria-valuemax'\n  | 'aria-valuemin'\n  | 'aria-valuenow'\n  | 'aria-valuetext';\n\nconst a11yAttributes: A11yAttributeName[] = [\n  'role',\n  'aria-activedescendant',\n  'aria-atomic',\n  'aria-autocomplete',\n  'aria-braillelabel',\n  'aria-brailleroledescription',\n  'aria-busy',\n  'aria-checked',\n  'aria-colcount',\n  'aria-colindex',\n  'aria-colindextext',\n  'aria-colspan',\n  'aria-controls',\n  'aria-current',\n  'aria-describedby',\n  'aria-description',\n  'aria-details',\n  'aria-disabled',\n  'aria-errormessage',\n  'aria-expanded',\n  'aria-flowto',\n  'aria-haspopup',\n  'aria-hidden',\n  'aria-invalid',\n  'aria-keyshortcuts',\n  'aria-label',\n  'aria-labelledby',\n  'aria-level',\n  'aria-live',\n  'aria-multiline',\n  'aria-multiselectable',\n  'aria-orientation',\n  'aria-owns',\n  'aria-placeholder',\n  'aria-posinset',\n  'aria-pressed',\n  'aria-readonly',\n  'aria-relevant',\n  'aria-required',\n  'aria-roledescription',\n  'aria-rowcount',\n  'aria-rowindex',\n  'aria-rowindextext',\n  'aria-rowspan',\n  'aria-selected',\n  'aria-setsize',\n  'aria-sort',\n  'aria-valuemax',\n  'aria-valuemin',\n  'aria-valuenow',\n  'aria-valuetext',\n];\n\ntype PartialRecord<K extends A11yAttributeName, T> = {\n  [P in K]?: T;\n};\nexport type A11yAttributes = PartialRecord<A11yAttributeName, string>;\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport type MakeRef<T> = {\n  (ref: T | undefined | null): void;\n  current: T | null;\n  waitForCurrent(): Promise<T>;\n};\n\ntype Resolve<T> = (value: T) => void;\n\nexport function makeRef<T>(\n  currentChangedCallback?: (element: T) => void\n): MakeRef<T> {\n  let resolve: Resolve<T> | undefined = undefined;\n  let currentPromise = new Promise<T>((res) => (resolve = res));\n  let current: T | undefined = undefined;\n\n  const setRefFunction = (ref: T | undefined) => {\n    if (ref === undefined) {\n      return;\n    }\n    current = (setRefFunction as MakeRef<T>).current = ref;\n    currentChangedCallback?.(ref);\n    resolve?.(ref);\n  };\n\n  setRefFunction.current = current as T | null;\n\n  setRefFunction.waitForCurrent = async () => {\n    await currentPromise;\n    return current;\n  };\n\n  return setRefFunction as MakeRef<T>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'legacy/mixins/fonts';\n@import 'mixins/hover';\n@import 'mixins/shadows';\n@import 'mixins/shadow-dom/component';\n@import 'mixins/text-truncation';\n@import '../button/button';\n@import 'legacy/components/dropdown';\n@import 'legacy/components/forms';\n@import 'mixins/input';\n\n@include form;\n\n:host {\n  @include ix-component;\n\n  display: block;\n  position: relative;\n  height: auto;\n\n  .reset-button {\n    position: absolute;\n    top: $tiny-space;\n    right: $tiny-space;\n  }\n\n  .reset-button.hide-reset-button {\n    display: none;\n  }\n\n  .input-container {\n    &:not(.readonly):not(.disabled) {\n      @include element-input('false');\n    }\n\n    &:not(.readonly):not(.disabled):hover {\n      border-color: var(--theme-input--border-color--hover) !important;\n      background-color: var(--theme-input--background--hover);\n    }\n\n    &:not(.readonly):not(.disabled).focus {\n      outline: 1px solid var(--theme-color-focus-bdr);\n      outline-offset: var(--theme-input--focus--outline-offset);\n      border-color: var(--theme-input--border-color--focus) !important;\n    }\n\n    &.disabled {\n      color: var(--theme-input--color--disabled);\n      border-bottom: var(--theme-input--border-thickness, 1px) solid\n        var(--theme-input--border-color-bottom--disabled);\n    }\n\n    &.readonly {\n      @include element-input;\n    }\n\n    display: flex;\n    height: auto;\n    max-height: 3.75rem;\n    padding: 1px $large-space 1px 1.75rem !important;\n\n    &.no-icon {\n      padding-left: $tiny-space;\n    }\n  }\n\n  .token-container {\n    flex-grow: 1;\n    overflow: hidden;\n  }\n\n  .text-input {\n    @include ellipsis;\n    @include text-default;\n    width: auto;\n    height: 1.75rem;\n    min-height: $large-space;\n    background: transparent;\n    flex-grow: 1;\n    box-shadow: none;\n\n    &,\n    &:hover,\n    &:focus,\n    &:focus-visible {\n      border: none !important;\n      outline: none !important;\n    }\n\n    &.hide-placeholder::placeholder {\n      opacity: 0;\n    }\n  }\n\n  .list-unstyled {\n    display: flex;\n    flex-wrap: wrap;\n    height: 100%;\n    overflow-y: auto;\n  }\n\n  ix-icon {\n    position: absolute;\n    top: $small-space;\n    left: $small-space;\n  }\n\n  ix-filter-chip {\n    margin-right: $tiny-space;\n  }\n\n  .category-preview {\n    display: flex;\n    align-items: center;\n    height: $large-space;\n    background-color: var(--theme-bg-3);\n    border-top-left-radius: $default-space;\n    border-bottom-left-radius: $default-space;\n    padding: $small-space;\n    margin: 2px 0;\n  }\n\n  ul {\n    height: 100%;\n  }\n\n  .list-unstyled > span:not(.category-preview),\n  input {\n    padding-inline-start: 0;\n    padding-top: 2px;\n    padding-bottom: 2px;\n  }\n\n  ix-dropdown {\n    min-width: 10rem !important;\n\n    .dropdown-item-container {\n      display: flex;\n      flex-direction: column;\n\n      .dropdown-item {\n        @include text-default-single;\n        @include ellipsis;\n        @include focus-visible {\n          border-color: var(--theme-color-focus-bdr);\n        }\n\n        height: $large-control-height;\n        margin: $tiny-space $small-space;\n        padding-inline: $small-space;\n        border: 1px solid transparent;\n        border-radius: 100rem;\n        width: auto;\n        justify-content: flex-start;\n        flex-grow: 1;\n      }\n\n      .category-item {\n        border-end-end-radius: 0;\n        border-start-end-radius: 0;\n      }\n\n      .category-item-value {\n        border-start-start-radius: 0;\n        border-end-start-radius: 0;\n      }\n    }\n\n    .btn-toggle-operator {\n      width: 2rem;\n      height: 2rem;\n      margin-inline: $small-space;\n    }\n  }\n\n  .display-none {\n    display: none;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { BaseButton, BaseButtonProps } from '../button/base-button';\nimport { FilterState } from './filter-state';\nimport { InputState } from './input-state';\nimport { LogicalFilterOperator } from './logical-filter-operator';\nimport { iconClear, iconSearch } from '@siemens/ix-icons/icons';\nimport { makeRef } from '../utils/make-ref';\nimport {\n  addDisposableEventListener,\n  DisposableEventListener,\n} from '../utils/disposable-event-listener';\nimport { A11yAttributes, a11yHostAttributes } from '../utils/a11y';\n\n@Component({\n  tag: 'ix-category-filter',\n  styleUrl: 'category-filter.scss',\n  shadow: true,\n})\nexport class CategoryFilter {\n  private readonly ID_CUSTOM_FILTER_VALUE = 'CW_CUSTOM_FILTER_VALUE';\n\n  private formKeyDownListener?: DisposableEventListener;\n  private preventDefaultListener?: DisposableEventListener;\n  private inputKeyDownListener?: DisposableEventListener;\n  private focusInListener?: DisposableEventListener;\n  private focusOutListener?: DisposableEventListener;\n  private inputListener?: DisposableEventListener;\n\n  private readonly textInput? = makeRef<HTMLInputElement>();\n  private formElement?: HTMLFormElement;\n  private isScrollStateDirty?: boolean;\n  private a11yAttributes?: A11yAttributes;\n\n  @Element() hostElement!: HTMLIxCategoryFilterElement;\n\n  @State() showDropdown = false;\n  @State() hasFocus = false;\n  @State() categoryLogicalOperator = LogicalFilterOperator.EQUAL;\n  @State() inputValue: string = '';\n  @State() category: string = '';\n  @State() filterTokens: Array<{\n    id: string;\n    value: string;\n    operator: LogicalFilterOperator;\n  }> = [];\n\n  /**\n   * If true the filter will be in disabled state\n   */\n  @Prop() disabled = false;\n\n  /**\n   * If true the filter will be in readonly mode\n   */\n  @Prop() readonly = false;\n\n  /**\n   * A set of search criteria to populate the component with.\n   */\n  @Prop() filterState?: FilterState;\n\n  /**\n   * Placeholder text to be displayed in an empty input field.\n   */\n  @Prop() placeholder?: string;\n\n  /**\n   * Configuration object hash used to populate the dropdown menu for type-ahead and quick selection functionality.\n   * Each ID maps to an object with a label and an array of options to select from.\n   */\n  @Prop() categories?: {\n    [id: string]: {\n      label: string;\n      options: string[];\n    };\n  };\n\n  /**\n   * In certain use cases some categories may not be available for selection anymore.\n   * To allow proper display of set filters with these categories this ID to label mapping can be populated.\n   *\n   * Configuration object hash used to supply labels to the filter chips in the input field.\n   * Each ID maps to a string representing the label to display.\n   */\n  @Prop() nonSelectableCategories?: {\n    [id: string]: string;\n  } = {};\n\n  /**\n   * A list of strings that will be supplied as type-ahead suggestions not tied to any categories.\n   */\n  @Prop() suggestions?: string[];\n\n  /**\n   * The icon next to the actual text input\n   * Defaults to 'search'\n   */\n  @Prop() icon?: string;\n\n  /**\n   * Allows to hide the icon inside the text input.\n   * Defaults to false\n   */\n  @Prop() hideIcon: boolean = false;\n\n  /**\n   * If set categories will always be filtered via the respective logical operator.\n   * Toggling of the operator will not be available to the user.\n   */\n  @Prop() staticOperator?: LogicalFilterOperator;\n\n  /**\n   * If set to true, allows that a single category can be set more than once.\n   * An already set category will not appear in the category dropdown if set to false.\n   *\n   * Defaults to true\n   */\n  @Prop() repeatCategories = true;\n\n  /**\n   * @internal For debugging purposes only!\n   */\n  @Prop() tmpDisableScrollIntoView = true;\n\n  /**\n   * i18n\n   */\n  @Prop() labelCategories = 'Categories';\n\n  /**\n   * i18n\n   */\n  @Prop() i18nPlainText = 'Filter by text';\n\n  /**\n   * Event dispatched whenever a category gets selected in the dropdown\n   */\n  @Event() categoryChanged!: EventEmitter<string>;\n\n  /**\n   * Event dispatched whenever the text input changes.\n   */\n  @Event() inputChanged!: EventEmitter<InputState>;\n\n  /**\n   * Event dispatched whenever the filter state changes.\n   */\n  @Event() filterChanged!: EventEmitter<FilterState>;\n\n  /**\n   * Event dispatched whenever the filter gets cleared.\n   */\n  @Event() filterCleared!: EventEmitter<void>;\n\n  get dropdown() {\n    return this.hostElement.shadowRoot!.querySelector('ix-dropdown');\n  }\n\n  @Watch('filterState')\n  watchFilterState(newValue: FilterState) {\n    this.setFilterState(newValue);\n  }\n\n  private preventDefault(e: Event) {\n    e.preventDefault();\n  }\n\n  private onFocusIn() {\n    this.hasFocus = true;\n  }\n\n  private onFocusOut() {\n    this.hasFocus = false;\n  }\n\n  private onInput() {\n    this.inputValue = this.textInput?.current?.value ?? '';\n    const inputState = new InputState(this.inputValue, this.category);\n    this.inputChanged.emit(inputState);\n\n    if (!this.dropdown?.show) {\n      this.openDropdown();\n    }\n  }\n\n  componentWillLoad() {\n    this.a11yAttributes = a11yHostAttributes(this.hostElement);\n  }\n\n  componentDidLoad() {\n    setTimeout(() => {\n      if (this.filterState !== undefined) {\n        this.setFilterState(this.filterState);\n      }\n    });\n\n    if (this.formElement !== undefined) {\n      this.formKeyDownListener = addDisposableEventListener(\n        this.formElement,\n        'keydown',\n        ((e: KeyboardEvent) =>\n          this.handleFormElementKeyDown(e)) as EventListener\n      );\n\n      this.preventDefaultListener = addDisposableEventListener(\n        this.formElement,\n        'submit',\n        this.preventDefault\n      );\n    }\n\n    if (this.textInput?.current == null) {\n      console.warn(\n        'ix-category-filter - unable to add event listeners to native input element'\n      );\n      return;\n    }\n\n    this.inputKeyDownListener = addDisposableEventListener(\n      this.textInput.current,\n      'keydown',\n      ((e: KeyboardEvent) => this.handleInputElementKeyDown(e)) as EventListener\n    );\n\n    this.focusInListener = addDisposableEventListener(\n      this.textInput.current,\n      'focusin',\n      () => this.onFocusIn()\n    );\n\n    this.focusOutListener = addDisposableEventListener(\n      this.textInput.current,\n      'focusout',\n      () => this.onFocusOut()\n    );\n\n    this.inputListener = addDisposableEventListener(\n      this.textInput.current,\n      'input',\n      () => this.onInput()\n    );\n  }\n\n  private setFilterState(state: FilterState) {\n    this.filterTokens = [];\n\n    for (const token of state.tokens) {\n      this.addToken(\n        token,\n        this.ID_CUSTOM_FILTER_VALUE,\n        this.categoryLogicalOperator,\n        false\n      );\n    }\n\n    for (const category of state.categories) {\n      this.addToken(category.value, category.id, category.operator, false);\n    }\n\n    this.emitFilterEvent();\n  }\n\n  private closeDropdown() {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    if (this.dropdown) {\n      this.dropdown.show = false;\n    }\n  }\n\n  private openDropdown() {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    if (this.dropdown) {\n      this.dropdown.show = true;\n    }\n  }\n\n  private handleFormElementKeyDown(e: KeyboardEvent) {\n    switch (e.code) {\n      case 'Enter':\n      case 'NumpadEnter':\n        if (!document.activeElement?.classList.contains('dropdown-item')) {\n          return;\n        }\n\n        const token = document.activeElement.getAttribute('data-id');\n\n        if (token === null) {\n          break;\n        }\n\n        if (this.hasCategorySelection()) {\n          if (this.category !== '') {\n            this.addToken(token, this.category);\n          } else if (\n            document.activeElement.classList.contains('category-item-id')\n          ) {\n            this.selectCategory(token);\n          }\n        } else {\n          this.addToken(token);\n        }\n\n        e.preventDefault();\n        break;\n\n      case 'ArrowUp':\n        this.focusPreviousItem();\n        e.preventDefault();\n        break;\n\n      case 'ArrowDown':\n        this.showDropdown = true;\n        this.focusNextItem();\n        e.preventDefault();\n        break;\n\n      case 'Escape':\n        this.closeDropdown();\n        break;\n    }\n  }\n\n  private focusPreviousItem() {\n    const sibling = document.activeElement?.previousSibling;\n    if (sibling instanceof HTMLElement) {\n      sibling.focus();\n    }\n  }\n\n  private focusNextItem() {\n    const sibling = document.activeElement?.nextSibling;\n    if (sibling instanceof HTMLElement) {\n      sibling.focus();\n    }\n  }\n\n  private focusElement(selector: string): boolean {\n    const item = this.hostElement.shadowRoot!.querySelector(selector);\n    if (item instanceof HTMLElement) {\n      item.focus();\n      return true;\n    }\n    return false;\n  }\n\n  private onArrowDown(e: KeyboardEvent) {\n    const baseSelector = `.category-item-${\n      this.category !== '' ? 'value' : 'id'\n    }`;\n    const fallbackSelector = '.category-item';\n\n    if (this.focusElement(baseSelector)) {\n      e.stopPropagation();\n      return;\n    }\n\n    if (this.suggestions?.length && this.focusElement(fallbackSelector)) {\n      e.stopPropagation();\n    }\n  }\n\n  private handleInputElementKeyDown(e: KeyboardEvent) {\n    switch (e.code) {\n      case 'ArrowDown': {\n        this.onArrowDown(e);\n        break;\n      }\n\n      case 'Backspace':\n        if (this.textInput?.current?.value !== '') {\n          return;\n        }\n\n        if (this.category !== '') {\n          this.category = '';\n          return;\n        }\n\n        const tokenCount = this.filterTokens.length;\n        if (tokenCount > 0) {\n          this.removeToken(tokenCount - 1);\n        }\n        break;\n\n      case 'Enter':\n      case 'NumpadEnter':\n        this.addToken(\n          this.inputValue,\n          this.category || this.ID_CUSTOM_FILTER_VALUE\n        );\n        e.preventDefault();\n        break;\n    }\n  }\n\n  private emitFilterEvent() {\n    const tokens = this.filterTokens\n      .filter((item) => item.id === this.ID_CUSTOM_FILTER_VALUE)\n      .map((item) => item.value);\n    const categories = this.filterTokens.filter(\n      (item) => item.id !== this.ID_CUSTOM_FILTER_VALUE\n    );\n    const filterState: FilterState = {\n      tokens,\n      categories,\n    };\n\n    this.filterChanged.emit(filterState);\n  }\n\n  private addToken(\n    token: string,\n    category: string = this.ID_CUSTOM_FILTER_VALUE,\n    operator = this.categoryLogicalOperator,\n    emitEvent = true\n  ) {\n    if (token === undefined || token === null) {\n      return;\n    }\n\n    const newToken = token.trim();\n\n    if (newToken === '') {\n      return;\n    }\n\n    if (this.hasToken(newToken)) {\n      return;\n    }\n\n    const pair = { id: category, value: newToken, operator };\n    this.filterTokens = [...this.filterTokens, pair];\n    if (this.textInput?.current) {\n      this.textInput.current.value = '';\n    }\n    this.inputValue = '';\n    this.categoryLogicalOperator = LogicalFilterOperator.EQUAL;\n\n    if (this.category !== '') {\n      this.category = '';\n    }\n\n    this.isScrollStateDirty = true;\n\n    this.textInput?.current?.focus();\n\n    if (emitEvent) {\n      this.emitFilterEvent();\n    }\n  }\n\n  private removeToken(index: number) {\n    this.filterTokens = this.filterTokens.filter((_, i) => i !== index);\n    this.emitFilterEvent();\n  }\n\n  private getCategoryIds() {\n    const ids = [];\n    for (const id in this.categories) {\n      if (Object.prototype.hasOwnProperty.call(this.categories, id)) {\n        ids.push(id);\n      }\n    }\n\n    return ids;\n  }\n\n  private selectCategory(category: string) {\n    this.category = category;\n    if (this.textInput?.current) {\n      this.textInput.current.value = '';\n    }\n    this.inputValue = '';\n    this.textInput?.current?.focus();\n    this.categoryChanged.emit(category);\n  }\n\n  private resetFilter(e: Event) {\n    const { defaultPrevented } = this.filterCleared.emit();\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    e.stopPropagation();\n    this.closeDropdown();\n    this.filterTokens = [];\n    if (this.category) {\n      this.category = '';\n      this.categoryChanged.emit(undefined);\n    }\n\n    this.emitFilterEvent();\n  }\n\n  private filterMultiples(value: string) {\n    if (this.repeatCategories) {\n      return true;\n    }\n\n    const isCategoryAlreadySet = this.filterTokens.find(\n      (token) => token.id === value\n    );\n\n    return !isCategoryAlreadySet;\n  }\n\n  private hasToken(token: string) {\n    return this.filterTokens.some((filterToken) => {\n      const hasSameValue = filterToken.value === token;\n\n      if (!hasSameValue) {\n        return false;\n      }\n\n      if (this.category !== '') {\n        return this.category === filterToken.id;\n      }\n\n      if (filterToken.id) {\n        return filterToken.id === this.ID_CUSTOM_FILTER_VALUE;\n      }\n\n      return hasSameValue;\n    });\n  }\n\n  private filterDuplicateTokens(value: string) {\n    return !this.hasToken(value);\n  }\n\n  private filterByInput(value: string) {\n    if (this.inputValue === undefined || this.inputValue === '') {\n      return true;\n    }\n\n    return value.toLowerCase().indexOf(this.inputValue.toLowerCase()) !== -1;\n  }\n\n  private toggleCategoryOperator() {\n    switch (this.categoryLogicalOperator) {\n      case LogicalFilterOperator.EQUAL:\n        this.categoryLogicalOperator = LogicalFilterOperator.NOT_EQUAL;\n        break;\n\n      case LogicalFilterOperator.NOT_EQUAL:\n        this.categoryLogicalOperator = LogicalFilterOperator.EQUAL;\n        break;\n    }\n  }\n\n  private getFilterChipLabel(value: {\n    id: string;\n    value: string;\n    operator: LogicalFilterOperator;\n  }): string {\n    if (value.id === this.ID_CUSTOM_FILTER_VALUE) {\n      return value.value;\n    }\n\n    const operatorString =\n      value.operator === LogicalFilterOperator.EQUAL ? '=' : '!=';\n    const label =\n      this.categories?.[value.id]?.label ??\n      this.nonSelectableCategories?.[value.id] ??\n      value.id;\n\n    return `${label} ${operatorString} ${value.value}`;\n  }\n\n  private getFilteredSuggestions() {\n    if (!this.suggestions?.length) {\n      return [];\n    }\n\n    return this.suggestions\n      ?.filter((value) => this.filterByInput(value))\n      .filter((value) => this.filterDuplicateTokens(value));\n  }\n\n  private hasCategorySelection() {\n    return this.categories !== undefined;\n  }\n\n  private renderPlainSuggestions() {\n    return (\n      <div class=\"dropdown-item-container\">\n        {this.getFilteredSuggestions().map((suggestion) => (\n          <button\n            class=\"dropdown-item\"\n            data-id={suggestion}\n            onClick={() => this.addToken(suggestion)}\n            key={suggestion}\n            title={suggestion}\n          >\n            {suggestion}\n          </button>\n        ))}\n      </div>\n    );\n  }\n\n  private renderOperatorButton() {\n    if (this.staticOperator) {\n      return '';\n    }\n\n    const params: BaseButtonProps = {\n      type: 'button',\n      variant: 'secondary',\n      outline: false,\n      ghost: true,\n      iconOnly: true,\n      iconOval: false,\n      selected: false,\n      disabled: this.disabled || this.staticOperator !== undefined,\n      loading: false,\n      icon: '',\n      onClick: (e: Event) => {\n        e.stopPropagation();\n        this.toggleCategoryOperator();\n      },\n      extraClasses: {\n        'btn-icon-32': true,\n        'btn-toggle-operator': true,\n      },\n    };\n\n    return (\n      <BaseButton {...params}>\n        {this.categoryLogicalOperator === LogicalFilterOperator.NOT_EQUAL\n          ? '='\n          : '!='}\n      </BaseButton>\n    );\n  }\n\n  private getFilterOperatorString() {\n    let operator: LogicalFilterOperator;\n    if (this.staticOperator !== undefined) {\n      operator = this.staticOperator;\n    } else {\n      operator = this.categoryLogicalOperator;\n    }\n    return `${operator === LogicalFilterOperator.EQUAL ? '=' : '!='} `;\n  }\n\n  private renderCategoryValues() {\n    if (this.categories === undefined) {\n      return;\n    }\n\n    return (\n      <div class=\"dropdown-item-container\">\n        {this.renderOperatorButton()}\n        <div class=\"dropdown-header\">\n          {this.categories[this.category]?.label}\n        </div>\n        {this.categories[this.category]?.options\n          .filter((value) => this.filterByInput(value))\n          .filter((value) => this.filterDuplicateTokens(value))\n          .map((id) => (\n            <button\n              class=\"dropdown-item category-item-value\"\n              data-id={id}\n              title={id}\n              key={id}\n              onClick={(e) => {\n                e.preventDefault();\n                this.addToken(id, this.category);\n              }}\n            >\n              {`${this.getFilterOperatorString()} ${id}`}\n            </button>\n          ))}\n      </div>\n    );\n  }\n\n  private renderDropdownContent() {\n    if (this.hasCategorySelection()) {\n      if (this.category !== '') {\n        return this.renderCategoryValues();\n      } else {\n        return this.renderCategorySelection();\n      }\n    } else return this.renderPlainSuggestions();\n  }\n\n  private renderCategorySelection() {\n    return (\n      <div class=\"dropdown-item-container\">\n        {this.getCategoryIds()\n          ?.filter(\n            (id) =>\n              this.categories && this.filterByInput(this.categories[id].label)\n          )\n          .filter((id) => this.filterMultiples(id))\n          .map((id) => (\n            <button\n              class=\"dropdown-item category-item category-item-id\"\n              data-id={id}\n              title={this.categories?.[id]?.label}\n              key={id}\n              onClick={(e) => {\n                e.preventDefault();\n                this.selectCategory(id);\n              }}\n              tabindex=\"0\"\n            >\n              {this.categories?.[id]?.label}\n            </button>\n          ))}\n      </div>\n    );\n  }\n\n  private getDropdownHeader() {\n    if (this.categories !== undefined) {\n      if (this.category !== '') {\n        return undefined;\n      } else {\n        return this.labelCategories;\n      }\n    }\n\n    return this.i18nPlainText;\n  }\n\n  componentDidRender() {\n    if (this.isScrollStateDirty) {\n      if (!this.tmpDisableScrollIntoView) {\n        this.textInput?.current?.scrollIntoView();\n      }\n      this.isScrollStateDirty = false;\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.preventDefaultListener) {\n      this.preventDefaultListener();\n    }\n    if (this.formKeyDownListener) {\n      this.formKeyDownListener();\n    }\n    if (this.inputKeyDownListener) {\n      this.inputKeyDownListener?.();\n    }\n    if (this.focusInListener) {\n      this.focusInListener();\n    }\n    if (this.focusOutListener) {\n      this.focusOutListener();\n    }\n    if (this.inputListener) {\n      this.inputListener();\n    }\n  }\n\n  private getResetButton() {\n    return (\n      <ix-icon-button\n        onClick={(e) => this.resetFilter(e)}\n        class={{\n          'reset-button': true,\n          'hide-reset-button':\n            !this.filterTokens.length && this.category === '',\n        }}\n        ghost\n        oval\n        icon={iconClear}\n        size=\"16\"\n      ></ix-icon-button>\n    );\n  }\n\n  private getIconColor() {\n    if (this.disabled) {\n      return 'color-componentn-1';\n    }\n\n    if (this.readonly) {\n      return 'color-std-txt';\n    }\n\n    return 'color-primary';\n  }\n\n  render() {\n    return (\n      <Host>\n        <form ref={(el) => (this.formElement = el)}>\n          <div\n            read-only={this.readonly}\n            class={{\n              'input-container': true,\n              disabled: this.disabled,\n              focus: this.hasFocus,\n              readonly: this.readonly,\n              'no-icon': this.hideIcon,\n            }}\n          >\n            <ix-icon\n              color={this.getIconColor()}\n              class={{ 'display-none': this.hideIcon }}\n              name={this.icon ?? iconSearch}\n              size=\"16\"\n            ></ix-icon>\n            <div class=\"token-container\">\n              <div class=\"list-unstyled\">\n                {this.filterTokens.map((value, index) => (\n                  <span\n                    key={value.toString()}\n                    class={{\n                      animate__animated: true,\n                      animate__fadein: true,\n                    }}\n                  >\n                    <ix-filter-chip\n                      disabled={this.disabled}\n                      readonly={this.readonly}\n                      onClick={(e) => e.stopPropagation()}\n                      onCloseClick={() => this.removeToken(index)}\n                    >\n                      {this.getFilterChipLabel(value)}\n                    </ix-filter-chip>\n                  </span>\n                ))}\n                {this.categories === undefined ? (\n                  ''\n                ) : (\n                  <span\n                    class={{\n                      'category-preview': true,\n                      'display-none': this.category === '',\n                    }}\n                  >\n                    {this.categories[this.category]?.label}\n                  </span>\n                )}\n                <input\n                  class={{\n                    'text-input': true,\n                    'hide-placeholder':\n                      this.readonly || this.disabled || this.category !== '',\n                  }}\n                  autocomplete=\"off\"\n                  name=\"category-filter-input\"\n                  disabled={this.disabled}\n                  readonly={this.readonly}\n                  ref={this.textInput}\n                  type=\"text\"\n                  placeholder={this.placeholder}\n                  {...this.a11yAttributes}\n                ></input>\n              </div>\n            </div>\n            {!this.readonly && !this.disabled && this.getResetButton()}\n          </div>\n        </form>\n\n        {this.disabled || this.readonly ? (\n          ''\n        ) : (\n          <ix-dropdown\n            show={this.showDropdown}\n            closeBehavior=\"outside\"\n            offset={{ mainAxis: 2 }}\n            anchor={this.textInput?.waitForCurrent()}\n            trigger={this.hostElement}\n            header={this.getDropdownHeader()}\n          >\n            {this.renderDropdownContent()}\n          </ix-dropdown>\n        )}\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport type DisposableEventListener = () => void;\n\nexport const addDisposableEventListener = (\n  element: Element | Window | Document,\n  eventType: string,\n  callback: EventListenerOrEventListenerObject\n): DisposableEventListener => {\n  element.addEventListener(eventType, callback);\n\n  return () => {\n    element.removeEventListener(eventType, callback);\n  };\n};\n\nexport const addDisposableEventListenerAsArray = (\n  listener: {\n    element: Element | Window | Document;\n    eventType: string;\n    callback: EventListenerOrEventListenerObject;\n  }[]\n): DisposableEventListener => {\n  const disposables = listener.map(({ callback, element, eventType }) =>\n    addDisposableEventListener(element, eventType, callback)\n  );\n\n  return () => disposables.forEach((dispose) => dispose());\n};\n"],"names":["isDanger","variant","toUpperCase","isPrimary","isSecondary","getButtonClasses","outline","ghost","iconOnly","arguments","length","undefined","iconOval","selected","disabled","btn","getSpinnerSize","btnProps","icon","iconSize","BaseButton","props","children","extraClasses","_a","ariaAttributes","_b","h","Object","assign","onClick","e","tabindex","_c","tabIndex","type","class","loading","size","hideTrack","name","color","iconColor","content","concat","alignment","afterContent","a11yBoolean","value","getFallbackLabelFromIconName","iconName","link","url","URL","protocol","isHttpUrl","startsWith","label","replace","split","map","word","trimWord","trim","digitLessWord","charAt","slice","join","a11yHostAttributes","hostElement","ignoreAttributes","attributeObject","a11yAttributes","forEach","attr","hasAttribute","getAttribute","includes","removeAttribute","makeRef","currentChangedCallback","resolve","current","currentPromise","Promise","res","setRefFunction","ref","waitForCurrent","async","CategoryFilter","constructor","hostRef","ID_CUSTOM_FILTER_VALUE","textInput","showDropdown","hasFocus","categoryLogicalOperator","LogicalFilterOperator","EQUAL","inputValue","category","filterTokens","readonly","nonSelectableCategories","hideIcon","repeatCategories","tmpDisableScrollIntoView","labelCategories","i18nPlainText","dropdown","this","shadowRoot","querySelector","watchFilterState","newValue","setFilterState","preventDefault","onFocusIn","onFocusOut","onInput","inputState","InputState","inputChanged","emit","_d","show","openDropdown","componentWillLoad","componentDidLoad","setTimeout","filterState","formElement","formKeyDownListener","addDisposableEventListener","handleFormElementKeyDown","preventDefaultListener","inputKeyDownListener","handleInputElementKeyDown","focusInListener","focusOutListener","inputListener","console","warn","state","token","tokens","addToken","categories","id","operator","emitFilterEvent","closeDropdown","code","document","activeElement","classList","contains","hasCategorySelection","selectCategory","focusPreviousItem","focusNextItem","sibling","previousSibling","HTMLElement","focus","nextSibling","focusElement","selector","item","onArrowDown","baseSelector","suggestions","stopPropagation","tokenCount","removeToken","filter","filterChanged","emitEvent","newToken","hasToken","pair","isScrollStateDirty","index","_","i","getCategoryIds","ids","prototype","hasOwnProperty","call","push","categoryChanged","resetFilter","defaultPrevented","filterCleared","filterMultiples","find","some","filterToken","hasSameValue","filterDuplicateTokens","filterByInput","toLowerCase","indexOf","toggleCategoryOperator","NOT_EQUAL","getFilterChipLabel","operatorString","_e","getFilteredSuggestions","renderPlainSuggestions","suggestion","key","title","renderOperatorButton","staticOperator","params","getFilterOperatorString","renderCategoryValues","options","renderDropdownContent","renderCategorySelection","getDropdownHeader","componentDidRender","scrollIntoView","disconnectedCallback","getResetButton","oval","iconClear","getIconColor","render","Host","el","iconSearch","toString","animate__animated","animate__fadein","onCloseClick","autocomplete","placeholder","closeBehavior","offset","mainAxis","anchor","trigger","header","element","eventType","callback","addEventListener","removeEventListener","addDisposableEventListenerAsArray","listener","disposables","_ref","dispose"],"sourceRoot":""}