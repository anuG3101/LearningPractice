{"version":3,"file":"static/js/9381.7e664f84.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/condition-checks.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/a11y.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/make-ref.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/input/validation.ts","../node_modules/@siemens/ix/dist/esm/src/components/checkbox/checkbox.tsx","../node_modules/@siemens/ix/dist/esm/src/components/checkbox/checkbox.scss?tag=ix-checkbox&encapsulation=shadow"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport const isHttpUrl = (link: string) => {\n  if (!link) {\n    return false;\n  }\n\n  let url: URL;\n\n  try {\n    url = new URL(link);\n  } catch (e) {\n    return false;\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:';\n};\n\nexport const isSvgDataUrl = (url: string) => {\n  if (!url) {\n    return false;\n  }\n\n  if (typeof url !== 'string') {\n    return false;\n  }\n\n  return url.startsWith('data:image/svg+xml');\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { isHttpUrl, isSvgDataUrl } from './condition-checks';\n\nexport const a11yBoolean = (value: boolean | undefined) =>\n  value ? 'true' : 'false';\n\nconst kebabCaseToUpperCaseSentence = (kebabCase: string) => {\n  const withoutFilledSuffix = kebabCase.replace('-filled', '');\n  const words = withoutFilledSuffix.split('-');\n  const sentence = words\n    .map((word) => {\n      const trimWord = word.trim();\n      const digitLessWord = trimWord.replace(/\\d+/g, '');\n\n      if (digitLessWord.length === 0) {\n        return trimWord;\n      }\n\n      return digitLessWord;\n    })\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n\n  return sentence;\n};\n\nexport const getFallbackLabelFromIconName = (iconName?: string) => {\n  if (!iconName) {\n    return 'Unknown';\n  }\n\n  if (isHttpUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  if (isSvgDataUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  const label = kebabCaseToUpperCaseSentence(iconName);\n\n  if (label.length === 0) {\n    return 'Unknown';\n  }\n\n  return label;\n};\n\nexport const a11yHostAttributes = (\n  hostElement: HTMLElement,\n  ignoreAttributes: A11yAttributeName[] = []\n): Record<A11yAttributeName, string> => {\n  const attributeObject: Record<string, string> = {};\n  a11yAttributes.forEach((attr) => {\n    if (hostElement.hasAttribute(attr)) {\n      const value = hostElement.getAttribute(attr);\n      if (value !== null && !ignoreAttributes.includes(attr)) {\n        attributeObject[attr] = hostElement.getAttribute(attr) ?? '';\n        hostElement.removeAttribute(attr);\n      }\n    }\n  });\n\n  return attributeObject;\n};\n\nexport type A11yAttributeName =\n  | 'role'\n  | 'aria-activedescendant'\n  | 'aria-atomic'\n  | 'aria-autocomplete'\n  | 'aria-braillelabel'\n  | 'aria-brailleroledescription'\n  | 'aria-busy'\n  | 'aria-checked'\n  | 'aria-colcount'\n  | 'aria-colindex'\n  | 'aria-colindextext'\n  | 'aria-colspan'\n  | 'aria-controls'\n  | 'aria-current'\n  | 'aria-describedby'\n  | 'aria-description'\n  | 'aria-details'\n  | 'aria-disabled'\n  | 'aria-errormessage'\n  | 'aria-expanded'\n  | 'aria-flowto'\n  | 'aria-haspopup'\n  | 'aria-hidden'\n  | 'aria-invalid'\n  | 'aria-keyshortcuts'\n  | 'aria-label'\n  | 'aria-labelledby'\n  | 'aria-level'\n  | 'aria-live'\n  | 'aria-multiline'\n  | 'aria-multiselectable'\n  | 'aria-orientation'\n  | 'aria-owns'\n  | 'aria-placeholder'\n  | 'aria-posinset'\n  | 'aria-pressed'\n  | 'aria-readonly'\n  | 'aria-relevant'\n  | 'aria-required'\n  | 'aria-roledescription'\n  | 'aria-rowcount'\n  | 'aria-rowindex'\n  | 'aria-rowindextext'\n  | 'aria-rowspan'\n  | 'aria-selected'\n  | 'aria-setsize'\n  | 'aria-sort'\n  | 'aria-valuemax'\n  | 'aria-valuemin'\n  | 'aria-valuenow'\n  | 'aria-valuetext';\n\nconst a11yAttributes: A11yAttributeName[] = [\n  'role',\n  'aria-activedescendant',\n  'aria-atomic',\n  'aria-autocomplete',\n  'aria-braillelabel',\n  'aria-brailleroledescription',\n  'aria-busy',\n  'aria-checked',\n  'aria-colcount',\n  'aria-colindex',\n  'aria-colindextext',\n  'aria-colspan',\n  'aria-controls',\n  'aria-current',\n  'aria-describedby',\n  'aria-description',\n  'aria-details',\n  'aria-disabled',\n  'aria-errormessage',\n  'aria-expanded',\n  'aria-flowto',\n  'aria-haspopup',\n  'aria-hidden',\n  'aria-invalid',\n  'aria-keyshortcuts',\n  'aria-label',\n  'aria-labelledby',\n  'aria-level',\n  'aria-live',\n  'aria-multiline',\n  'aria-multiselectable',\n  'aria-orientation',\n  'aria-owns',\n  'aria-placeholder',\n  'aria-posinset',\n  'aria-pressed',\n  'aria-readonly',\n  'aria-relevant',\n  'aria-required',\n  'aria-roledescription',\n  'aria-rowcount',\n  'aria-rowindex',\n  'aria-rowindextext',\n  'aria-rowspan',\n  'aria-selected',\n  'aria-setsize',\n  'aria-sort',\n  'aria-valuemax',\n  'aria-valuemin',\n  'aria-valuenow',\n  'aria-valuetext',\n];\n\ntype PartialRecord<K extends A11yAttributeName, T> = {\n  [P in K]?: T;\n};\nexport type A11yAttributes = PartialRecord<A11yAttributeName, string>;\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport type MakeRef<T> = {\n  (ref: T | undefined | null): void;\n  current: T | null;\n  waitForCurrent(): Promise<T>;\n};\n\ntype Resolve<T> = (value: T) => void;\n\nexport function makeRef<T>(\n  currentChangedCallback?: (element: T) => void\n): MakeRef<T> {\n  let resolve: Resolve<T> | undefined = undefined;\n  let currentPromise = new Promise<T>((res) => (resolve = res));\n  let current: T | undefined = undefined;\n\n  const setRefFunction = (ref: T | undefined) => {\n    if (ref === undefined) {\n      return;\n    }\n    current = (setRefFunction as MakeRef<T>).current = ref;\n    currentChangedCallback?.(ref);\n    resolve?.(ref);\n  };\n\n  setRefFunction.current = current as T | null;\n\n  setRefFunction.waitForCurrent = async () => {\n    await currentPromise;\n    return current;\n  };\n\n  return setRefFunction as MakeRef<T>;\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getElement } from '@stencil/core';\nimport { HTMLIxFormComponentElement, IxFormComponent } from '.';\nimport { IxComponent } from '../internal';\n\nexport type ClassMutationObserver = {\n  destroy: () => void;\n};\n\nexport async function isTouched<T>(host: IxFormComponent<T>) {\n  if (typeof host.isTouched === 'function') {\n    return host.isTouched();\n  }\n}\n\nexport async function shouldSuppressInternalValidation<T>(\n  host: IxFormComponent<T>\n) {\n  if (\n    host.getAssociatedFormElement &&\n    typeof host.getAssociatedFormElement === 'function'\n  ) {\n    const form = await host.getAssociatedFormElement();\n\n    if (!form) {\n      return false;\n    }\n\n    return form.noValidate;\n  }\n\n  return false;\n}\n\nexport function createClassMutationObserver(\n  element: HTMLElement,\n  callback: () => void,\n  options?: {\n    includeChildren?: boolean;\n  }\n): ClassMutationObserver {\n  const observer = new MutationObserver(callback);\n  observer.observe(element, {\n    subtree: options?.includeChildren,\n    childList: options?.includeChildren,\n    attributes: true,\n    attributeFilter: ['class'],\n  });\n\n  return {\n    destroy() {\n      observer.disconnect();\n    },\n  };\n}\n\nexport type ValidationResultProperty =\n  | 'isInvalid'\n  | 'isInvalidByRequired'\n  | 'isValid'\n  | 'isInfo'\n  | 'isWarning';\nexport type ValidationResults = Record<ValidationResultProperty, boolean>;\n\nfunction containsClass(\n  hostElement: HTMLIxFormComponentElement<unknown>,\n  className: string,\n  includeChildren: boolean\n) {\n  return (\n    hostElement.classList.contains(`${className}`) ||\n    (includeChildren ? !!hostElement.querySelector(`.${className}`) : false)\n  );\n}\n\nexport function checkFieldClasses(\n  hostElement: HTMLIxFormComponentElement<unknown>,\n  includeChildren = false\n): ValidationResults {\n  return {\n    isInvalid: containsClass(hostElement, 'ix-invalid', includeChildren),\n    isInvalidByRequired: containsClass(\n      hostElement,\n      'ix-invalid--required',\n      includeChildren\n    ),\n    isValid: containsClass(hostElement, 'ix-valid', includeChildren),\n    isInfo: containsClass(hostElement, 'ix-info', includeChildren),\n    isWarning: containsClass(hostElement, 'ix-warning', includeChildren),\n  };\n}\n\nexport function HookValidationLifecycle(options?: {\n  includeChildren?: boolean;\n}) {\n  return (proto: IxComponent, methodName: string) => {\n    let checkIfRequiredFunction: (() => Promise<void>) | null;\n    let classMutationObserver: ClassMutationObserver | null;\n    const { componentWillLoad, disconnectedCallback, connectedCallback } =\n      proto;\n\n    proto.connectedCallback = function () {\n      const host = getElement(\n        this\n      ) as unknown as HTMLIxFormComponentElement<unknown>;\n\n      checkIfRequiredFunction = async () => {\n        const skipValidation = await shouldSuppressInternalValidation(host);\n        if (skipValidation) {\n          return;\n        }\n\n        if (host.hasValidValue && typeof host.hasValidValue === 'function') {\n          const hasValue = await host.hasValidValue();\n          const touched = await isTouched(host);\n\n          if (host.required) {\n            host.classList.toggle('ix-invalid--required', !hasValue && touched);\n          } else {\n            host.classList.remove('ix-invalid--required');\n          }\n        }\n\n        if (\n          host.getValidityState &&\n          typeof host.getValidityState === 'function'\n        ) {\n          const validityState = await host.getValidityState();\n\n          host.classList.toggle(\n            `ix-invalid--validity-patternMismatch`,\n            validityState.patternMismatch\n          );\n        }\n      };\n\n      host.addEventListener('checkedChange', checkIfRequiredFunction);\n      host.addEventListener('valueChange', checkIfRequiredFunction);\n      host.addEventListener('ixBlur', checkIfRequiredFunction);\n      setTimeout(checkIfRequiredFunction);\n      return connectedCallback?.call(this);\n    };\n\n    proto.componentWillLoad = function () {\n      const host = getElement(\n        this\n      ) as unknown as HTMLIxFormComponentElement<unknown>;\n      classMutationObserver = createClassMutationObserver(\n        host,\n        () => {\n          const result = checkFieldClasses(host, options?.includeChildren);\n          proto[methodName].call(this, result);\n        },\n        options\n      );\n      const result = checkFieldClasses(host, options?.includeChildren);\n      proto[methodName].call(this, result);\n      return componentWillLoad?.call(this);\n    };\n\n    proto.disconnectedCallback = function () {\n      const host = getElement(this);\n\n      if (host && classMutationObserver) {\n        classMutationObserver.destroy();\n        classMutationObserver = null;\n      }\n\n      if (host && checkIfRequiredFunction) {\n        host.removeEventListener('checkedChange', checkIfRequiredFunction);\n        host.removeEventListener('valueChange', checkIfRequiredFunction);\n        host.removeEventListener('ixBlur', checkIfRequiredFunction);\n        checkIfRequiredFunction = null;\n      }\n\n      return disconnectedCallback?.call(this);\n    };\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  AttachInternals,\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Fragment,\n  h,\n  Host,\n  Method,\n  Prop,\n  Watch,\n} from '@stencil/core';\nimport { a11yBoolean } from '../utils/a11y';\nimport { HookValidationLifecycle, IxFormComponent } from '../utils/input';\nimport { makeRef } from '../utils/make-ref';\n\n/**\n * @form-ready\n */\n@Component({\n  tag: 'ix-checkbox',\n  styleUrl: 'checkbox.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class Checkbox implements IxFormComponent<string> {\n  @Element() hostElement!: HTMLIxCheckboxElement;\n\n  @AttachInternals() formInternals!: ElementInternals;\n\n  /**\n   * Name of the checkbox component\n   */\n  @Prop({ reflect: true }) name?: string;\n\n  /**\n   * Value of the checkbox component\n   */\n  @Prop({ reflect: true }) value: string = 'on';\n\n  /**\n   * Label for the checkbox component\n   */\n  @Prop() label?: string;\n\n  /**\n   * Checked state of the checkbox component\n   */\n  @Prop({ reflect: true, mutable: true }) checked: boolean = false;\n\n  /**\n   * Disabled state of the checkbox component\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  /**\n   * Indeterminate state of the checkbox component\n   */\n  @Prop({ reflect: true }) indeterminate: boolean = false;\n\n  /**\n   * Required state of the checkbox component.\n   *\n   * If true, checkbox needs to be checked to be valid\n   */\n  @Prop({ reflect: true }) required = false;\n\n  /**\n   * Event emitted when the checked state of the checkbox changes\n   */\n  @Event() checkedChange!: EventEmitter<boolean>;\n\n  /**\n   * Event emitted when the value of the checkbox changes\n   */\n  @Event() valueChange!: EventEmitter<string>;\n\n  /**\n   * Event emitted when the checkbox is blurred\n   */\n  @Event() ixBlur!: EventEmitter<void>;\n\n  private touched = false;\n\n  private readonly inputRef = makeRef<HTMLInputElement>((checkboxRef) => {\n    checkboxRef.checked = this.checked;\n  });\n\n  private setCheckedState(newChecked: boolean) {\n    this.checked = newChecked;\n    this.checkedChange.emit(this.checked);\n  }\n\n  @Watch('checked')\n  onCheckedChange() {\n    this.touched = true;\n    this.updateFormInternalValue();\n  }\n\n  @Watch('value')\n  onValueChange() {\n    this.valueChange.emit(this.value);\n  }\n\n  componentWillLoad() {\n    this.updateFormInternalValue();\n  }\n\n  updateFormInternalValue() {\n    if (this.checked) {\n      this.formInternals.setFormValue(this.value ?? 'on');\n    } else {\n      this.formInternals.setFormValue(null);\n    }\n  }\n\n  /** @internal */\n  @Method()\n  hasValidValue(): Promise<boolean> {\n    return Promise.resolve(this.checked);\n  }\n\n  /** @internal */\n  @Method()\n  getAssociatedFormElement(): Promise<HTMLFormElement | null> {\n    return Promise.resolve(this.formInternals.form);\n  }\n\n  /** @internal */\n  @Method()\n  isTouched(): Promise<boolean> {\n    return Promise.resolve(this.touched);\n  }\n\n  @HookValidationLifecycle()\n  updateClassMappings() {\n    /** This function is intentionally empty */\n  }\n\n  private renderCheckmark() {\n    return (\n      <svg\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        {this.indeterminate && (\n          <Fragment>\n            <rect width=\"18\" height=\"18\" fill=\"transparent\" />\n            <rect\n              x=\"3\"\n              y=\"8\"\n              width=\"12\"\n              height=\"2\"\n              fill=\"var(--ix-checkbox-check-color)\"\n            />\n          </Fragment>\n        )}\n\n        {this.checked && (\n          <path\n            d=\"M3.65625 8.15625L8.4375 12.9375L14.625 3.9375\"\n            stroke=\"var(--ix-checkbox-check-color)\"\n            stroke-width=\"2\"\n          />\n        )}\n      </svg>\n    );\n  }\n\n  render() {\n    return (\n      <Host\n        aria-checked={a11yBoolean(this.checked)}\n        aria-disabled={a11yBoolean(this.disabled)}\n        role=\"checkbox\"\n        class={{\n          disabled: this.disabled,\n          checked: this.checked,\n          indeterminate: this.indeterminate,\n        }}\n        onFocus={() => (this.touched = true)}\n        onBlur={() => this.ixBlur.emit()}\n      >\n        <label>\n          <input\n            aria-checked={a11yBoolean(this.checked)}\n            required={this.required}\n            disabled={this.disabled}\n            checked={this.checked}\n            ref={this.inputRef}\n            type=\"checkbox\"\n            onChange={() => this.setCheckedState(!this.checked)}\n          />\n          <button\n            disabled={this.disabled}\n            class={{\n              checked: this.checked,\n            }}\n            onClick={() => this.setCheckedState(!this.checked)}\n          >\n            {this.renderCheckmark()}\n          </button>\n          <ix-typography\n            format=\"label\"\n            textColor={this.disabled ? 'weak' : 'std'}\n          >\n            {this.label}\n            <slot></slot>\n          </ix-typography>\n        </label>\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'mixins/shadow-dom/component';\n\n:host {\n  --ix-checkbox-check-color: var(--theme-color-primary--contrast);\n\n  @include ix-component;\n  display: inline-block;\n  position: relative;\n\n  button {\n    all: unset;\n    display: inline-flex;\n    position: relative;\n\n    align-items: center;\n    justify-content: center;\n\n    width: 1.125rem;\n    min-width: 1.125rem;\n    max-width: 1.125rem;\n    height: 1.125rem;\n    min-height: 1.125rem;\n    max-height: 1.125rem;\n    margin-right: 0.5rem;\n  }\n\n  button:disabled {\n    background-color: var(--theme-checkbox-unchecked--background--disabled);\n    border: var(--theme-checkbox--border-thickness) solid\n      var(--theme-checkbox-unchecked--border-color--disabled);\n  }\n\n  button:focus-visible {\n    outline: 0.0625rem solid var(--theme-color-focus-bdr);\n    outline-offset: var(--theme-checkbox--focus--outline-offset);\n  }\n\n  input[type='checkbox'] {\n    display: none;\n  }\n\n  label {\n    display: flex;\n\n    justify-content: flex-start;\n    align-items: flex-start;\n\n    width: 100%;\n    height: 100%;\n  }\n\n  ix-typography {\n    margin-top: 0.125rem;\n  }\n}\n\n@mixin checkbox-base() {\n  :host {\n    button {\n      background-color: var(--theme-checkbox-unchecked--background);\n      border: var(--theme-checkbox--border-thickness) solid\n        var(--theme-checkbox-unchecked--border-color);\n    }\n  }\n\n  :host(:hover) {\n    button {\n      background-color: var(--theme-checkbox-unchecked--background--hover);\n      border: var(--theme-checkbox--border-thickness) solid\n        var(--theme-checkbox-unchecked--border-color--hover);\n    }\n  }\n\n  :host(:active) {\n    button {\n      background-color: var(--theme-checkbox-unchecked--background--active);\n      border: var(--theme-checkbox--border-thickness) solid\n        var(--theme-checkbox-unchecked--border-color--active);\n    }\n  }\n\n  :host(.checked),\n  :host(.indeterminate) {\n    button {\n      background-color: var(--theme-checkbox-checked--background);\n      border: var(--theme-checkbox--border-thickness) solid\n        var(--theme-checkbox-checked--border-color);\n    }\n  }\n\n  :host(.checked:hover),\n  :host(.indeterminate:hover) {\n    button {\n      background-color: var(--theme-checkbox-checked--background--hover);\n      border: var(--theme-checkbox--border-thickness) solid\n        var(--theme-checkbox-checked--border-color--hover);\n    }\n  }\n\n  :host(.checked:active),\n  :host(.indeterminate:active) {\n    button {\n      background-color: var(--theme-checkbox-checked--background--active);\n      border: var(--theme-checkbox--border-thickness) solid\n        var(--theme-checkbox-checked--border-color--active);\n    }\n  }\n\n  :host(.disabled) {\n    button {\n      background-color: var(--theme-checkbox-unchecked--background--disabled);\n      border: var(--theme-checkbox--border-thickness) solid\n        var(--theme-checkbox-unchecked--border-color--disabled);\n    }\n  }\n\n  :host(.checked.disabled),\n  :host(.indeterminate.disabled) {\n    button {\n      background-color: var(--theme-checkbox-checked--background--disabled);\n      border: var(--theme-checkbox--border-thickness) solid\n        var(--theme-checkbox-checked--border-color--disabled);\n    }\n  }\n}\n\n@mixin checkbox-variant($selector) {\n  :host(#{$selector}) {\n    button {\n      @content;\n      background-color: var(--theme-checkbox-unchecked--background);\n      border: var(--theme-checkbox--border-thickness) solid\n        var(--theme-checkbox-unchecked--border-color);\n    }\n  }\n\n  :host(#{$selector}:hover) {\n    button {\n      background-color: var(--theme-checkbox-unchecked--background--hover);\n      border: var(--theme-checkbox--border-thickness) solid\n        var(--theme-checkbox-unchecked--border-color--hover);\n    }\n  }\n\n  :host(#{$selector}:active) {\n    button {\n      background-color: var(--theme-checkbox-unchecked--background--active);\n      border: var(--theme-checkbox--border-thickness) solid\n        var(--theme-checkbox-unchecked--border-color--active);\n    }\n  }\n\n  :host(#{$selector}.checked),\n  :host(#{$selector}.indeterminate) {\n    button {\n      background-color: var(--theme-checkbox-checked--background);\n      border: var(--theme-checkbox--border-thickness) solid\n        var(--theme-checkbox-checked--border-color);\n    }\n  }\n\n  :host(#{$selector}.checked:hover),\n  :host(#{$selector}.indeterminate:hover) {\n    button {\n      background-color: var(--theme-checkbox-checked--background--hover);\n      border: var(--theme-checkbox--border-thickness) solid\n        var(--theme-checkbox-checked--border-color--hover);\n    }\n  }\n\n  :host(#{$selector}.checked:active),\n  :host(#{$selector}.indeterminate:active) {\n    button {\n      background-color: var(--theme-checkbox-checked--background--active);\n      border: var(--theme-checkbox--border-thickness) solid\n        var(--theme-checkbox-checked--border-color--active);\n    }\n  }\n\n  :host(#{$selector}.disabled) {\n    button {\n      background-color: var(--theme-checkbox-unchecked--background--disabled);\n      border: var(--theme-checkbox--border-thickness) solid\n        var(--theme-checkbox-unchecked--border-color--disabled);\n    }\n  }\n\n  :host(#{$selector}.checked.disabled),\n  :host(#{$selector}.indeterminate.disabled) {\n    button {\n      background-color: var(--theme-checkbox-checked--background--disabled);\n      border: var(--theme-checkbox--border-thickness) solid\n        var(--theme-checkbox-checked--border-color--disabled);\n    }\n  }\n}\n\n@mixin define-checkbox-vars($state, $type) {\n  --theme-checkbox-#{$state}--background: var(\n    --theme-checkbox-#{$state}--background--#{$type}\n  );\n  --theme-checkbox-#{$state}--background--hover: var(\n    --theme-checkbox-#{$state}--background--#{$type}--hover\n  );\n  --theme-checkbox-#{$state}--background--active: var(\n    --theme-checkbox-#{$state}--background--#{$type}--active\n  );\n\n  --theme-checkbox-#{$state}--border-color: var(\n    --theme-checkbox-#{$state}--border-color--#{$type}\n  );\n  --theme-checkbox-#{$state}--border-color--hover: var(\n    --theme-checkbox-#{$state}--border-color--#{$type}--hover\n  );\n  --theme-checkbox-#{$state}--border-color--active: var(\n    --theme-checkbox-#{$state}--border-color--#{$type}--active\n  );\n}\n\n@include checkbox-base();\n@include checkbox-variant($selector: '.ix-info') {\n  @include define-checkbox-vars('unchecked', 'info');\n  @include define-checkbox-vars('checked', 'info');\n  @include define-checkbox-vars('mixed', 'info');\n}\n\n@include checkbox-variant($selector: '.ix-warning') {\n  @include define-checkbox-vars('unchecked', 'warning');\n  @include define-checkbox-vars('checked', 'warning');\n  @include define-checkbox-vars('mixed', 'warning');\n}\n\n@include checkbox-variant($selector: '.ix-invalid--required') {\n  @include define-checkbox-vars('unchecked', 'invalid');\n  @include define-checkbox-vars('checked', 'invalid');\n  @include define-checkbox-vars('mixed', 'invalid');\n}\n\n@include checkbox-variant($selector: '.ix-invalid') {\n  @include define-checkbox-vars('unchecked', 'invalid');\n  @include define-checkbox-vars('checked', 'invalid');\n  @include define-checkbox-vars('mixed', 'invalid');\n}\n\n:host(.disabled) {\n  pointer-events: none;\n\n  button,\n  label,\n  input {\n    pointer-events: none;\n  }\n}\n"],"names":["a11yBoolean","value","getFallbackLabelFromIconName","iconName","link","url","URL","e","protocol","isHttpUrl","startsWith","label","replace","split","map","word","trimWord","trim","digitLessWord","length","charAt","toUpperCase","slice","join","a11yHostAttributes","hostElement","ignoreAttributes","arguments","undefined","attributeObject","a11yAttributes","forEach","attr","hasAttribute","getAttribute","includes","_a","removeAttribute","makeRef","currentChangedCallback","resolve","current","currentPromise","Promise","res","setRefFunction","ref","waitForCurrent","async","shouldSuppressInternalValidation","host","getAssociatedFormElement","form","noValidate","createClassMutationObserver","element","callback","options","observer","MutationObserver","observe","subtree","includeChildren","childList","attributes","attributeFilter","destroy","disconnect","containsClass","className","classList","contains","concat","querySelector","checkFieldClasses","isInvalid","isInvalidByRequired","isValid","isInfo","isWarning","HookValidationLifecycle","proto","methodName","checkIfRequiredFunction","classMutationObserver","componentWillLoad","disconnectedCallback","connectedCallback","getElement","this","hasValidValue","hasValue","touched","isTouched","required","toggle","remove","getValidityState","validityState","patternMismatch","addEventListener","setTimeout","call","result","removeEventListener","Checkbox","constructor","hostRef","checked","disabled","indeterminate","inputRef","checkboxRef","setCheckedState","newChecked","checkedChange","emit","onCheckedChange","updateFormInternalValue","onValueChange","valueChange","formInternals","setFormValue","updateClassMappings","renderCheckmark","h","width","height","viewBox","fill","xmlns","Fragment","x","y","d","stroke","render","Host","key","role","class","onFocus","onBlur","ixBlur","type","onChange","onClick","format","textColor","__decorate","prototype"],"sourceRoot":""}