{"version":3,"file":"static/js/2208.0a1af5ef.chunk.js","mappings":"+LAaA,IAAIA,EAAqB,EACzB,MAAMC,EAAoB,WACxB,MAAO,CADmCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,oBAC1BF,KAAsBK,KAAK,IAC7C,EAYaC,EAAa,MAL1BC,WAAAA,CAAAC,I,sEASU,KAAQC,UAAG,EASV,KAAaC,eAAG,CA4E1B,CAzECC,qBAAAA,GACEC,KAAKF,eAAiBE,KAAKH,Q,CAG7B,mBAAII,GACF,OAAOD,KAAKE,YAAYC,WAAYC,cAAc,kB,CAGpDC,mBAAAA,CAAoBC,GAClBA,EAAMC,iBACND,EAAME,kBACNR,KAAKF,eAAiBE,KAAKF,cAC3BE,KAAKS,gBAAgBC,KAAK,CACxBC,OAAQX,KAAKF,cACbc,YAAaN,IAGXN,KAAKF,eACPE,KAAKa,+B,CAIDA,6BAAAA,GACNC,YAAW,KACId,KAAKC,gBAAiBc,wBAC1BC,OAASC,OAAOC,aACvBlB,KAAKE,YACFC,WAAYC,cAAc,mBAC1Be,gBAAe,KAEnB,I,CAGLC,iBAAAA,GACEpB,KAAKD,uB,CAGPsB,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAK,CAAAC,IAAA,2CAAAC,KAAK,mBACTH,EAAAA,EAAAA,GACE,UAAAE,IAAA,2CAAAE,SAAU,EACVC,MAAO,CAAE,iBAAiB,EAAMC,KAAM5B,KAAKF,eAC3C+B,QAAUvB,GAAUN,KAAKK,oBAAoBC,GAC7CwB,KAAK,SACLC,KAAK,SAAQ,gBACE/B,KAAKF,cACL,gBAAAT,MAEfiC,EAAAA,EAAAA,GAAA,WAAAE,IAAA,2CACEQ,KAAMC,EAAAA,EACNN,MAAO,CACL,eAAe,EACfC,KAAM5B,KAAKF,mBAIjBwB,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CACEG,MAAO,CACL,kBAAkB,EAClBC,KAAM5B,KAAKF,iBAGbwB,EAAAA,EAAAA,GAAK,OAAAE,IAAA,2CAAAG,MAAM,yBACTL,EAAAA,EAAAA,GAAK,OAAAE,IAAA,2CAAAG,MAAM,wBACTL,EAAAA,EAAAA,GAAA,QAAAE,IAAA,+CAEFF,EAAAA,EAAAA,GAAK,OAAAE,IAAA,2CAAAG,MAAM,4B,kHC/GE,4tFCAzB,MCUaO,EAAU,M,+BACrBb,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAAAC,IAAA,6CACHF,EAAAA,EAAAA,GAAa,QAAAE,IAAA,8CACbF,EAAAA,EAAAA,GAAK,OAAAE,IAAA,2CAAAG,MAAM,kBACTL,EAAAA,EAAAA,GAAA,QAAAE,IAAA,2CAAMQ,KAAK,mB,WDhBA,6P","sources":["../node_modules/@siemens/ix/dist/esm/src/components/card-accordion/card-accordion.tsx","../node_modules/@siemens/ix/dist/esm/src/components/card-accordion/card-accordion.scss?tag=ix-card-accordion&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/card-title/card-title.scss?tag=ix-card-title&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/card-title/card-title.tsx"],"sourcesContent":["import { iconChevronRightSmall } from '@siemens/ix-icons/icons';\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\n\nlet accordionControlId = 0;\nconst getAriaControlsId = (prefix: string = 'expand-content') => {\n  return [prefix, accordionControlId++].join('-');\n};\n\nexport type CardAccordionExpandChangeEvent = {\n  expand: boolean;\n  nativeEvent: Event;\n};\n\n@Component({\n  tag: 'ix-card-accordion',\n  styleUrl: 'card-accordion.scss',\n  shadow: true,\n})\nexport class CardAccordion {\n  /**\n   * Collapse the card\n   */\n  @Prop() collapse = false;\n\n  @Element() hostElement!: HTMLIxCardAccordionElement;\n\n  /**\n   * @internal\n   */\n  @Event() accordionExpand!: EventEmitter<CardAccordionExpandChangeEvent>;\n\n  @State() expandContent = false;\n\n  @Watch('collapse')\n  onInitialExpandChange() {\n    this.expandContent = !this.collapse;\n  }\n\n  get expandedContent() {\n    return this.hostElement.shadowRoot!.querySelector('.expand-content');\n  }\n\n  onExpandActionClick(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.expandContent = !this.expandContent;\n    this.accordionExpand.emit({\n      expand: this.expandContent,\n      nativeEvent: event,\n    });\n\n    if (this.expandContent) {\n      this.scrollExpandedContentIntoView();\n    }\n  }\n\n  private scrollExpandedContentIntoView() {\n    setTimeout(() => {\n      const rect = this.expandedContent!.getBoundingClientRect();\n      if (rect.bottom > window.innerHeight) {\n        this.hostElement\n          .shadowRoot!.querySelector('.expand-content')!\n          .scrollIntoView(false);\n      }\n    }, 150);\n  }\n\n  componentWillLoad() {\n    this.onInitialExpandChange();\n  }\n\n  render() {\n    return (\n      <Host slot=\"card-accordion\">\n        <button\n          tabIndex={0}\n          class={{ 'expand-action': true, show: this.expandContent }}\n          onClick={(event) => this.onExpandActionClick(event)}\n          role=\"button\"\n          type=\"button\"\n          aria-expanded={this.expandContent}\n          aria-controls={getAriaControlsId()}\n        >\n          <ix-icon\n            name={iconChevronRightSmall}\n            class={{\n              'expand-icon': true,\n              show: this.expandContent,\n            }}\n          ></ix-icon>\n        </button>\n        <div\n          class={{\n            'expand-content': true,\n            show: this.expandContent,\n          }}\n        >\n          <div class=\"expand-content-inner\">\n            <div class=\"expand-content-body\">\n              <slot></slot>\n            </div>\n            <div class=\"expand-content-footer\"></div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'mixins/hover';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  width: 100%;\n  transition: var(--theme-default-time) ease-in-out;\n\n  .expand-action {\n    all: unset;\n    display: flex;\n    position: relative;\n\n    appearance: button;\n\n    height: 2.5rem;\n    width: 100%;\n\n    background-color: var(--theme-color-component-1);\n    align-items: center;\n    justify-content: flex-start;\n\n    &:hover {\n      background: var(--theme-color-component-1--hover);\n    }\n\n    &:active {\n      background: var(--theme-color-component-1--active);\n    }\n\n    @include focus-visible {\n      outline: 1px solid var(--theme-color-focus-bdr);\n      outline-offset: var(--theme-btn--focus--outline-offset);\n    }\n  }\n\n  .expand-action::before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: var(--ix-card-background);\n    z-index: -1;\n  }\n\n  .expand-action:not(.show),\n  .expand-action:not(.show)::before {\n    border-bottom-left-radius: var(--theme-default-border-radius);\n    border-bottom-right-radius: var(--theme-default-border-radius);\n  }\n\n  .expand-icon {\n    margin-left: 0.5rem;\n    transition: var(--theme-default-time) transform ease-in-out;\n  }\n\n  .expand-icon.show {\n    transform: rotate(90deg);\n  }\n\n  .expand-content {\n    display: grid;\n    position: relative;\n    grid-template-rows: 0fr;\n    transition: var(--theme-default-time) ease-in-out;\n    width: 100%;\n    max-height: 14.75rem;\n    opacity: 0;\n    background-color: var(--theme-color-component-1);\n  }\n\n  .expand-content.show {\n    grid-template-rows: 14.75rem;\n    opacity: 1;\n  }\n\n  .expand-content-inner {\n    position: relative;\n    height: 100%;\n    overflow: hidden;\n  }\n\n  .expand-content.show .expand-content-body {\n    display: none;\n    overflow: hidden;\n    color: var(--theme-color-std-text);\n  }\n\n  .expand-content.show .expand-content-body {\n    display: block;\n    overflow: auto;\n    height: calc(100% - 1rem);\n  }\n\n  .expand-content-footer {\n    display: block;\n    position: relative;\n    width: 100%;\n    height: 1rem;\n\n    margin-top: auto;\n    margin-bottom: 0px;\n\n    background-color: var(--theme-color-component-1);\n    border-bottom-left-radius: var(--theme-default-border-radius);\n    border-bottom-right-radius: var(--theme-default-border-radius);\n  }\n}\n","@import 'common-variables';\n\n:host {\n  display: flex;\n  position: relative;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 0.25rem;\n  margin-bottom: 0.25rem;\n  gap: $default-space;\n\n  width: 100%;\n\n  .title-actions {\n    display: flex;\n    position: relative;\n    flex-direction: row;\n    gap: 0.25rem;\n    margin-left: auto;\n    margin-right: 0;\n  }\n}\n","import { Component, h, Host } from '@stencil/core';\n\n/**\n * @slot title-actions - Place additional actions inside title\n */\n@Component({\n  tag: 'ix-card-title',\n  styleUrl: 'card-title.scss',\n  shadow: true,\n})\nexport class CardHeader {\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n        <div class=\"title-actions\">\n          <slot name=\"title-actions\"></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"names":["accordionControlId","getAriaControlsId","arguments","length","undefined","join","CardAccordion","constructor","hostRef","collapse","expandContent","onInitialExpandChange","this","expandedContent","hostElement","shadowRoot","querySelector","onExpandActionClick","event","preventDefault","stopPropagation","accordionExpand","emit","expand","nativeEvent","scrollExpandedContentIntoView","setTimeout","getBoundingClientRect","bottom","window","innerHeight","scrollIntoView","componentWillLoad","render","h","Host","key","slot","tabIndex","class","show","onClick","role","type","name","iconChevronRightSmall","CardHeader"],"sourceRoot":""}