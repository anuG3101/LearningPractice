{"version":3,"file":"static/js/8164.8e7a1834.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/mutation-observer.ts","../node_modules/@siemens/ix/dist/esm/src/components/flip-tile/flip-tile.scss?tag=ix-flip-tile&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/flip-tile/flip-tile.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const createMutationObserver = (callback: MutationCallback) =>\n  new MutationObserver(callback);\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/animations';\n@import 'mixins/text-truncation';\n@import 'mixins/shadow-dom/component';\n@import 'legacy/fonts';\n\n@include keyframes(flip-animation) {\n  0% {\n    transform: rotateY(0);\n  }\n  50% {\n    transform: rotateY(90deg);\n  }\n  51% {\n    transform: rotateY(270deg);\n  }\n  100% {\n    transform: rotateY(360deg);\n  }\n}\n\n:host {\n  @include ix-component;\n  display: flex;\n  flex-direction: column;\n  perspective: 1000px;\n\n  .flip-tile-header {\n    display: flex;\n    align-items: center;\n    height: $large-control-height;\n    padding: 0 $small-space 0 $default-space;\n\n    .header-slot-container {\n      @include ellipsis;\n      flex-grow: 1;\n      min-width: 0;\n    }\n  }\n\n  .content-container {\n    flex-grow: 1;\n    margin: $default-space;\n  }\n\n  .flip-tile-container {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    background-color: var(--theme-blind-base--background);\n    border: solid 1px var(--theme-blind-base--border-color);\n    border-radius: var(--theme-flip-tile--border-radius)\n      var(--theme-flip-tile--border-radius) 0 0;\n    transform-style: preserve-3d;\n\n    &.flip-animation-active {\n      @include animation(flip-animation, 2 * $default-time, ease-in-out);\n    }\n\n    .footer {\n      display: flex;\n      height: 3rem;\n      align-items: center;\n      justify-content: center;\n      padding: 0 $small-space;\n      color: var(--theme-flip-footer--color);\n      background-color: var(--theme-blind-base--background);\n\n      :first-child {\n        @include ellipsis;\n        height: 100%;\n      }\n    }\n\n    ::slotted(*) {\n      @include ellipsis;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      min-width: 0;\n    }\n\n    &.primary {\n      border-color: var(--theme-color-primary);\n\n      .footer {\n        background-color: var(--theme-color-primary);\n        color: var(--theme-color-primary--contrast);\n      }\n    }\n\n    &.info {\n      border-color: var(--theme-color-info);\n\n      .footer {\n        background-color: var(--theme-color-info);\n        color: var(--theme-color-info--contrast);\n      }\n    }\n\n    &.warning {\n      border-color: var(--theme-color-warning);\n\n      .footer {\n        background-color: var(--theme-color-warning);\n        color: var(--theme-color-warning--contrast);\n      }\n    }\n\n    &.alarm {\n      border-color: var(--theme-color-alarm);\n\n      .footer {\n        background-color: var(--theme-color-alarm);\n        color: var(--theme-color-alarm--contrast);\n      }\n    }\n  }\n\n  &:hover .flip-tile-container .footer ix-icon {\n    color: var(--theme-color-std-text);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { createMutationObserver } from '../utils/mutation-observer';\nimport { FlipTileState } from './flip-tile-state';\nimport { iconEye } from '@siemens/ix-icons/icons';\n\n@Component({\n  tag: 'ix-flip-tile',\n  styleUrl: 'flip-tile.scss',\n  shadow: true,\n})\nexport class FlipTile {\n  @Element() hostElement!: HTMLIxFlipTileElement;\n\n  /**\n   * Variation of the Flip\n   */\n  @Prop() state?: FlipTileState;\n\n  /**\n   * Height interpreted as REM\n   */\n  @Prop() height: number | 'auto' = 15.125;\n\n  /**\n   * Width interpreted as REM\n   */\n  @Prop() width: number | 'auto' = 16;\n\n  /**\n   * Index of the currently visible content\n   * @since 3.0.0\n   */\n  @Prop() index = 0;\n\n  /**\n   * Event emitted when the index changes\n   * @since 3.0.0\n   */\n  @Event() toggle!: EventEmitter<number>;\n\n  @State() isFlipAnimationActive: boolean = false;\n\n  private readonly ANIMATION_DURATION = 150;\n  private contentItems: Array<HTMLIxFlipTileContentElement> = [];\n  private observer?: MutationObserver;\n\n  @Watch('index')\n  watchIndex(newIndex: number, oldIndex: number) {\n    if (newIndex === oldIndex) {\n      return;\n    }\n\n    this.doFlipAnimation(newIndex);\n  }\n\n  componentDidLoad() {\n    this.observer = createMutationObserver(() => this.updateContentItems());\n    this.observer.observe(this.hostElement, {\n      childList: true,\n    });\n  }\n\n  componentWillLoad() {\n    this.updateContentItems();\n    this.updateContentVisibility(this.index);\n  }\n\n  disconnectedCallback() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  private updateContentItems() {\n    this.contentItems = Array.from(\n      this.hostElement.querySelectorAll('ix-flip-tile-content')\n    );\n  }\n\n  private updateContentVisibility(indexVisible: number) {\n    this.contentItems.forEach(\n      (content, index) => (content.contentVisible = index === indexVisible)\n    );\n  }\n\n  private toggleIndex() {\n    let newIndex;\n\n    if (this.index >= this.contentItems.length - 1) {\n      newIndex = 0;\n    } else {\n      newIndex = this.index + 1;\n    }\n\n    const { defaultPrevented } = this.toggle.emit(newIndex);\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    this.doFlipAnimation(newIndex);\n  }\n\n  private doFlipAnimation(index: number) {\n    if (this.isFlipAnimationActive) {\n      return;\n    }\n\n    this.isFlipAnimationActive = true;\n\n    setTimeout(() => {\n      this.index = index;\n\n      this.updateContentVisibility(this.index);\n    }, this.ANIMATION_DURATION);\n\n    setTimeout(() => {\n      this.isFlipAnimationActive = false;\n    }, 2 * this.ANIMATION_DURATION);\n  }\n\n  render() {\n    return (\n      <Host\n        style={{\n          height: `${this.height}${this.height === 'auto' ? '' : 'rem'}`,\n          'min-height': `${this.height}${this.height === 'auto' ? '' : 'rem'}`,\n          'max-height': `${this.height}${this.height === 'auto' ? '' : 'rem'}`,\n          width: `${this.width}${this.width === 'auto' ? '' : 'rem'}`,\n          'min-width': `${this.width}${this.width === 'auto' ? '' : 'rem'}`,\n          'max-width': `${this.width}${this.width === 'auto' ? '' : 'rem'}`,\n        }}\n      >\n        <div\n          class={{\n            'flip-tile-container': true,\n            info: this.state === FlipTileState.Info,\n            warning: this.state === FlipTileState.Warning,\n            alarm: this.state === FlipTileState.Alarm,\n            primary: this.state === FlipTileState.Primary,\n            'flip-animation-active': this.isFlipAnimationActive,\n          }}\n        >\n          <div class=\"flip-tile-header\">\n            <div class=\"header-slot-container text-l-title\">\n              <slot name=\"header\"></slot>\n            </div>\n            <ix-icon-button\n              icon={iconEye}\n              variant=\"primary\"\n              ghost\n              onClick={() => this.toggleIndex()}\n            ></ix-icon-button>\n          </div>\n\n          <div class=\"content-container\">\n            <slot></slot>\n          </div>\n          <div\n            class={{\n              footer: true,\n              'contrast-light': this.state === FlipTileState.Warning,\n              'contrast-dark':\n                this.state === FlipTileState.Info ||\n                this.state === FlipTileState.Alarm,\n            }}\n          >\n            <slot name=\"footer\"></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"names":["createMutationObserver","callback","MutationObserver","FlipTile","constructor","hostRef","height","width","index","isFlipAnimationActive","ANIMATION_DURATION","contentItems","watchIndex","newIndex","oldIndex","this","doFlipAnimation","componentDidLoad","observer","updateContentItems","observe","hostElement","childList","componentWillLoad","updateContentVisibility","disconnectedCallback","disconnect","Array","from","querySelectorAll","indexVisible","forEach","content","contentVisible","toggleIndex","length","defaultPrevented","toggle","emit","setTimeout","render","h","Host","key","style","concat","class","info","state","FlipTileState","Info","warning","Warning","alarm","Alarm","primary","Primary","name","icon","iconEye","variant","ghost","onClick","footer"],"sourceRoot":""}