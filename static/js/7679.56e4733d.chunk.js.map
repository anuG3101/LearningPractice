{"version":3,"file":"static/js/7679.56e4733d.chunk.js","mappings":"4HASO,MAAMA,EAA0BC,GACrC,IAAIC,iBAAiBD,E,gGCVvB,MCmBaE,EAAS,MALtBC,WAAAA,CAAAC,I,eAMmB,KAAAC,kBAAmBN,EAAAA,EAAAA,GAClCO,KAAKC,WAAWC,KAAKF,OAcf,KAAUG,WAAuB,IAKjC,KAAOC,SAAG,EAKV,KAAQC,UAAG,EAKX,KAAOC,SAAG,CAuInB,CApICC,YAAAA,CAAaD,GACXN,KAAKQ,cAAcF,E,CAGrBG,gBAAAA,GAKE,GAJIT,KAAKK,UACPL,KAAKU,iBAGFC,OAAOC,MAAMD,OAAOX,KAAKG,aAAc,CAC1C,MAAMU,GAASC,EAAAA,EAAAA,GAAmBd,KAAKG,YACvCH,KAAKe,YACFC,iBAAiB,sBACjBC,SAASC,IACRlB,KAAKmB,gBAAgBD,EAAqBL,K,CAIhDb,KAAKQ,cAAcR,KAAKM,SAExBN,KAAKD,iBAAiBqB,QAAQpB,KAAKe,YAAa,CAC9CM,WAAW,EACXC,SAAS,G,CAILrB,UAAAA,CAAWsB,GACjBvB,KAAKwB,iBAAiBC,MAAK,KACzB,IAAKd,OAAOC,MAAMD,OAAOX,KAAKG,aAAc,CAC1C,MAAMU,GAASC,EAAAA,EAAAA,GAAmBd,KAAKG,YAChBH,KAAK0B,mBAAmBH,GAChCN,SAASC,GAASlB,KAAKmB,gBAAgBD,EAAML,I,CAG9Db,KAAKQ,cAAcR,KAAKM,SACxBN,KAAKU,kB,CAIDgB,kBAAAA,CAAmBH,GACzB,MAAMI,EAAgC,GAgBtC,OAdAJ,EAAgBN,SAASW,IACD,cAAlBA,EAASC,MAIbD,EAASE,WAAWb,SAASc,IAC3B,MAAMC,EAAUD,EAEQ,uBAApBC,EAAQC,SACVN,EAAeO,KAAKF,SAKnBL,C,CAGDR,eAAAA,CAAgBD,EAAmBL,GACzCK,EAAKiB,MAAMC,YAAY,2BAA4BvB,E,CAG7CW,cAAAA,GACN,OAAO,IAAIa,SAASC,IACbtC,KAAKK,UACRiC,IAGF,MAEMC,EAAcvC,KAAKe,YAAYyB,WAAYC,cAAc,OAE/DC,EAAAA,EAAAA,GAAM,CACJC,QAASJ,EACTK,QANgB,CAAC,CAAEA,QAAS,EAAGC,OAAQ,cAAgB,CAAED,QAAS,IAOlEE,SAAUlD,EAAUmD,gBACpBC,SAAUA,KACRV,S,CAMA5B,aAAAA,GACN,IAAKV,KAAKK,SACR,OAGgBL,KAAKe,YAAYC,iBAAiB,sBAC1CC,SAAQ,CAACgC,EAAGC,KACpB,MAAMC,EAAY,GAAJD,EACRE,EAASD,GAASA,EAAQvD,EAAUyD,iBAC1CX,EAAAA,EAAAA,GAAM,CACJC,QAASM,EACTG,OAAQA,EACRN,SAAUlD,EAAUyD,eAAiBF,EACrCP,QAAS,CAAC,EAAG,GACbC,OAAQ,gBACRM,MAAOA,EACPG,UAAU,M,CAKR9C,aAAAA,CAAcF,GACFN,KAAKe,YAAYC,iBAAiB,sBAE1CC,SAASgC,IACb3C,EACF2C,EAAEM,aAAa,UAAW,aACLC,IAAZlD,GACT2C,EAAEQ,gBAAgB,a,CAKxBC,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAAAC,IAAA,2CACHC,MAAO,CACL,cAAmC,MAApB9D,KAAKG,WACpB,cAAmC,MAApBH,KAAKG,WACpBC,QAASJ,KAAKI,WAGhBuD,EAAAA,EAAAA,GAAK,OAAAE,IAAA,2CAAAE,KAAK,SACRJ,EAAAA,EAAAA,GAAa,QAAAE,IAAA,8C,gGA5JGjE,EAAemD,gBAAG,GAClBnD,EAAcyD,eAAG,I,QDzBtB,q9B,kCESR,MAAAvC,EAAsBkD,GAE1B,GAAPC,OADiBD,EAAQ,GACP,M","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/mutation-observer.ts","../node_modules/@siemens/ix/dist/esm/src/components/event-list/event-list.scss?tag=ix-event-list&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/event-list/event-list.tsx","../node_modules/@siemens/ix/dist/esm/src/components/utils/rwd.util.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const createMutationObserver = (callback: MutationCallback) =>\n  new MutationObserver(callback);\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  display: block;\n  position: relative;\n}\n\n:host(.item-size-l) {\n  --event-list-item-height: 6.5rem;\n  --event-list-item-content-white-space: normal;\n}\n\n:host(.compact) {\n  --event-list-item-border-radius: 0;\n  --event-list-item-margin-bottom: 0;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Element, h, Host, Prop, Watch } from '@stencil/core';\nimport { createMutationObserver } from '../utils/mutation-observer';\nimport { convertToRemString } from '../utils/rwd.util';\nimport anime from 'animejs';\n\n@Component({\n  tag: 'ix-event-list',\n  styleUrl: 'event-list.scss',\n  shadow: true,\n})\nexport class EventList {\n  private readonly mutationObserver = createMutationObserver(\n    this.onMutation.bind(this)\n  );\n\n  private static readonly fadeOutDuration = 50;\n  private static readonly fadeInDuration = 150;\n\n  @Element() hostElement!: HTMLIxEventListElement;\n\n  /**\n   * Determines the height of list items.\n   * This can either be one of two predefined sizes ('S' or 'L') or an absolute pixel value.\n   * In case a number is supplied it will get converted to rem internally.\n   * Defaults to 'S'.\n   */\n  @Prop() itemHeight: 'S' | 'L' | number = 'S';\n\n  /**\n   * Make event-list items more compact\n   */\n  @Prop() compact = false;\n\n  /**\n   * Animate state change transitions. Defaults to 'true'.\n   */\n  @Prop() animated = true;\n\n  /**\n   * Display a chevron icon in list items. Defaults to 'false'\n   */\n  @Prop() chevron = false;\n\n  @Watch('chevron')\n  watchChevron(chevron: boolean | undefined) {\n    this.handleChevron(chevron);\n  }\n\n  componentDidLoad() {\n    if (this.animated) {\n      this.triggerFadeIn();\n    }\n\n    if (!Number.isNaN(Number(this.itemHeight))) {\n      const height = convertToRemString(this.itemHeight as number);\n      this.hostElement\n        .querySelectorAll('ix-event-list-item')\n        .forEach((item) => {\n          this.setCustomHeight(item as HTMLElement, height);\n        });\n    }\n\n    this.handleChevron(this.chevron);\n\n    this.mutationObserver.observe(this.hostElement, {\n      childList: true,\n      subtree: true,\n    });\n  }\n\n  private onMutation(mutationRecords: Array<MutationRecord>) {\n    this.triggerFadeOut().then(() => {\n      if (!Number.isNaN(Number(this.itemHeight))) {\n        const height = convertToRemString(this.itemHeight as number);\n        const eventListItems = this.findEventListItems(mutationRecords);\n        eventListItems.forEach((item) => this.setCustomHeight(item, height));\n      }\n\n      this.handleChevron(this.chevron);\n      this.triggerFadeIn();\n    });\n  }\n\n  private findEventListItems(mutationRecords: MutationRecord[]): HTMLElement[] {\n    const eventListItems: HTMLElement[] = [];\n\n    mutationRecords.forEach((mutation) => {\n      if (mutation.type !== 'childList') {\n        return;\n      }\n\n      mutation.addedNodes.forEach((node) => {\n        const element = node as HTMLElement;\n\n        if (element.tagName === 'IX-EVENT-LIST-ITEM') {\n          eventListItems.push(element);\n        }\n      });\n    });\n\n    return eventListItems;\n  }\n\n  private setCustomHeight(item: HTMLElement, height: string) {\n    item.style.setProperty('--event-list-item-height', height);\n  }\n\n  private triggerFadeOut(): Promise<void> {\n    return new Promise((resolve) => {\n      if (!this.animated) {\n        resolve();\n      }\n\n      const keyframes = [{ opacity: 1, easing: 'easeInSine' }, { opacity: 0 }];\n\n      const listElement = this.hostElement.shadowRoot!.querySelector('ul');\n\n      anime({\n        targets: listElement,\n        opacity: keyframes,\n        duration: EventList.fadeOutDuration,\n        complete: () => {\n          resolve();\n        },\n      });\n    });\n  }\n\n  private triggerFadeIn() {\n    if (!this.animated) {\n      return;\n    }\n\n    const listItems = this.hostElement.querySelectorAll('ix-event-list-item');\n    listItems.forEach((e, i) => {\n      const delay = i * 80;\n      const offset = delay / (delay + EventList.fadeInDuration);\n      anime({\n        targets: e,\n        offset: offset,\n        duration: EventList.fadeInDuration + delay,\n        opacity: [0, 1],\n        easing: 'easeInOutSine',\n        delay: delay,\n        autoplay: true,\n      });\n    });\n  }\n\n  private handleChevron(chevron: boolean | undefined): void {\n    const listItems = this.hostElement.querySelectorAll('ix-event-list-item');\n\n    listItems.forEach((e) => {\n      if (chevron) {\n        e.setAttribute('chevron', 'true');\n      } else if (chevron !== undefined) {\n        e.removeAttribute('chevron');\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Host\n        class={{\n          'item-size-s': this.itemHeight === 'S',\n          'item-size-l': this.itemHeight === 'L',\n          compact: this.compact,\n        }}\n      >\n        <div role=\"list\">\n          <slot></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const convertToRemString = (value: number) => {\n  const valueRem = value / 16;\n  return `${valueRem}rem`;\n};\n\nexport const convertToAbbreviationString = (num: number) => {\n  if (isNaN(num) || num === null || num === undefined) {\n    return '';\n  }\n\n  let unit = '';\n\n  // Metric Units\n  const units = [\n    { unit: 'q', value: Math.pow(10, 15) },\n    { unit: 't', value: Math.pow(10, 12) },\n    { unit: 'B', value: Math.pow(10, 9) },\n    { unit: 'M', value: Math.pow(10, 6) },\n    { unit: 'K', value: Math.pow(10, 3) },\n  ];\n\n  units.some((pow) => {\n    let formattedNum = Math.abs(num);\n    if (formattedNum >= pow.value) {\n      formattedNum /= pow.value;\n      num = Math.round(formattedNum * 10) / 10;\n      unit = pow.unit;\n      return true;\n    }\n\n    return false;\n  });\n\n  return num + unit;\n};\n"],"names":["createMutationObserver","callback","MutationObserver","EventList","constructor","hostRef","mutationObserver","this","onMutation","bind","itemHeight","compact","animated","chevron","watchChevron","handleChevron","componentDidLoad","triggerFadeIn","Number","isNaN","height","convertToRemString","hostElement","querySelectorAll","forEach","item","setCustomHeight","observe","childList","subtree","mutationRecords","triggerFadeOut","then","findEventListItems","eventListItems","mutation","type","addedNodes","node","element","tagName","push","style","setProperty","Promise","resolve","listElement","shadowRoot","querySelector","anime","targets","opacity","easing","duration","fadeOutDuration","complete","e","i","delay","offset","fadeInDuration","autoplay","setAttribute","undefined","removeAttribute","render","h","Host","key","class","role","value","concat"],"sourceRoot":""}