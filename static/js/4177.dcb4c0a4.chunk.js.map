{"version":3,"file":"static/js/4177.dcb4c0a4.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/breakpoints.ts","../node_modules/@siemens/ix/dist/esm/src/components/pane-layout/pane-layout.scss?tag=ix-pane-layout&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/pane-layout/pane-layout.tsx","../node_modules/@siemens/ix/dist/esm/src/components/utils/application-layout/service.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/debounce.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// Implementation of scss breakpoints mixins/_break-points.scss\nconst mediaQueries = {\n  sm: '(max-width: 48em)',\n  md: '(min-width: 48.0625em) and (max-width: 80em)',\n  lg: '(min-width: 80.0625em)',\n} as const;\n\nexport type Breakpoint = keyof typeof mediaQueries;\n\nexport const matchBreakpoint = (breakpoint: Breakpoint) => {\n  if (typeof window !== 'undefined' && (window as any).matchMedia) {\n    const mediaQuery = mediaQueries[breakpoint];\n    return window.matchMedia(mediaQuery).matches;\n  }\n  return false;\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/hover';\n@import 'mixins/shadow-dom/component';\n\n@mixin set-padding($composition) {\n  @if $composition {\n    padding-#{$composition}: 2.5rem;\n  }\n}\n\n@mixin set-absolute($composition) {\n  @if $composition {\n    position: absolute;\n    #{$composition}: 0;\n  }\n}\n\n:host {\n  @include ix-component;\n  display: flex;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  .side-panes-wrapper {\n    height: 100%;\n    width: 100%;\n  }\n\n  .row {\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    position: relative;\n  }\n\n  .col {\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    position: relative;\n  }\n\n  .content {\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n  }\n\n  .absolute-top {\n    width: 100%;\n    @include set-absolute(top);\n  }\n\n  .absolute-bottom {\n    width: 100%;\n    @include set-absolute(bottom);\n  }\n\n  .absolute-left {\n    height: 100%;\n    @include set-absolute(left);\n  }\n\n  .absolute-right {\n    height: 100%;\n    @include set-absolute(right);\n  }\n\n  .padding-top {\n    @include set-padding(top);\n  }\n\n  .padding-bottom {\n    @include set-padding(bottom);\n  }\n\n  .padding-left {\n    @include set-padding(left);\n  }\n\n  .padding-right {\n    @include set-padding(right);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  forceUpdate,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { Composition } from '../pane/pane';\nimport { applicationLayoutService } from '../utils/application-layout';\nimport { matchBreakpoint } from '../utils/breakpoints';\n\n@Component({\n  tag: 'ix-pane-layout',\n  styleUrl: 'pane-layout.scss',\n  shadow: true,\n})\nexport class Panes {\n  @Element() hostElement!: HTMLIxPaneLayoutElement;\n\n  /**\n   * Choose the layout of the panes.\n   * When set to 'full-vertical' the vertical panes (left, right) will get the full height.\n   * When set to 'full-horizontal' the horizontal panes (top, bottom) will get the full width.\n   */\n  @Prop() layout: 'full-vertical' | 'full-horizontal' = 'full-vertical';\n\n  /**\n   * Set the default variant for all panes in the layout\n   */\n  @Prop() variant: 'floating' | 'inline' = 'inline';\n\n  /**\n   * Set the default border state for all panes in the layout\n   */\n  @Prop() borderless: boolean = false;\n\n  @State() private isMobile = false;\n  @State() private paneElements = 0;\n\n  private panes: Array<{\n    slot: string;\n    hideOnCollapse: boolean;\n    floating: boolean;\n  }> = [];\n\n  private observer?: MutationObserver;\n\n  get currentPanes() {\n    return this.hostElement.querySelectorAll('ix-pane');\n  }\n\n  componentWillLoad() {\n    this.paneElements = this.currentPanes.length;\n\n    this.observer = new MutationObserver((mutations) => {\n      if (mutations[0].addedNodes.item(0)?.nodeName === 'IX-PANE') {\n        this.paneElements += 1;\n      } else if (mutations[0].removedNodes.item(0)?.nodeName === 'IX-PANE') {\n        this.paneElements -= 1;\n      }\n    });\n    this.observer.observe(this.hostElement, {\n      childList: true,\n    });\n\n    this.isMobile = matchBreakpoint('sm');\n    applicationLayoutService.onChange.on(() => {\n      this.isMobile = matchBreakpoint('sm');\n    });\n  }\n\n  componentDidLoad() {\n    this.setPanes(this.currentPanes);\n  }\n\n  disconnectedCallback() {\n    this.observer?.disconnect();\n  }\n\n  private setPaneVariant(pane: HTMLIxPaneElement) {\n    if (!pane.ignoreLayoutSettings) {\n      pane.variant = this.variant;\n    }\n  }\n\n  private setPaneBorder(pane: HTMLIxPaneElement) {\n    if (!pane.ignoreLayoutSettings) {\n      if (this.borderless) {\n        pane.borderless = true;\n      } else {\n        const hasVisibleLeftPane = !!this.panes.find(\n          (pane) => pane.slot === 'left' && !pane.hideOnCollapse\n        );\n        if (\n          pane.variant === 'floating' &&\n          this.layout === 'full-vertical' &&\n          hasVisibleLeftPane &&\n          (pane.composition === 'top' || pane.composition === 'bottom')\n        ) {\n          pane.borderless = true;\n        } else {\n          pane.borderless = false;\n        }\n      }\n    }\n  }\n\n  private setPaneZIndex(pane: HTMLIxPaneElement) {\n    const isTop = pane.slot === 'top';\n    const isBottom = pane.slot === 'bottom';\n    const isLeft = pane.slot === 'left';\n    const isRight = pane.slot === 'right';\n\n    let zIndex = 1;\n    if (this.isMobile) {\n      if (isBottom || isTop) {\n        zIndex = 3;\n      }\n    } else {\n      if (this.layout === 'full-vertical') {\n        if (isLeft || isRight) {\n          zIndex = 3;\n        }\n      } else {\n        if (isBottom || isTop) {\n          zIndex = 3;\n        }\n      }\n    }\n    pane.style.zIndex = zIndex.toString();\n  }\n\n  private setPanes(panes: NodeListOf<HTMLIxPaneElement>) {\n    this.panes = [];\n    panes.forEach((pane) => {\n      this.panes.push({\n        slot: pane.slot,\n        hideOnCollapse: pane.hideOnCollapse,\n        floating: pane.variant === 'floating',\n      });\n    });\n  }\n\n  private closeFloatingPanes() {\n    this.currentPanes.forEach((pane) => {\n      if (pane.expanded && pane.variant === 'floating') {\n        pane.expanded = false;\n      }\n    });\n  }\n\n  private configurePanes() {\n    let topCount = 0;\n    let bottomCount = 0;\n    let leftCount = 0;\n    let rightCount = 0;\n\n    this.currentPanes.forEach((pane) => {\n      const isTop = pane.slot === 'top';\n      const isBottom = pane.slot === 'bottom';\n      const isLeft = pane.slot === 'left';\n      const isRight = pane.slot === 'right';\n\n      if (isLeft) {\n        if (leftCount) {\n          pane.slot = '';\n          return;\n        }\n        leftCount++;\n      } else if (isRight) {\n        if (rightCount) {\n          pane.slot = '';\n          return;\n        }\n        rightCount++;\n      } else if (isTop) {\n        if (topCount) {\n          pane.slot = '';\n          return;\n        }\n        topCount++;\n      } else if (isBottom) {\n        if (bottomCount) {\n          pane.slot = '';\n          return;\n        }\n        bottomCount++;\n      } else {\n        pane.slot = '';\n        return;\n      }\n\n      this.setPaneVariant(pane);\n      this.setPaneBorder(pane);\n      this.setPaneZIndex(pane);\n    });\n\n    this.setPanes(this.currentPanes);\n    forceUpdate(this.hostElement);\n  }\n\n  @Listen('slotChanged')\n  onSlotChanged() {\n    this.configurePanes();\n  }\n\n  @Listen('hideOnCollapseChanged')\n  onCollapsibleChanged(event: CustomEvent) {\n    const { slot, hideOnCollapse } = event.detail;\n\n    this.panes.forEach((currentSlot) => {\n      if (currentSlot.slot === slot) {\n        currentSlot.hideOnCollapse = hideOnCollapse;\n      }\n    });\n\n    forceUpdate(this.hostElement);\n  }\n\n  @Listen('variantChanged')\n  onVariantChanged(event: CustomEvent) {\n    const { slot, variant } = event.detail;\n\n    this.panes.forEach((currentSlot) => {\n      if (currentSlot.slot === slot) {\n        currentSlot.floating = variant === 'floating';\n      }\n    });\n\n    forceUpdate(this.hostElement);\n  }\n\n  @Watch('paneElements')\n  onPaneElementsChange() {\n    this.configurePanes();\n  }\n\n  @Watch('variant')\n  onVariableChange() {\n    this.currentPanes.forEach((pane) => {\n      this.setPaneVariant(pane);\n      this.setPaneBorder(pane);\n    });\n\n    this.setPanes(this.currentPanes);\n    forceUpdate(this.hostElement);\n  }\n\n  @Watch('borderless')\n  onBorderChange() {\n    this.currentPanes.forEach((pane) => {\n      this.setPaneBorder(pane);\n    });\n  }\n\n  @Watch('layout')\n  onLayoutChange() {\n    this.currentPanes.forEach((pane) => {\n      this.setPaneBorder(pane);\n      this.setPaneZIndex(pane);\n    });\n  }\n\n  @Watch('isMobile')\n  onMobileChange() {\n    this.currentPanes.forEach((pane) => {\n      this.setPaneZIndex(pane);\n    });\n  }\n\n  private hasPadding(composition: Composition) {\n    const pane = this.panes.find((pane) => pane.slot === composition);\n    return pane ? !pane.hideOnCollapse && pane.floating : false;\n  }\n\n  private hasPaddingMobile(composition: Composition) {\n    const pane = this.panes.find((pane) => pane.slot === composition);\n    return pane && !pane.hideOnCollapse;\n  }\n\n  private slotExists(composition: Composition) {\n    const pane = this.panes.find((pane) => pane.slot === composition);\n    return !!pane;\n  }\n\n  private isFloating(composition: Composition) {\n    const pane = this.panes.find((pane) => pane.slot === composition);\n    return pane ? pane.floating : false;\n  }\n\n  render() {\n    return (\n      <Host>\n        {!this.isMobile ? (\n          this.layout == 'full-vertical' ? (\n            <div class=\"side-panes-wrapper\">\n              <div\n                class={{\n                  row: true,\n                  'padding-left': this.hasPadding('left'),\n                  'padding-right': this.hasPadding('right'),\n                }}\n              >\n                <div\n                  key=\"left\"\n                  class={{ 'absolute-left': this.isFloating('left') }}\n                >\n                  <slot name=\"left\"></slot>\n                </div>\n                <div\n                  class={{\n                    col: true,\n                    'padding-top': this.hasPadding('top'),\n                    'padding-bottom': this.hasPadding('bottom'),\n                  }}\n                >\n                  <div\n                    key=\"top\"\n                    class={{ 'absolute-top': this.isFloating('top') }}\n                  >\n                    <slot name=\"top\"></slot>\n                  </div>\n                  <div\n                    key=\"content\"\n                    class=\"content\"\n                    onClick={() => this.closeFloatingPanes()}\n                  >\n                    <slot name=\"content\"></slot>\n                    <slot></slot>\n                  </div>\n                  <div\n                    key=\"bottom\"\n                    class={{ 'absolute-bottom': this.isFloating('bottom') }}\n                  >\n                    <slot name=\"bottom\"></slot>\n                  </div>\n                </div>\n                <div\n                  key=\"right\"\n                  class={{ 'absolute-right': this.isFloating('right') }}\n                >\n                  <slot name=\"right\"></slot>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div class=\"side-panes-wrapper\">\n              <div\n                class={{\n                  col: true,\n                  'padding-top': this.hasPadding('top'),\n                  'padding-bottom': this.hasPadding('bottom'),\n                }}\n              >\n                <div\n                  key=\"top\"\n                  class={{ 'absolute-top': this.isFloating('top') }}\n                >\n                  <slot name=\"top\"></slot>\n                </div>\n                <div\n                  class={{\n                    row: true,\n                    'padding-left': this.hasPadding('left'),\n                    'padding-right': this.hasPadding('right'),\n                  }}\n                >\n                  <div\n                    key=\"left\"\n                    class={{ 'absolute-left': this.isFloating('left') }}\n                  >\n                    <slot name=\"left\"></slot>\n                  </div>\n                  <div\n                    key=\"content\"\n                    class=\"content\"\n                    onClick={() => this.closeFloatingPanes()}\n                  >\n                    <slot name=\"content\"></slot>\n                    <slot></slot>\n                  </div>\n                  <div\n                    key=\"right\"\n                    class={{ 'absolute-right': this.isFloating('right') }}\n                  >\n                    <slot name=\"right\"></slot>\n                  </div>\n                </div>\n                <div\n                  key=\"bottom\"\n                  class={{ 'absolute-bottom': this.isFloating('bottom') }}\n                >\n                  <slot name=\"bottom\"></slot>\n                </div>\n              </div>\n            </div>\n          )\n        ) : (\n          <div class=\"col\">\n            <div\n              key=\"top\"\n              style={{\n                minHeight: this.hasPaddingMobile('top') ? '48px' : '0',\n                display: this.slotExists('top') ? 'block' : 'none',\n              }}\n            >\n              <slot name=\"top\"></slot>\n            </div>\n            <div\n              key=\"left\"\n              style={{\n                minHeight: this.hasPaddingMobile('left') ? '48px' : '0',\n                display: this.slotExists('left') ? 'block' : 'none',\n              }}\n            >\n              <slot name=\"left\"></slot>\n            </div>\n            <div\n              key=\"content\"\n              class=\"content\"\n              onClick={() => this.closeFloatingPanes()}\n            >\n              <slot name=\"content\"></slot>\n              <slot></slot>\n            </div>\n            <div\n              key=\"right\"\n              style={{\n                minHeight: this.hasPaddingMobile('right') ? '48px' : '0',\n                display: this.slotExists('right') ? 'block' : 'none',\n              }}\n            >\n              <slot name=\"right\"></slot>\n            </div>\n            <div\n              key=\"bottom\"\n              style={{\n                minHeight: this.hasPaddingMobile('bottom') ? '48px' : '0',\n                display: this.slotExists('bottom') ? 'block' : 'none',\n              }}\n            >\n              <slot name=\"bottom\"></slot>\n            </div>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Breakpoint, matchBreakpoint } from '../breakpoints';\nimport { debounce } from '../debounce';\nimport { TypedEvent } from '../typed-event';\n\nclass ApplicationLayoutService {\n  // Keep order of breakpoints\n  #supportedBreakpoints: Breakpoint[] = ['sm', 'md', 'lg'];\n  #breakpointChangeListener = new TypedEvent<Breakpoint>();\n  #breakpoint: Breakpoint = 'lg';\n\n  #isDetectionEnabled = true;\n  debouncedOnResize = debounce(this.onResize.bind(this), 50);\n\n  constructor() {\n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', this.debouncedOnResize.bind(this));\n      this.debouncedOnResize();\n    }\n  }\n\n  get breakpoint() {\n    return this.#breakpoint;\n  }\n\n  get onChange() {\n    return this.#breakpointChangeListener;\n  }\n\n  get isDetectionEnabled() {\n    return this.#isDetectionEnabled;\n  }\n\n  private onResize() {\n    if (!this.#isDetectionEnabled) {\n      return;\n    }\n    if (!this.#supportedBreakpoints) {\n      return;\n    }\n    const matchBreakpoints: [Breakpoint, boolean][] = [];\n\n    const breakpoints = this.#supportedBreakpoints;\n\n    breakpoints.forEach((breakpoint) => {\n      const match = matchBreakpoint(breakpoint);\n      matchBreakpoints.push([breakpoint, match]);\n    });\n\n    if (matchBreakpoints.every(([_, match]) => match === false)) {\n      let breakPointIndex = 0;\n      if (!this.#supportedBreakpoints.includes('lg')) {\n        breakPointIndex = matchBreakpoints.length - 1;\n      }\n\n      const [breakpoint, _] = matchBreakpoints[breakPointIndex];\n      requestAnimationFrame(() =>\n        this.#breakpointChangeListener.emit(breakpoint)\n      );\n      this.#breakpoint = breakpoint;\n      return;\n    }\n\n    for (const [breakpoint, match] of matchBreakpoints.reverse()) {\n      if (match) {\n        requestAnimationFrame(() =>\n          this.#breakpointChangeListener.emit(breakpoint)\n        );\n        this.#breakpoint = breakpoint;\n        break;\n      }\n    }\n  }\n\n  public disableBreakpointDetection() {\n    this.#isDetectionEnabled = false;\n  }\n\n  public enableBreakpointDetection() {\n    this.#isDetectionEnabled = true;\n  }\n\n  public setBreakpoint(breakpoint: Breakpoint) {\n    this.#breakpoint = breakpoint;\n    this.#breakpointChangeListener.emit(breakpoint);\n  }\n\n  public setBreakpoints(breakpoints: Breakpoint[]) {\n    this.#supportedBreakpoints = breakpoints;\n    this.onResize();\n  }\n}\n\nexport const applicationLayoutService = new ApplicationLayoutService();\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\ntype AnyFunction = (...args: any[]) => any;\n\nexport function debounce<T extends AnyFunction>(\n  func: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let timeoutId: ReturnType<typeof setTimeout>;\n\n  return function debounced(...args: Parameters<T>): void {\n    clearTimeout(timeoutId);\n\n    timeoutId = setTimeout(() => {\n      func(...args);\n    }, delay);\n  };\n}\n"],"names":["mediaQueries","sm","md","lg","matchBreakpoint","breakpoint","window","matchMedia","mediaQuery","matches","Panes","constructor","hostRef","layout","variant","borderless","isMobile","paneElements","panes","currentPanes","this","hostElement","querySelectorAll","componentWillLoad","length","observer","MutationObserver","mutations","_a","addedNodes","item","nodeName","_b","removedNodes","observe","childList","applicationLayoutService","onChange","on","componentDidLoad","setPanes","disconnectedCallback","disconnect","setPaneVariant","pane","ignoreLayoutSettings","setPaneBorder","hasVisibleLeftPane","find","slot","hideOnCollapse","composition","setPaneZIndex","isTop","isBottom","isLeft","isRight","zIndex","style","toString","forEach","push","floating","closeFloatingPanes","expanded","configurePanes","topCount","bottomCount","leftCount","rightCount","forceUpdate","onSlotChanged","onCollapsibleChanged","event","detail","currentSlot","onVariantChanged","onPaneElementsChange","onVariableChange","onBorderChange","onLayoutChange","onMobileChange","hasPadding","hasPaddingMobile","slotExists","isFloating","render","h","Host","key","class","minHeight","display","name","onClick","row","col","_ApplicationLayoutService_supportedBreakpoints","set","_ApplicationLayoutService_breakpointChangeListener","TypedEvent","_ApplicationLayoutService_breakpoint","_ApplicationLayoutService_isDetectionEnabled","debouncedOnResize","func","delay","timeoutId","_len","arguments","args","Array","_key","clearTimeout","setTimeout","debounce","onResize","bind","addEventListener","__classPrivateFieldGet","isDetectionEnabled","matchBreakpoints","match","every","_ref","_","breakPointIndex","includes","requestAnimationFrame","emit","__classPrivateFieldSet","reverse","disableBreakpointDetection","enableBreakpointDetection","setBreakpoint","setBreakpoints","breakpoints"],"sourceRoot":""}