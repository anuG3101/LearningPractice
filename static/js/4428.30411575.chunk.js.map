{"version":3,"file":"static/js/4428.30411575.chunk.js","mappings":"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","sources":["../node_modules/@siemens/ix/dist/esm/src/components/utils/focus.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/mutation-observer.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/listener.ts","../node_modules/@siemens/ix/dist/esm/src/components/select/select.tsx","../node_modules/@siemens/ix/dist/esm/src/components/select/select.scss?tag=ix-select&encapsulation=shadow","../node_modules/@siemens/ix/dist/esm/src/components/utils/condition-checks.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/a11y.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/make-ref.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/disposable-event-listener.ts","../node_modules/@siemens/ix/dist/esm/src/components/utils/input/validation.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { addDisposableEventListener } from './disposable-event-listener';\n\nexport class ArrowFocusController {\n  public items: Element[];\n\n  container?: HTMLElement;\n  wrap = false;\n  callback: any;\n\n  private readonly keyListener: () => void;\n\n  constructor(\n    items: any[],\n    container: HTMLElement,\n    callback?: (index: number) => void\n  ) {\n    this.items = items;\n    this.container = container;\n    this.callback = callback;\n    this.keyListener = addDisposableEventListener(\n      container,\n      'keydown',\n      (e: Event) => this.onKeyDown(e as KeyboardEvent)\n    );\n  }\n\n  private getActiveIndex() {\n    if (!document.activeElement) {\n      return -1;\n    }\n    return this.items.indexOf(document.activeElement);\n  }\n\n  private onKeyDown(e: KeyboardEvent) {\n    const activeIndex = this.getActiveIndex();\n\n    if (activeIndex < 0) {\n      return;\n    }\n\n    switch (e.key) {\n      case 'ArrowDown':\n        if (activeIndex < this.items.length - 1) {\n          e.preventDefault();\n          this.callback?.(activeIndex + 1);\n        } else if (this.wrap) {\n          e.preventDefault();\n          this.callback?.(0);\n        }\n        break;\n\n      case 'ArrowUp':\n        {\n          if (activeIndex > 0) {\n            e.preventDefault();\n            this.callback?.(activeIndex - 1);\n          } else if (this.wrap && activeIndex === 0) {\n            e.preventDefault();\n            this.callback?.(this.items.length - 1);\n          }\n        }\n        break;\n    }\n  }\n\n  disconnect() {\n    if (this.keyListener) {\n      this.keyListener();\n    }\n\n    this.container = undefined;\n    this.callback = undefined;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const createMutationObserver = (callback: MutationCallback) =>\n  new MutationObserver(callback);\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getElement } from '@stencil/core';\nimport { HTMLStencilElement } from '@stencil/core/internal';\n\nexport type ListenerOptions = {\n  target?: 'window';\n  defaultEnabled?: boolean;\n};\n\ntype HostListener = {\n  on: (onEventCallback: any) => void;\n  isEnabled: boolean | undefined;\n  enable: (state: boolean) => void;\n  destroy: () => void;\n};\n\nconst defaultOptions: ListenerOptions = {\n  target: 'window',\n  defaultEnabled: true,\n};\n\nexport function createListener(\n  event: string,\n  options: ListenerOptions = {}\n): HostListener {\n  const opts = {\n    ...defaultOptions,\n    ...options,\n  };\n\n  let callback: any;\n  const onEvent = (event: Event) => {\n    callback(event);\n  };\n\n  const resultObject = {\n    on: (onEventCallback: any) => {\n      callback = onEventCallback;\n    },\n\n    isEnabled: opts.defaultEnabled,\n\n    enable: (state: boolean) => {\n      resultObject.isEnabled = state;\n\n      if (state) {\n        addEventListener(event, onEvent);\n      } else {\n        removeEventListener(event, onEvent);\n      }\n    },\n\n    destroy: () => {\n      resultObject.enable(false);\n    },\n  };\n\n  resultObject.enable(!!opts.defaultEnabled);\n  return resultObject;\n}\n\ntype HTMLStencilElementWithListener = HTMLStencilElement & {\n  [K in `__ix__${string}`]?: HostListener | null;\n};\n\nexport function OnListener<T>(event: string, fnExp?: (self: T) => boolean) {\n  return (proto: any, methodName: string) => {\n    const { componentWillLoad, componentWillRender, disconnectedCallback } =\n      proto;\n\n    if (fnExp) {\n      proto.componentWillRender = function () {\n        const host = getElement(this) as HTMLStencilElementWithListener;\n        host[`__ix__${methodName}`]?.enable(fnExp(this));\n        return componentWillRender && componentWillRender.call(this);\n      };\n    }\n\n    proto.componentWillLoad = function () {\n      const listener = createListener(event);\n      const host = getElement(this) as HTMLStencilElementWithListener;\n      const method = this[methodName];\n\n      host[`__ix__${methodName}`] = listener;\n\n      listener.on(method.bind(this));\n      return componentWillLoad && componentWillLoad.call(this);\n    };\n\n    proto.disconnectedCallback = function () {\n      const host = getElement(this) as HTMLStencilElementWithListener;\n\n      if (host && host[`__ix__${methodName}`]) {\n        host[`__ix__${methodName}`]?.destroy();\n        host[`__ix__${methodName}`] = null;\n      }\n\n      return disconnectedCallback && disconnectedCallback.call(this);\n    };\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  iconChevronDownSmall,\n  iconClear,\n  iconPlus,\n} from '@siemens/ix-icons/icons';\nimport {\n  AttachInternals,\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { DropdownItemWrapper } from '../dropdown/dropdown-controller';\nimport { IxSelectItemLabelChangeEvent } from '../select-item/events';\nimport { a11yBoolean } from '../utils/a11y';\nimport { ArrowFocusController } from '../utils/focus';\nimport {\n  HookValidationLifecycle,\n  IxInputFieldComponent,\n  ValidationResults,\n} from '../utils/input';\nimport { OnListener } from '../utils/listener';\nimport { makeRef } from '../utils/make-ref';\nimport { createMutationObserver } from '../utils/mutation-observer';\n\n/**\n * @form-ready\n */\n@Component({\n  tag: 'ix-select',\n  styleUrl: 'select.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class Select implements IxInputFieldComponent<string | string[]> {\n  @Element() hostElement!: HTMLIxSelectElement;\n  @AttachInternals() formInternals!: ElementInternals;\n\n  /**\n   * A string that represents the element's name attribute,\n   * containing a name that identifies the element when submitting the form.\n   */\n  @Prop({ reflect: true }) name?: string;\n\n  /**\n   * A Boolean attribute indicating that an option with a non-empty string value must be selected\n   */\n  @Prop({ reflect: true }) required: boolean = false;\n\n  /**\n   * Label for the select component\n   */\n  @Prop() label?: string;\n\n  /**\n   * Warning text for the select component\n   **/\n  @Prop() warningText?: string;\n\n  /**\n   * Info text for the select component\n   **/\n  @Prop() infoText?: string;\n\n  /**\n   * Error text for the select component\n   **/\n  @Prop() invalidText?: string;\n\n  /**\n   * Valid text for the select component\n   **/\n  @Prop() validText?: string;\n\n  /**\n   * Helper text for the select component\n   **/\n  @Prop() helperText?: string;\n\n  /**\n   * Show helper, error, info, warning text as tooltip\n   */\n  @Prop() showTextAsTooltip?: boolean;\n\n  /**\n   * Current selected value.\n   * This corresponds to the value property of ix-select-items\n   */\n  @Prop({ mutable: true }) value: string | string[] = [];\n\n  /**\n   * Show clear button\n   */\n  @Prop() allowClear = false;\n\n  /**\n   * Selection mode\n   */\n  @Prop() mode: 'single' | 'multiple' = 'single';\n\n  /**\n   * Select is extendable\n   */\n  @Prop() editable = false;\n\n  /**\n   * If true the select will be in disabled state\n   */\n  @Prop() disabled = false;\n\n  /**\n   * If true the select will be in readonly mode\n   */\n  @Prop() readonly = false;\n\n  /**\n   * Input field placeholder\n   */\n  @Prop() i18nPlaceholder = 'Select an option';\n\n  /**\n   * Input field placeholder for editable select\n   */\n  @Prop() i18nPlaceholderEditable = 'Type of select option';\n\n  /**\n   * Select list header\n   */\n  @Prop() i18nSelectListHeader = 'Select an option';\n\n  /**\n   * Information inside of dropdown if no items where found with current filter text\n   */\n  @Prop() i18nNoMatches = 'No matches';\n\n  /**\n   * Hide list header\n   */\n  @Prop() hideListHeader = false;\n\n  /**\n   * The width of the dropdown element with value and unit (e.g. \"200px\" or \"12.5rem\").\n   */\n  @Prop() dropdownWidth?: string;\n\n  /**\n   * The maximum width of the dropdown element with value and unit (e.g. \"200px\" or \"12.5rem\").\n   * By default the maximum width of the dropdown element is set to 100%.\n   */\n  @Prop() dropdownMaxWidth?: string;\n\n  /**\n   * Value changed\n   */\n  @Event() valueChange!: EventEmitter<string | string[]>;\n\n  /**\n   * Event dispatched whenever the text input changes.\n   */\n  @Event() inputChange!: EventEmitter<string>;\n\n  /**\n   * Item added to selection\n   */\n  @Event() addItem!: EventEmitter<string>;\n\n  /**\n   * Blur input\n   */\n  @Event() ixBlur!: EventEmitter<void>;\n\n  @State() dropdownShow = false;\n  @State() selectedLabels: (string | undefined)[] = [];\n  @State() isDropdownEmpty = false;\n  @State() navigationItem?: DropdownItemWrapper;\n  @State() inputFilterText = '';\n  @State() inputValue = '';\n\n  @State() isInvalid = false;\n  @State() isValid = false;\n  @State() isInfo = false;\n  @State() isWarning = false;\n\n  private readonly dropdownWrapperRef = makeRef<HTMLElement>();\n  private readonly dropdownAnchorRef = makeRef<HTMLElement>();\n  private readonly inputRef = makeRef<HTMLInputElement>();\n\n  private inputElement?: HTMLInputElement;\n  private dropdownElement?: HTMLIxDropdownElement;\n  private customItemsContainerElement?: HTMLDivElement;\n  private addItemElement?: HTMLIxDropdownItemElement;\n  private arrowFocusController?: ArrowFocusController;\n\n  private touched = false;\n\n  private readonly itemObserver = createMutationObserver(() => {\n    if (!this.arrowFocusController) {\n      return;\n    }\n    this.arrowFocusController.items = this.visibleNonShadowItems;\n  });\n  private readonly focusControllerCallbackBind =\n    this.focusDropdownItem.bind(this);\n\n  get nonShadowItems() {\n    return Array.from(this.hostElement.querySelectorAll('ix-select-item'));\n  }\n\n  get visibleNonShadowItems() {\n    return this.nonShadowItems.filter(\n      (item) => !item.classList.contains('display-none')\n    );\n  }\n\n  get shadowItems() {\n    return Array.from(\n      this.hostElement.shadowRoot!.querySelectorAll('ix-select-item')\n    );\n  }\n\n  get visibleShadowItems() {\n    return this.shadowItems.filter(\n      (item) => !item.classList.contains('display-none')\n    );\n  }\n\n  get items() {\n    return [...this.nonShadowItems, ...this.shadowItems];\n  }\n\n  get visibleItems() {\n    return this.items.filter(\n      (item) => !item.classList.contains('display-none')\n    );\n  }\n\n  get selectedItems() {\n    return this.items.filter((item) => item.selected);\n  }\n\n  get addItemButton() {\n    return this.hostElement.shadowRoot!.querySelector('.add-item');\n  }\n\n  get isSingleMode() {\n    return this.mode === 'single';\n  }\n\n  get isMultipleMode() {\n    return this.mode === 'multiple';\n  }\n\n  get isEveryDropdownItemHidden() {\n    return this.items.every((item) => item.classList.contains('display-none'));\n  }\n\n  @Watch('value')\n  watchValue(value: string | string[]) {\n    this.value = value;\n    this.updateSelection();\n  }\n\n  @Watch('dropdownShow')\n  watchDropdownShow(show: boolean) {\n    if (show && this.dropdownElement) {\n      this.itemObserver.observe(this.dropdownElement, {\n        childList: true,\n        subtree: true,\n      });\n    } else {\n      this.cleanupResources();\n    }\n  }\n\n  private cleanupResources() {\n    this.arrowFocusController?.disconnect();\n    this.arrowFocusController = undefined;\n    this.itemObserver?.disconnect();\n  }\n\n  @Listen('itemClick')\n  onItemClicked(event: CustomEvent<string>) {\n    const newId = event.detail;\n    this.itemClick(newId);\n  }\n\n  updateFormInternalValue(value: string | string[]) {\n    if (Array.isArray(value)) {\n      this.formInternals.setFormValue(value.join(','));\n    } else {\n      this.formInternals.setFormValue(value);\n    }\n  }\n\n  /** @internal */\n  @Method()\n  async hasValidValue(): Promise<boolean> {\n    return this.required && !!this.hasValue();\n  }\n\n  private hasValue() {\n    if (Array.isArray(this.value)) {\n      return !!this.value.length;\n    }\n\n    return !!this.value;\n  }\n\n  private focusDropdownItem(index: number) {\n    this.navigationItem = undefined;\n\n    if (index < this.visibleNonShadowItems.length) {\n      const nestedDropdownItem =\n        this.visibleNonShadowItems[index]?.shadowRoot?.querySelector(\n          'ix-dropdown-item'\n        );\n\n      if (!nestedDropdownItem) {\n        return;\n      }\n\n      requestAnimationFrame(() => {\n        nestedDropdownItem?.shadowRoot?.querySelector('button')?.focus();\n      });\n    }\n  }\n\n  private itemClick(newId: string) {\n    const oldValue = this.value;\n    const value = this.toggleValue(newId);\n    this.value = value;\n    const defaultPrevented = this.emitValueChange(value);\n\n    if (defaultPrevented) {\n      this.value = oldValue;\n      return;\n    }\n\n    this.updateSelection();\n  }\n\n  private emitAddItem(value: string) {\n    if (value === undefined || value.trim() === '') {\n      return false;\n    }\n\n    const { defaultPrevented } = this.addItem.emit(value);\n    if (defaultPrevented) {\n      return true;\n    }\n\n    const newItem = document.createElement('ix-select-item');\n    newItem.value = value;\n    newItem.label = value;\n\n    this.customItemsContainerElement?.appendChild(newItem);\n\n    this.clearInput();\n    this.itemClick(value);\n\n    return false;\n  }\n\n  private toggleValue(itemValue: string) {\n    if (!this.isMultipleMode) {\n      return itemValue;\n    }\n\n    if (!this.value) {\n      return [itemValue];\n    }\n\n    let value = this.value;\n\n    if (!Array.isArray(value)) {\n      value = [value];\n    }\n\n    if (value.includes(itemValue)) {\n      return value.filter((value) => value !== itemValue);\n    } else {\n      return [...value, itemValue];\n    }\n  }\n\n  private updateSelection() {\n    let ids: string[] = [];\n\n    if (this.value) {\n      ids = Array.isArray(this.value) ? [...this.value] : [this.value];\n    }\n\n    this.items.forEach((item) => {\n      item.selected = ids.some((i) => {\n        if (typeof i !== typeof item.value) {\n          return i.toString() === item.value.toString();\n        } else {\n          return i === item.value;\n        }\n      });\n    });\n\n    this.selectedLabels = this.selectedItems.map((item) => item.label);\n\n    if (this.selectedLabels?.length && this.isSingleMode) {\n      this.inputValue = this.selectedLabels[0] ?? '';\n    } else {\n      this.inputValue = '';\n    }\n\n    this.inputElement && (this.inputElement.value = this.inputValue);\n  }\n\n  private emitValueChange(value: string | string[]) {\n    const { defaultPrevented } = this.valueChange.emit(value);\n\n    if (defaultPrevented) {\n      return true;\n    }\n\n    this.updateFormInternalValue(value);\n    return false;\n  }\n\n  componentDidLoad() {\n    this.inputElement?.addEventListener('input', () => {\n      this.dropdownShow = true;\n      this.inputChange.emit(this.inputElement?.value);\n    });\n  }\n\n  componentWillLoad() {\n    this.updateSelection();\n    this.updateFormInternalValue(this.value);\n  }\n\n  componentDidRender(): void {\n    if (\n      !this.dropdownShow ||\n      this.arrowFocusController ||\n      !this.dropdownElement\n    ) {\n      return;\n    }\n\n    this.arrowFocusController = new ArrowFocusController(\n      this.visibleNonShadowItems,\n      this.dropdownElement,\n      this.focusControllerCallbackBind\n    );\n\n    this.arrowFocusController.wrap =\n      !this.isAddItemVisible() && !this.visibleShadowItems.length;\n  }\n\n  @Listen('ix-select-item:valueChange')\n  @Listen('ix-select-item:labelChange')\n  onLabelChange(event: IxSelectItemLabelChangeEvent) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    this.updateSelection();\n  }\n\n  disconnectedCallback() {\n    this.cleanupResources();\n  }\n\n  private itemExists(item: string | undefined) {\n    return this.items.find((i) => i.label === item);\n  }\n\n  private dropdownVisibilityChanged(event: CustomEvent<boolean>) {\n    this.dropdownShow = event.detail;\n\n    if (event.detail) {\n      this.inputElement?.focus();\n      this.inputElement?.select();\n\n      this.removeHiddenFromItems();\n      this.isDropdownEmpty = this.isEveryDropdownItemHidden;\n    } else {\n      this.navigationItem = undefined;\n      this.updateSelection();\n      this.inputFilterText = '';\n    }\n  }\n\n  @OnListener<Select>('keydown', (self) => self.dropdownShow)\n  async onKeyDown(event: KeyboardEvent) {\n    if (event.code === 'ArrowDown' || event.code === 'ArrowUp') {\n      await this.onArrowNavigation(event, event.code);\n    }\n\n    if (!this.dropdownShow) {\n      return;\n    }\n\n    if (event.code === 'Enter' || event.code === 'NumpadEnter') {\n      await this.onEnterNavigation(event.target as HTMLIxSelectItemElement);\n    }\n\n    if (event.code === 'Escape') {\n      this.dropdownShow = false;\n    }\n  }\n\n  private async onEnterNavigation(\n    el: HTMLIxSelectItemElement | HTMLInputElement\n  ) {\n    if (this.isMultipleMode) {\n      return;\n    }\n    const itemLabel = (el as HTMLIxSelectItemElement)?.label;\n    const item = this.itemExists(this.inputFilterText);\n\n    if (item) {\n      this.itemClick(item.value);\n    } else if (this.editable && !this.itemExists(itemLabel)) {\n      const defaultPrevented = this.emitAddItem(this.inputFilterText);\n      if (defaultPrevented) {\n        return;\n      }\n    }\n\n    this.dropdownShow = false;\n    this.updateSelection();\n  }\n\n  private async onArrowNavigation(\n    event: KeyboardEvent,\n    key: 'ArrowDown' | 'ArrowUp'\n  ) {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.dropdownShow = true;\n\n    if (!this.navigationItem && document.activeElement === this.hostElement) {\n      if (this.visibleItems.length) {\n        this.applyFocusTo(this.visibleItems.shift());\n      } else if (this.isAddItemVisible()) {\n        this.focusAddItemButton();\n      }\n      return;\n    }\n\n    const moveUp = key === 'ArrowUp';\n    const indexNonShadow = document.activeElement\n      ? this.visibleNonShadowItems.indexOf(\n          document.activeElement as HTMLIxSelectItemElement\n        )\n      : -1;\n\n    // Slotted select items\n    if (indexNonShadow === 0) {\n      if (!this.visibleShadowItems.length && this.isAddItemVisible()) {\n        this.focusAddItemButton();\n      } else {\n        this.applyFocusTo(this.visibleShadowItems.pop());\n      }\n      return;\n    } else if (\n      indexNonShadow !== -1 &&\n      indexNonShadow === this.visibleNonShadowItems.length - 1\n    ) {\n      if (this.visibleShadowItems.length) {\n        this.applyFocusTo(this.visibleShadowItems.shift());\n      } else if (this.isAddItemVisible()) {\n        this.focusAddItemButton();\n      }\n      return;\n    }\n\n    if (!this.navigationItem) {\n      return;\n    }\n\n    if (\n      this.isAddItemVisible() &&\n      this.addItemElement?.contains(\n        await this.navigationItem.getDropdownItemElement()\n      )\n    ) {\n      if (moveUp) {\n        this.applyFocusTo(this.visibleItems.pop());\n      } else if (this.visibleItems.length) {\n        this.applyFocusTo(this.visibleItems.shift());\n      }\n      return;\n    }\n\n    // Custom select items\n    const indexShadow = this.visibleShadowItems.indexOf(\n      this.navigationItem as HTMLIxSelectItemElement\n    );\n\n    if (moveUp) {\n      if (indexShadow === 0) {\n        if (this.visibleNonShadowItems.length) {\n          this.applyFocusTo(this.visibleNonShadowItems.pop());\n        } else if (this.isAddItemVisible()) {\n          this.focusAddItemButton();\n        }\n      } else {\n        this.applyFocusTo(this.visibleShadowItems[indexShadow - 1]);\n      }\n    } else {\n      if (indexShadow === this.visibleShadowItems.length - 1) {\n        if (this.isAddItemVisible()) {\n          this.focusAddItemButton();\n        } else {\n          this.applyFocusTo(this.visibleItems.shift());\n        }\n      } else {\n        this.applyFocusTo(this.visibleShadowItems[indexShadow + 1]);\n      }\n    }\n  }\n\n  private applyFocusTo(element?: HTMLIxSelectItemElement) {\n    if (!element) {\n      return;\n    }\n\n    this.navigationItem = element;\n\n    setTimeout(() => {\n      element.shadowRoot\n        ?.querySelector('ix-dropdown-item')\n        ?.shadowRoot?.querySelector('button')\n        ?.focus();\n    });\n  }\n\n  private focusAddItemButton() {\n    if (this.addItemButton) {\n      this.addItemButton.shadowRoot?.querySelector('button')?.focus();\n      this.navigationItem = this.addItemElement;\n    }\n  }\n\n  private filterItemsWithTypeahead() {\n    this.inputFilterText = this.inputElement?.value.trim() ?? '';\n\n    if (this.isSingleMode && this.inputFilterText === this.selectedLabels[0]) {\n      return;\n    }\n\n    if (this.inputFilterText) {\n      this.items.forEach((item) => {\n        item.classList.remove('display-none');\n        if (\n          !item.label\n            ?.toLowerCase()\n            .includes(this.inputFilterText.toLowerCase())\n        ) {\n          item.classList.add('display-none');\n        }\n      });\n    } else {\n      this.removeHiddenFromItems();\n    }\n\n    if (this.arrowFocusController) {\n      this.arrowFocusController.items = this.visibleNonShadowItems;\n    }\n\n    this.isDropdownEmpty = this.isEveryDropdownItemHidden;\n  }\n\n  private removeHiddenFromItems() {\n    this.items.forEach((item) => {\n      item.classList.remove('display-none');\n    });\n  }\n\n  private clearInput() {\n    if (this.inputElement) {\n      this.inputElement.value = '';\n    }\n    this.inputFilterText = '';\n  }\n\n  private clear() {\n    this.clearInput();\n    this.selectedLabels = [];\n    this.value = [];\n    this.emitValueChange([]);\n    this.dropdownShow = false;\n  }\n\n  private onInputBlur(event: Event) {\n    this.ixBlur.emit();\n    this.touched = true;\n\n    if (this.editable) {\n      return;\n    }\n\n    if (this.isSingleMode) {\n      return;\n    }\n\n    const target = event.target as HTMLInputElement;\n\n    if (!this.dropdownShow && this.mode !== 'multiple') {\n      target.value = this.selectedLabels.toString();\n    }\n  }\n\n  private placeholderValue() {\n    if (this.disabled) {\n      return '';\n    }\n\n    if (this.readonly) {\n      return '';\n    }\n\n    if (this.editable) {\n      return this.i18nPlaceholderEditable;\n    }\n\n    return this.i18nPlaceholder;\n  }\n\n  private isAddItemVisible() {\n    return (\n      !this.itemExists(this.inputFilterText) &&\n      this.editable &&\n      this.inputFilterText\n    );\n  }\n\n  @HookValidationLifecycle()\n  onValidationChange({\n    isInvalid,\n    isInvalidByRequired,\n    isValid,\n    isInfo,\n    isWarning,\n  }: ValidationResults) {\n    this.isInvalid = isInvalid || isInvalidByRequired;\n    this.isValid = isValid;\n    this.isWarning = isWarning;\n    this.isInfo = isInfo;\n  }\n\n  /** @internal */\n  @Method()\n  async getAssociatedFormElement(): Promise<HTMLFormElement | null> {\n    return this.formInternals.form;\n  }\n\n  /**\n   * Returns the native input element used in the component.\n   */\n  @Method()\n  getNativeInputElement(): Promise<HTMLInputElement> {\n    if (this.inputElement) {\n      return Promise.resolve(this.inputElement);\n    } else {\n      return Promise.reject(new Error('Input element not found'));\n    }\n  }\n\n  /**\n   * Focuses the input field\n   */\n  @Method()\n  async focusInput(): Promise<void> {\n    const inputElement = await this.getNativeInputElement();\n    if (inputElement) {\n      inputElement.focus();\n    }\n  }\n\n  /**\n   * Check if the input field has been touched.\n   * @internal\n   * */\n  @Method()\n  isTouched(): Promise<boolean> {\n    return Promise.resolve(this.touched);\n  }\n\n  render() {\n    return (\n      <Host\n        aria-disabled={a11yBoolean(this.disabled)}\n        class={{\n          disabled: this.disabled,\n        }}\n      >\n        <ix-field-wrapper\n          required={this.required}\n          label={this.label}\n          helperText={this.helperText}\n          invalidText={this.invalidText}\n          infoText={this.infoText}\n          warningText={this.warningText}\n          validText={this.validText}\n          showTextAsTooltip={this.showTextAsTooltip}\n          isInvalid={this.isInvalid}\n          isValid={this.isValid}\n          isInfo={this.isInfo}\n          isWarning={this.isWarning}\n          controlRef={this.inputRef}\n        >\n          <div\n            class={{\n              select: true,\n              disabled: this.disabled,\n              readonly: this.readonly,\n            }}\n            ref={(ref) => {\n              this.dropdownAnchorRef(ref);\n              if (!this.editable) this.dropdownWrapperRef(ref);\n            }}\n          >\n            <div class=\"input-container\">\n              <div class=\"chips\">\n                {this.isMultipleMode\n                  ? this.selectedItems?.map((item) => (\n                      <ix-filter-chip\n                        disabled={this.disabled || this.readonly}\n                        key={item.value}\n                        onCloseClick={(e) => {\n                          e.preventDefault();\n                          e.stopPropagation();\n                          this.itemClick(item.value);\n                        }}\n                      >\n                        {item.label}\n                      </ix-filter-chip>\n                    ))\n                  : ''}\n                <div class=\"trigger\">\n                  <input\n                    autocomplete=\"off\"\n                    data-testid=\"input\"\n                    disabled={this.disabled}\n                    readOnly={this.readonly}\n                    required={this.required}\n                    type=\"text\"\n                    class={{\n                      'allow-clear':\n                        this.allowClear && !!this.selectedLabels?.length,\n                    }}\n                    placeholder={this.placeholderValue()}\n                    value={this.inputValue ?? ''}\n                    ref={(ref) => {\n                      this.inputElement = ref;\n                      this.inputRef(ref);\n                    }}\n                    onBlur={(e) => this.onInputBlur(e)}\n                    onFocus={() => {\n                      this.navigationItem = undefined;\n                    }}\n                    onInput={() => this.filterItemsWithTypeahead()}\n                    onKeyDown={(e) => this.onKeyDown(e)}\n                  />\n                  {this.allowClear &&\n                  !this.disabled &&\n                  !this.readonly &&\n                  (this.selectedLabels?.length || this.inputFilterText) ? (\n                    <ix-icon-button\n                      key=\"clear\"\n                      class=\"clear\"\n                      icon={iconClear}\n                      ghost\n                      oval\n                      size=\"16\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        this.clear();\n                      }}\n                    />\n                  ) : null}\n                  {this.disabled || this.readonly ? null : (\n                    <ix-icon-button\n                      data-select-dropdown\n                      key=\"dropdown\"\n                      class={{ 'dropdown-visible': this.dropdownShow }}\n                      icon={iconChevronDownSmall}\n                      ghost\n                      ref={(ref) => {\n                        if (this.editable) this.dropdownWrapperRef(ref);\n                      }}\n                    ></ix-icon-button>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </ix-field-wrapper>\n        <ix-dropdown\n          ref={(ref) => (this.dropdownElement = ref!)}\n          show={this.dropdownShow}\n          closeBehavior={this.isMultipleMode ? 'outside' : 'both'}\n          class={{\n            'display-none': this.disabled || this.readonly,\n          }}\n          anchor={this.dropdownAnchorRef.waitForCurrent()}\n          trigger={this.dropdownWrapperRef.waitForCurrent()}\n          onShowChanged={(e) => this.dropdownVisibilityChanged(e)}\n          placement=\"bottom-start\"\n          overwriteDropdownStyle={async () => {\n            const styleOverwrites: Partial<CSSStyleDeclaration> = {};\n\n            const minWidth = this.hostElement.shadowRoot\n              ?.querySelector('.select')\n              ?.getBoundingClientRect().width;\n\n            if (minWidth) {\n              styleOverwrites.minWidth = `${minWidth}px`;\n            }\n\n            if (this.dropdownWidth) {\n              styleOverwrites.width = `min(${this.dropdownWidth}, 100%)`;\n            }\n\n            if (this.dropdownMaxWidth) {\n              styleOverwrites.maxWidth = `min(${this.dropdownMaxWidth}, 100%)`;\n            }\n\n            return styleOverwrites;\n          }}\n        >\n          <div\n            class={{\n              'select-list-header': true,\n              hidden: this.hideListHeader || this.isDropdownEmpty,\n            }}\n            title={this.i18nSelectListHeader}\n            onClick={(e) => e.preventDefault()}\n          >\n            {this.i18nSelectListHeader}\n          </div>\n          <slot\n            onSlotchange={() => {\n              this.updateSelection();\n            }}\n          ></slot>\n          <div ref={(ref) => (this.customItemsContainerElement = ref!)}></div>\n          {this.isAddItemVisible() ? (\n            <ix-dropdown-item\n              data-testid=\"add-item\"\n              icon={iconPlus}\n              class={{\n                'add-item': true,\n              }}\n              label={this.inputFilterText}\n              onItemClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                this.emitAddItem(this.inputFilterText);\n              }}\n              onFocus={() => (this.navigationItem = this.addItemElement)}\n              ref={(ref) => {\n                this.addItemElement = ref!;\n              }}\n            ></ix-dropdown-item>\n          ) : null}\n          {this.isDropdownEmpty && !this.editable ? (\n            <div class=\"select-list-header\">{this.i18nNoMatches}</div>\n          ) : (\n            ''\n          )}\n        </ix-dropdown>\n      </Host>\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'legacy/mixins/fonts';\n@import 'mixins/hover';\n@import 'mixins/text-truncation';\n@import 'mixins/shadow-dom/component';\n@import 'mixins/field';\n@import 'mixins/validation/form-component';\n\n:host {\n  @include ix-component;\n\n  display: inline-block;\n  position: relative;\n  min-height: 2rem;\n  height: auto;\n  border-radius: var(--theme-input--border-radius);\n\n  .display-none {\n    display: none;\n  }\n\n  .select {\n    position: relative;\n    display: flex;\n    align-items: center;\n    width: 100%;\n    background-color: var(--theme-input--background);\n    border: var(--theme-input--border-thickness) solid\n      var(--theme-input--border-color);\n    border-radius: var(--theme-input--border-radius);\n    padding: 0 0 0 $small-space;\n    box-shadow: var(--theme-inset-shadow-1) !important;\n\n    @include hover {\n      background-color: var(--theme-input--background--hover);\n      border-color: var(--theme-input--border-color--hover);\n    }\n\n    &:focus-within {\n      background-color: var(--theme-input--background--focus);\n      border-color: var(--theme-input--border-color--focus);\n      outline: 1px solid #119fff;\n      outline-offset: var(--theme-input--focus--outline-offset);\n    }\n  }\n\n  .select.readonly,\n  .select.disabled {\n    box-shadow: none !important;\n    border: none;\n    border-radius: 0;\n    cursor: pointer;\n\n    &,\n    &:hover,\n    &:active {\n      background-color: transparent !important;\n    }\n\n    &:focus,\n    &:focus-within,\n    &:focus-visible {\n      outline: none;\n    }\n\n    input:focus,\n    input:focus-visible {\n      outline: none;\n    }\n  }\n\n  .select.disabled {\n    border-bottom: var(--theme-input--border-thickness) solid\n      var(--theme-color-weak-bdr);\n\n    input {\n      color: var(--theme-color-weak-text);\n    }\n  }\n\n  .select.readonly {\n    border-bottom: var(--theme-input--border-thickness) solid\n      var(--theme-color-soft-bdr);\n\n    input {\n      color: var(--theme-color-std-text);\n    }\n  }\n\n  .hidden {\n    display: none !important;\n  }\n\n  .trigger {\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    height: 100%;\n  }\n\n  .input-container {\n    display: flex;\n    position: relative;\n    align-items: flex-start;\n    width: 100%;\n    height: 100%;\n\n    .chips {\n      position: relative;\n      display: flex;\n      align-items: center;\n      flex-wrap: wrap;\n      height: 100%;\n      max-height: 3.5rem;\n      flex-grow: 1;\n      overflow-y: auto;\n\n      > ix-filter-chip {\n        margin: 0.1rem;\n      }\n    }\n\n    ix-icon-button {\n      height: 1.875rem;\n      width: 1.875rem;\n      min-height: 1.875rem;\n      min-width: 1.875rem;\n    }\n\n    input {\n      @include ellipsis;\n      @include text-default;\n      background: transparent;\n      height: 1.75rem;\n      width: 100%;\n\n      &,\n      &:hover,\n      &:focus-visible {\n        border: none;\n        outline: none;\n      }\n\n      &::placeholder {\n        color: var(--theme-input-select-icon--color);\n      }\n\n      &.hide-placeholder::placeholder {\n        opacity: 0;\n      }\n    }\n  }\n\n  ix-dropdown {\n    max-width: 100%;\n  }\n\n  .dropdown-visible {\n    --ix-icon-button-color: var(--theme-color-dynamic--hover);\n  }\n\n  .add-item {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    position: relative;\n    width: 100%;\n  }\n\n  .select-list-header {\n    @include ellipsis;\n    display: flex;\n    align-items: center;\n    height: $default-control-height;\n    color: var(--theme-select-list-item-hint--color);\n    margin: 0 $small-space 0 1rem;\n  }\n}\n\n\n\n@include host-valid;\n\n@include host-info {\n  .select {\n    border-color: var(--theme-input--border-color--info);\n  }\n\n  .select:hover {\n    border-color: var(--theme-input--border-color--info--hover) !important;\n  }\n\n  .select:active {\n    border-color: var(--theme-input--border-color--info--active) !important;\n  }\n}\n\n@include host-warning {\n  .select {\n    border-color: var(--theme-input--border-color--warning);\n  }\n\n  .select:hover {\n    border-color: var(--theme-input--border-color--warning--hover) !important;\n  }\n\n  .select:active {\n    border-color: var(--theme-input--border-color--warning--active) !important;\n  }\n}\n\n@include host-invalid {\n  .select {\n    border-color: var(--theme-input--border-color--invalid);\n    background-color: var(--theme-input--background--invalid);\n    box-shadow: none;\n  }\n\n  .select:hover {\n    border-color: var(--theme-input--border-color--invalid--hover) !important;\n  }\n\n  .select:active {\n    border-color: var(--theme-input--border-color--invalid--active) !important;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport const isHttpUrl = (link: string) => {\n  if (!link) {\n    return false;\n  }\n\n  let url: URL;\n\n  try {\n    url = new URL(link);\n  } catch (e) {\n    return false;\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:';\n};\n\nexport const isSvgDataUrl = (url: string) => {\n  if (!url) {\n    return false;\n  }\n\n  if (typeof url !== 'string') {\n    return false;\n  }\n\n  return url.startsWith('data:image/svg+xml');\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { isHttpUrl, isSvgDataUrl } from './condition-checks';\n\nexport const a11yBoolean = (value: boolean | undefined) =>\n  value ? 'true' : 'false';\n\nconst kebabCaseToUpperCaseSentence = (kebabCase: string) => {\n  const withoutFilledSuffix = kebabCase.replace('-filled', '');\n  const words = withoutFilledSuffix.split('-');\n  const sentence = words\n    .map((word) => {\n      const trimWord = word.trim();\n      const digitLessWord = trimWord.replace(/\\d+/g, '');\n\n      if (digitLessWord.length === 0) {\n        return trimWord;\n      }\n\n      return digitLessWord;\n    })\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n\n  return sentence;\n};\n\nexport const getFallbackLabelFromIconName = (iconName?: string) => {\n  if (!iconName) {\n    return 'Unknown';\n  }\n\n  if (isHttpUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  if (isSvgDataUrl(iconName)) {\n    return 'Unknown';\n  }\n\n  const label = kebabCaseToUpperCaseSentence(iconName);\n\n  if (label.length === 0) {\n    return 'Unknown';\n  }\n\n  return label;\n};\n\nexport const a11yHostAttributes = (\n  hostElement: HTMLElement,\n  ignoreAttributes: A11yAttributeName[] = []\n): Record<A11yAttributeName, string> => {\n  const attributeObject: Record<string, string> = {};\n  a11yAttributes.forEach((attr) => {\n    if (hostElement.hasAttribute(attr)) {\n      const value = hostElement.getAttribute(attr);\n      if (value !== null && !ignoreAttributes.includes(attr)) {\n        attributeObject[attr] = hostElement.getAttribute(attr) ?? '';\n        hostElement.removeAttribute(attr);\n      }\n    }\n  });\n\n  return attributeObject;\n};\n\nexport type A11yAttributeName =\n  | 'role'\n  | 'aria-activedescendant'\n  | 'aria-atomic'\n  | 'aria-autocomplete'\n  | 'aria-braillelabel'\n  | 'aria-brailleroledescription'\n  | 'aria-busy'\n  | 'aria-checked'\n  | 'aria-colcount'\n  | 'aria-colindex'\n  | 'aria-colindextext'\n  | 'aria-colspan'\n  | 'aria-controls'\n  | 'aria-current'\n  | 'aria-describedby'\n  | 'aria-description'\n  | 'aria-details'\n  | 'aria-disabled'\n  | 'aria-errormessage'\n  | 'aria-expanded'\n  | 'aria-flowto'\n  | 'aria-haspopup'\n  | 'aria-hidden'\n  | 'aria-invalid'\n  | 'aria-keyshortcuts'\n  | 'aria-label'\n  | 'aria-labelledby'\n  | 'aria-level'\n  | 'aria-live'\n  | 'aria-multiline'\n  | 'aria-multiselectable'\n  | 'aria-orientation'\n  | 'aria-owns'\n  | 'aria-placeholder'\n  | 'aria-posinset'\n  | 'aria-pressed'\n  | 'aria-readonly'\n  | 'aria-relevant'\n  | 'aria-required'\n  | 'aria-roledescription'\n  | 'aria-rowcount'\n  | 'aria-rowindex'\n  | 'aria-rowindextext'\n  | 'aria-rowspan'\n  | 'aria-selected'\n  | 'aria-setsize'\n  | 'aria-sort'\n  | 'aria-valuemax'\n  | 'aria-valuemin'\n  | 'aria-valuenow'\n  | 'aria-valuetext';\n\nconst a11yAttributes: A11yAttributeName[] = [\n  'role',\n  'aria-activedescendant',\n  'aria-atomic',\n  'aria-autocomplete',\n  'aria-braillelabel',\n  'aria-brailleroledescription',\n  'aria-busy',\n  'aria-checked',\n  'aria-colcount',\n  'aria-colindex',\n  'aria-colindextext',\n  'aria-colspan',\n  'aria-controls',\n  'aria-current',\n  'aria-describedby',\n  'aria-description',\n  'aria-details',\n  'aria-disabled',\n  'aria-errormessage',\n  'aria-expanded',\n  'aria-flowto',\n  'aria-haspopup',\n  'aria-hidden',\n  'aria-invalid',\n  'aria-keyshortcuts',\n  'aria-label',\n  'aria-labelledby',\n  'aria-level',\n  'aria-live',\n  'aria-multiline',\n  'aria-multiselectable',\n  'aria-orientation',\n  'aria-owns',\n  'aria-placeholder',\n  'aria-posinset',\n  'aria-pressed',\n  'aria-readonly',\n  'aria-relevant',\n  'aria-required',\n  'aria-roledescription',\n  'aria-rowcount',\n  'aria-rowindex',\n  'aria-rowindextext',\n  'aria-rowspan',\n  'aria-selected',\n  'aria-setsize',\n  'aria-sort',\n  'aria-valuemax',\n  'aria-valuemin',\n  'aria-valuenow',\n  'aria-valuetext',\n];\n\ntype PartialRecord<K extends A11yAttributeName, T> = {\n  [P in K]?: T;\n};\nexport type A11yAttributes = PartialRecord<A11yAttributeName, string>;\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport type MakeRef<T> = {\n  (ref: T | undefined | null): void;\n  current: T | null;\n  waitForCurrent(): Promise<T>;\n};\n\ntype Resolve<T> = (value: T) => void;\n\nexport function makeRef<T>(\n  currentChangedCallback?: (element: T) => void\n): MakeRef<T> {\n  let resolve: Resolve<T> | undefined = undefined;\n  let currentPromise = new Promise<T>((res) => (resolve = res));\n  let current: T | undefined = undefined;\n\n  const setRefFunction = (ref: T | undefined) => {\n    if (ref === undefined) {\n      return;\n    }\n    current = (setRefFunction as MakeRef<T>).current = ref;\n    currentChangedCallback?.(ref);\n    resolve?.(ref);\n  };\n\n  setRefFunction.current = current as T | null;\n\n  setRefFunction.waitForCurrent = async () => {\n    await currentPromise;\n    return current;\n  };\n\n  return setRefFunction as MakeRef<T>;\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport type DisposableEventListener = () => void;\n\nexport const addDisposableEventListener = (\n  element: Element | Window | Document,\n  eventType: string,\n  callback: EventListenerOrEventListenerObject\n): DisposableEventListener => {\n  element.addEventListener(eventType, callback);\n\n  return () => {\n    element.removeEventListener(eventType, callback);\n  };\n};\n\nexport const addDisposableEventListenerAsArray = (\n  listener: {\n    element: Element | Window | Document;\n    eventType: string;\n    callback: EventListenerOrEventListenerObject;\n  }[]\n): DisposableEventListener => {\n  const disposables = listener.map(({ callback, element, eventType }) =>\n    addDisposableEventListener(element, eventType, callback)\n  );\n\n  return () => disposables.forEach((dispose) => dispose());\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getElement } from '@stencil/core';\nimport { HTMLIxFormComponentElement, IxFormComponent } from '.';\nimport { IxComponent } from '../internal';\n\nexport type ClassMutationObserver = {\n  destroy: () => void;\n};\n\nexport async function isTouched<T>(host: IxFormComponent<T>) {\n  if (typeof host.isTouched === 'function') {\n    return host.isTouched();\n  }\n}\n\nexport async function shouldSuppressInternalValidation<T>(\n  host: IxFormComponent<T>\n) {\n  if (\n    host.getAssociatedFormElement &&\n    typeof host.getAssociatedFormElement === 'function'\n  ) {\n    const form = await host.getAssociatedFormElement();\n\n    if (!form) {\n      return false;\n    }\n\n    return form.noValidate;\n  }\n\n  return false;\n}\n\nexport function createClassMutationObserver(\n  element: HTMLElement,\n  callback: () => void,\n  options?: {\n    includeChildren?: boolean;\n  }\n): ClassMutationObserver {\n  const observer = new MutationObserver(callback);\n  observer.observe(element, {\n    subtree: options?.includeChildren,\n    childList: options?.includeChildren,\n    attributes: true,\n    attributeFilter: ['class'],\n  });\n\n  return {\n    destroy() {\n      observer.disconnect();\n    },\n  };\n}\n\nexport type ValidationResultProperty =\n  | 'isInvalid'\n  | 'isInvalidByRequired'\n  | 'isValid'\n  | 'isInfo'\n  | 'isWarning';\nexport type ValidationResults = Record<ValidationResultProperty, boolean>;\n\nfunction containsClass(\n  hostElement: HTMLIxFormComponentElement<unknown>,\n  className: string,\n  includeChildren: boolean\n) {\n  return (\n    hostElement.classList.contains(`${className}`) ||\n    (includeChildren ? !!hostElement.querySelector(`.${className}`) : false)\n  );\n}\n\nexport function checkFieldClasses(\n  hostElement: HTMLIxFormComponentElement<unknown>,\n  includeChildren = false\n): ValidationResults {\n  return {\n    isInvalid: containsClass(hostElement, 'ix-invalid', includeChildren),\n    isInvalidByRequired: containsClass(\n      hostElement,\n      'ix-invalid--required',\n      includeChildren\n    ),\n    isValid: containsClass(hostElement, 'ix-valid', includeChildren),\n    isInfo: containsClass(hostElement, 'ix-info', includeChildren),\n    isWarning: containsClass(hostElement, 'ix-warning', includeChildren),\n  };\n}\n\nexport function HookValidationLifecycle(options?: {\n  includeChildren?: boolean;\n}) {\n  return (proto: IxComponent, methodName: string) => {\n    let checkIfRequiredFunction: (() => Promise<void>) | null;\n    let classMutationObserver: ClassMutationObserver | null;\n    const { componentWillLoad, disconnectedCallback, connectedCallback } =\n      proto;\n\n    proto.connectedCallback = function () {\n      const host = getElement(\n        this\n      ) as unknown as HTMLIxFormComponentElement<unknown>;\n\n      checkIfRequiredFunction = async () => {\n        const skipValidation = await shouldSuppressInternalValidation(host);\n        if (skipValidation) {\n          return;\n        }\n\n        if (host.hasValidValue && typeof host.hasValidValue === 'function') {\n          const hasValue = await host.hasValidValue();\n          const touched = await isTouched(host);\n\n          if (host.required) {\n            host.classList.toggle('ix-invalid--required', !hasValue && touched);\n          } else {\n            host.classList.remove('ix-invalid--required');\n          }\n        }\n\n        if (\n          host.getValidityState &&\n          typeof host.getValidityState === 'function'\n        ) {\n          const validityState = await host.getValidityState();\n\n          host.classList.toggle(\n            `ix-invalid--validity-patternMismatch`,\n            validityState.patternMismatch\n          );\n        }\n      };\n\n      host.addEventListener('checkedChange', checkIfRequiredFunction);\n      host.addEventListener('valueChange', checkIfRequiredFunction);\n      host.addEventListener('ixBlur', checkIfRequiredFunction);\n      setTimeout(checkIfRequiredFunction);\n      return connectedCallback?.call(this);\n    };\n\n    proto.componentWillLoad = function () {\n      const host = getElement(\n        this\n      ) as unknown as HTMLIxFormComponentElement<unknown>;\n      classMutationObserver = createClassMutationObserver(\n        host,\n        () => {\n          const result = checkFieldClasses(host, options?.includeChildren);\n          proto[methodName].call(this, result);\n        },\n        options\n      );\n      const result = checkFieldClasses(host, options?.includeChildren);\n      proto[methodName].call(this, result);\n      return componentWillLoad?.call(this);\n    };\n\n    proto.disconnectedCallback = function () {\n      const host = getElement(this);\n\n      if (host && classMutationObserver) {\n        classMutationObserver.destroy();\n        classMutationObserver = null;\n      }\n\n      if (host && checkIfRequiredFunction) {\n        host.removeEventListener('checkedChange', checkIfRequiredFunction);\n        host.removeEventListener('valueChange', checkIfRequiredFunction);\n        host.removeEventListener('ixBlur', checkIfRequiredFunction);\n        checkIfRequiredFunction = null;\n      }\n\n      return disconnectedCallback?.call(this);\n    };\n  };\n}\n"],"names":["ArrowFocusController","constructor","items","container","callback","wrap","this","keyListener","addDisposableEventListener","e","onKeyDown","getActiveIndex","document","activeElement","indexOf","activeIndex","key","length","preventDefault","_a","call","_b","_c","_d","disconnect","undefined","createMutationObserver","MutationObserver","defaultOptions","target","defaultEnabled","OnListener","event","fnExp","proto","methodName","componentWillLoad","componentWillRender","disconnectedCallback","getElement","concat","enable","listener","options","arguments","opts","Object","assign","onEvent","resultObject","on","onEventCallback","isEnabled","state","addEventListener","removeEventListener","destroy","createListener","host","method","bind","Select","hostRef","required","value","allowClear","mode","editable","disabled","readonly","i18nPlaceholder","i18nPlaceholderEditable","i18nSelectListHeader","i18nNoMatches","hideListHeader","dropdownShow","selectedLabels","isDropdownEmpty","inputFilterText","inputValue","isInvalid","isValid","isInfo","isWarning","dropdownWrapperRef","makeRef","dropdownAnchorRef","inputRef","touched","itemObserver","arrowFocusController","visibleNonShadowItems","focusControllerCallbackBind","focusDropdownItem","nonShadowItems","Array","from","hostElement","querySelectorAll","filter","item","classList","contains","shadowItems","shadowRoot","visibleShadowItems","visibleItems","selectedItems","selected","addItemButton","querySelector","isSingleMode","isMultipleMode","isEveryDropdownItemHidden","every","watchValue","updateSelection","watchDropdownShow","show","dropdownElement","observe","childList","subtree","cleanupResources","onItemClicked","newId","detail","itemClick","updateFormInternalValue","isArray","formInternals","setFormValue","join","hasValidValue","hasValue","index","navigationItem","nestedDropdownItem","requestAnimationFrame","focus","oldValue","toggleValue","emitValueChange","emitAddItem","trim","defaultPrevented","addItem","emit","newItem","createElement","label","customItemsContainerElement","appendChild","clearInput","itemValue","includes","ids","forEach","some","i","toString","map","inputElement","valueChange","componentDidLoad","inputChange","componentDidRender","isAddItemVisible","onLabelChange","stopImmediatePropagation","itemExists","find","dropdownVisibilityChanged","select","removeHiddenFromItems","code","onArrowNavigation","onEnterNavigation","el","itemLabel","stopPropagation","applyFocusTo","shift","focusAddItemButton","moveUp","indexNonShadow","pop","addItemElement","getDropdownItemElement","indexShadow","element","setTimeout","filterItemsWithTypeahead","remove","toLowerCase","add","clear","onInputBlur","ixBlur","placeholderValue","onValidationChange","_ref","isInvalidByRequired","getAssociatedFormElement","form","getNativeInputElement","Promise","resolve","reject","Error","focusInput","isTouched","render","h","Host","a11yBoolean","class","helperText","invalidText","infoText","warningText","validText","showTextAsTooltip","controlRef","ref","onCloseClick","autocomplete","readOnly","type","placeholder","onBlur","onFocus","onInput","icon","iconClear","ghost","oval","size","onClick","iconChevronDownSmall","closeBehavior","anchor","waitForCurrent","trigger","onShowChanged","placement","overwriteDropdownStyle","async","styleOverwrites","minWidth","getBoundingClientRect","width","dropdownWidth","dropdownMaxWidth","maxWidth","hidden","title","onSlotchange","iconPlus","onItemClick","__decorate","self","prototype","HookValidationLifecycle","getFallbackLabelFromIconName","iconName","link","url","URL","protocol","isHttpUrl","startsWith","replace","split","word","trimWord","digitLessWord","charAt","toUpperCase","slice","a11yHostAttributes","ignoreAttributes","attributeObject","a11yAttributes","attr","hasAttribute","getAttribute","removeAttribute","currentChangedCallback","current","currentPromise","res","setRefFunction","eventType","addDisposableEventListenerAsArray","disposables","dispose","shouldSuppressInternalValidation","noValidate","createClassMutationObserver","observer","includeChildren","attributes","attributeFilter","containsClass","className","checkFieldClasses","checkIfRequiredFunction","classMutationObserver","connectedCallback","toggle","getValidityState","validityState","patternMismatch","result"],"sourceRoot":""}